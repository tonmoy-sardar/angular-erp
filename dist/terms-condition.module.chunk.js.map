{"version":3,"sources":["./src/app/layout/terms-condition/terms-condition-add/terms-condition-add.component.html","./src/app/layout/terms-condition/terms-condition-add/terms-condition-add.component.scss","./src/app/layout/terms-condition/terms-condition-add/terms-condition-add.component.ts","./src/app/layout/terms-condition/terms-condition-edit/terms-condition-edit.component.html","./src/app/layout/terms-condition/terms-condition-edit/terms-condition-edit.component.scss","./src/app/layout/terms-condition/terms-condition-edit/terms-condition-edit.component.ts","./src/app/layout/terms-condition/terms-condition-routing.module.ts","./src/app/layout/terms-condition/terms-condition.component.html","./src/app/layout/terms-condition/terms-condition.component.scss","./src/app/layout/terms-condition/terms-condition.component.ts","./src/app/layout/terms-condition/terms-condition.module.ts"],"names":[],"mappings":"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","file":"terms-condition.module.chunk.js","sourcesContent":["module.exports = \"<div>\\r\\n    <!-- <app-page-header [heading]=\\\"'Terms & Conditions Add'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h4 class=\\\"page-header\\\">Terms & Conditions Add</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('terms-condition')\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Terms & Conditions Add</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label>Term Type</label>\\r\\n                                    <select class=\\\"form-control\\\" name=\\\"term_type\\\" formControlName=\\\"term_type\\\" [ngClass]=\\\"displayFieldCss('term_type')\\\">\\r\\n                                        <option value=\\\"\\\">Select Type</option>\\r\\n                                        <option value=\\\"1\\\">Payment</option>\\r\\n                                        <option value=\\\"2\\\">Delivery</option>\\r\\n                                        <option value=\\\"3\\\">Others</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['term_type'].hasError('required')\\\">\\r\\n                                        Please select term type\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label>Company</label>\\r\\n                                    <select class=\\\"form-control\\\" name=\\\"company\\\" formControlName=\\\"company\\\" [ngClass]=\\\"displayFieldCss('company')\\\">\\r\\n                                        <option value=\\\"\\\">Select company</option>\\r\\n                                        <option value=\\\"{{country.id}}\\\" *ngFor=\\\"let country of companyList\\\">{{country.company_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company'].hasError('required')\\\">\\r\\n                                        Please select company\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label>Terms & Conditions</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"term_text\\\" [ngClass]=\\\"displayFieldCss('term_text')\\\" name=\\\"term_text\\\"\\r\\n                                        placeholder=\\\"Terms & Conditions\\\"></textarea>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['term_text'].hasError('required')\\\">\\r\\n                                        Please enter terms and conditions\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addNewTerms()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/terms-condition/terms-condition-add/terms-condition-add.component.html\n// module id = ./src/app/layout/terms-condition/terms-condition-add/terms-condition-add.component.html\n// module chunks = terms-condition.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/terms-condition/terms-condition-add/terms-condition-add.component.scss\n// module id = ./src/app/layout/terms-condition/terms-condition-add/terms-condition-add.component.scss\n// module chunks = terms-condition.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CompanyService } from '../../company/company.service';\r\nimport { TermsConditionService } from '../terms-condition.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-terms-condition-add',\r\n  templateUrl: './terms-condition-add.component.html',\r\n  styleUrls: ['./terms-condition-add.component.scss']\r\n})\r\nexport class TermsConditionAddComponent implements OnInit {\r\n  form: FormGroup;\r\n  companyList = [];\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private termsConditionService: TermsConditionService,\r\n    private companyService: CompanyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      term_type: new FormControl('', Validators.required),\r\n      company: new FormControl('', Validators.required),\r\n      term_text: new FormControl('', Validators.required)\r\n    });\r\n    this.getCompanyDropdownList()\r\n  }\r\n\r\n  btnClickNav(toNav) {\r\n    this.router.navigateByUrl('/'+toNav);\r\n  };\r\n\r\n  goToList(toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n  getCompanyDropdownList() {\r\n    this.companyService.getCompanyDropdownList().subscribe(\r\n      (data: any[]) => {\r\n        this.companyList = data;\r\n        // console.log(this.companyList);\r\n      }\r\n    );\r\n  };\r\n  addNewTerms() {\r\n    if (this.form.valid) {\r\n      this.termsConditionService.addNewTerms(this.form.value).subscribe(\r\n        response => {\r\n          // console.log(response)\r\n          this.toastr.success('Terms and services added successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('terms-condition');\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': this.form.controls[field].invalid && (this.form.controls[field].dirty || this.form.controls[field].touched),\r\n      'is-valid': this.form.controls[field].valid && (this.form.controls[field].dirty || this.form.controls[field].touched)\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/terms-condition/terms-condition-add/terms-condition-add.component.ts","module.exports = \"<div>\\r\\n    <!-- <app-page-header [heading]=\\\"'Terms & Conditions Edit'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h4 class=\\\"page-header\\\">Terms & Conditions Edit</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('terms-condition')\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Terms & Conditions Edit</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label>Term Type</label>\\r\\n                                    <select class=\\\"form-control\\\" name=\\\"term_type\\\" formControlName=\\\"term_type\\\" [ngClass]=\\\"displayFieldCss('term_type')\\\" [(ngModel)]=\\\"termsCondition.term_type\\\">\\r\\n                                        <option value=\\\"\\\">Select Type</option>\\r\\n                                        <option value=\\\"1\\\">Payment</option>\\r\\n                                        <option value=\\\"2\\\">Delivery</option>\\r\\n                                        <option value=\\\"3\\\">Others</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['term_type'].hasError('required')\\\">\\r\\n                                        Please select term type\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label>Company</label>\\r\\n                                    <select class=\\\"form-control\\\" name=\\\"company\\\" formControlName=\\\"company\\\" [ngClass]=\\\"displayFieldCss('company')\\\" [(ngModel)]=\\\"termsCondition.company\\\">\\r\\n                                        <option value=\\\"\\\">Select Type</option>\\r\\n                                        <option value=\\\"{{country.id}}\\\" *ngFor=\\\"let country of companyList\\\">{{country.company_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company'].hasError('required')\\\">\\r\\n                                        Please select company\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label>Terms & Conditions</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"term_text\\\" [ngClass]=\\\"displayFieldCss('term_text')\\\" name=\\\"term_text\\\"\\r\\n                                        placeholder=\\\"Terms & Conditions\\\" [(ngModel)]=\\\"termsCondition.term_text\\\">{{termsCondition.term_text}}</textarea>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['term_text'].hasError('required')\\\">\\r\\n                                        Please enter terms and conditions\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateTerms()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/terms-condition/terms-condition-edit/terms-condition-edit.component.html\n// module id = ./src/app/layout/terms-condition/terms-condition-edit/terms-condition-edit.component.html\n// module chunks = terms-condition.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/terms-condition/terms-condition-edit/terms-condition-edit.component.scss\n// module id = ./src/app/layout/terms-condition/terms-condition-edit/terms-condition-edit.component.scss\n// module chunks = terms-condition.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../../company/company.service';\r\nimport { TermsConditionService } from '../terms-condition.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-terms-condition-edit',\r\n  templateUrl: './terms-condition-edit.component.html',\r\n  styleUrls: ['./terms-condition-edit.component.scss']\r\n})\r\nexport class TermsConditionEditComponent implements OnInit {\r\n  termsCondition;\r\n  form: FormGroup;\r\n  companyList = [];\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private termsConditionService: TermsConditionService,\r\n    private companyService: CompanyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      term_type: new FormControl('', Validators.required),\r\n      company: new FormControl('', Validators.required),\r\n      term_text: new FormControl('', Validators.required)\r\n    });\r\n    this.termsCondition = {\r\n      term_type: '',\r\n      company: '',\r\n      term_text: ''\r\n    };\r\n    this.getCompanyDropdownList()\r\n    this.getTermsCondition(this.route.snapshot.params['id']);\r\n  }\r\n  getCompanyDropdownList() {\r\n    this.companyService.getCompanyDropdownList().subscribe(\r\n      (data: any[]) => {\r\n        this.companyList = data;\r\n        // console.log(this.companyList);\r\n      }\r\n    );\r\n  };\r\n  getTermsCondition(id) {\r\n    this.termsConditionService.getTermsDetails(id).subscribe(\r\n      (data: any[]) => {\r\n        this.termsCondition = data;\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n  goToList(toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n  updateTerms () {\r\n    if (this.form.valid) {\r\n      this.termsConditionService.updateTerms(this.termsCondition).subscribe(\r\n        response => {\r\n          // console.log(response)\r\n          this.toastr.success('Terms and services updated successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('terms-condition');\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': this.form.controls[field].invalid && (this.form.controls[field].dirty || this.form.controls[field].touched),\r\n      'is-valid': this.form.controls[field].valid && (this.form.controls[field].dirty || this.form.controls[field].touched)\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/terms-condition/terms-condition-edit/terms-condition-edit.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TermsConditionComponent } from './terms-condition.component';\nimport { TermsConditionAddComponent } from './terms-condition-add/terms-condition-add.component';\nimport { TermsConditionEditComponent } from './terms-condition-edit/terms-condition-edit.component';\n\nconst routes: Routes = [\n  {\n  path: '',\n  component: TermsConditionComponent\n  },\n  {\n    path: 'add',\n    component: TermsConditionAddComponent\n  },\n  {\n    path: 'edit/:id',\n    component: TermsConditionEditComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TermsConditionRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/terms-condition/terms-condition-routing.module.ts","module.exports = \"<div>\\r\\n  <!-- <app-page-header [heading]=\\\"'Terms & Condition List'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4 class=\\\"page-header\\\">Terms & Condition List</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('terms-condition/add')\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i> New Terms & Condition</button>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <hr/>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-9\\\">\\r\\n              <h5>Terms & Condition</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <form role=\\\"form\\\" (ngSubmit)=\\\"dataSearch()\\\">\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"search_key\\\">\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\">\\r\\n                      <i class=\\\"fa fa-search\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Sl.No.</th>\\r\\n              <th>Terms & Condition</th>\\r\\n              <th>Company Name</th>\\r\\n              <th>Created Date</th>\\r\\n              <th>Status</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let term of termsList ; let i = index\\\">\\r\\n              <th scope=\\\"row\\\">{{i +1}}</th>\\r\\n              <td>{{term.term_text}}</td>\\r\\n              <td>{{getCompanyName(term.company)}}</td>\\r\\n              <td>{{term.created_at | date:'dd-MM-yyyy'}}</td>\\r\\n              <td>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Active\\\" name=\\\"Active\\\" (click)=\\\"inactiveState(term.id)\\\" *ngIf=\\\"term.status==true\\\">\\r\\n                  <i class=\\\"fa fa-thumbs-up\\\"></i> Active</a>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Inactive\\\" name=\\\"Inactive\\\" (click)=\\\"activeState(term.id)\\\" *ngIf=\\\"term.status==false\\\">\\r\\n                  <i class=\\\"fa fa-thumbs-down\\\"></i> Inactive</a>\\r\\n              </td>\\r\\n              <td>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Edit\\\" name=\\\"Edit\\\" [routerLink]=\\\"['/terms-condition/edit', term.id]\\\">\\r\\n                  <i class=\\\"fa fa-edit\\\"></i>\\r\\n                </a>&nbsp;&nbsp;&nbsp;\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Map\\\" name=\\\"Map\\\" (click)=\\\"deleteTerm(term.id)\\\">\\r\\n                  <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"termsList.length == 0\\\">\\r\\n              <td colspan=\\\"6\\\" class=\\\"text-center\\\">No record found</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"totaltermsList > 10\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card-body pull-right\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"totaltermsList\\\" [(page)]=\\\"defaultPagination\\\" (pageChange)=\\\"pagination()\\\" size=\\\"sm\\\"></ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/terms-condition/terms-condition.component.html\n// module id = ./src/app/layout/terms-condition/terms-condition.component.html\n// module chunks = terms-condition.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/terms-condition/terms-condition.component.scss\n// module id = ./src/app/layout/terms-condition/terms-condition.component.scss\n// module chunks = terms-condition.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TermsConditionService } from './terms-condition.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CompanyService } from '../company/company.service';\r\n@Component({\r\n  selector: 'app-terms-condition',\r\n  templateUrl: './terms-condition.component.html',\r\n  styleUrls: ['./terms-condition.component.scss']\r\n})\r\nexport class TermsConditionComponent implements OnInit {\r\n  termsList = [];\r\n  defaultPagination: number;\r\n  totaltermsList: number;\r\n  search_key = '';\r\n  companyList = [];\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private termsConditionService: TermsConditionService,\r\n    private companyService: CompanyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.defaultPagination = 1;\r\n    this.getTermsList();\r\n    this.getCompanyDropdownList()\r\n  }\r\n\r\n  dataSearch() {\r\n    this.defaultPagination = 1;\r\n    this.getTermsList();\r\n  }\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  getCompanyDropdownList() {\r\n    this.companyService.getCompanyDropdownList().subscribe(\r\n      (data: any[]) => {\r\n        this.companyList = data;\r\n        // console.log(this.companyList);\r\n      }\r\n    );\r\n  };\r\n  getTermsList() {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set('page', this.defaultPagination.toString());\r\n    params.set('search', this.search_key.toString());\r\n    this.termsConditionService.getTermsList(params).subscribe(\r\n      (data: any[]) => {\r\n        this.totaltermsList = data['count'];\r\n        this.termsList = data['results'];\r\n        // console.log(this.termsList)\r\n      }\r\n    );\r\n  };\r\n  getCompanyName(id) {\r\n    var data = { id: 0, company_name: '' }\r\n    data = this.companyList.filter(x => x.id === id)[0];\r\n    if (data != undefined) {\r\n      return data.company_name\r\n    }\r\n  }\r\n  activeState(id) {\r\n    let terms;\r\n\r\n    terms = {\r\n      id: id,\r\n      status: true\r\n    };\r\n    this.termsConditionService.activeInactiveTerms(terms).subscribe(\r\n      response => {\r\n        this.toastr.success('Status changed successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getTermsList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  inactiveState(id) {\r\n    let terms;\r\n\r\n    terms = {\r\n      id: id,\r\n      status: false\r\n    };\r\n\r\n    this.termsConditionService.activeInactiveTerms(terms).subscribe(\r\n      response => {\r\n        this.toastr.success('Status changed successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getTermsList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  deleteTerm(id) {\r\n    let terms;\r\n\r\n    terms = {\r\n      id: id\r\n    };\r\n\r\n    this.termsConditionService.deleteTerms(terms).subscribe(\r\n      response => {\r\n        this.toastr.success('Terms deleted successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getTermsList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  pagination() {\r\n    this.getTermsList();\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/terms-condition/terms-condition.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BsComponentModule } from '../bs-component/bs-component.module';\r\nimport { TermsConditionRoutingModule } from './terms-condition-routing.module';\r\nimport { TermsConditionComponent } from './terms-condition.component';\r\nimport { TermsConditionAddComponent } from './terms-condition-add/terms-condition-add.component';\r\nimport { TermsConditionEditComponent } from './terms-condition-edit/terms-condition-edit.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { TermsConditionService } from './terms-condition.service';\r\nimport { CompanyService } from '../company/company.service';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    TermsConditionRoutingModule,\r\n    PageHeaderModule,\r\n    BsComponentModule,\r\n    NgbModule.forRoot()\r\n  ],\r\n  declarations: [TermsConditionComponent, TermsConditionAddComponent, TermsConditionEditComponent],\r\n  providers: [TermsConditionService,CompanyService]\r\n})\r\nexport class TermsConditionModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/terms-condition/terms-condition.module.ts"],"sourceRoot":"webpack:///"}