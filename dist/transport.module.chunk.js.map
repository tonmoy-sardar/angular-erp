{"version":3,"sources":["./src/app/layout/transport/transport-add/transport-add.component.html","./src/app/layout/transport/transport-add/transport-add.component.scss","./src/app/layout/transport/transport-add/transport-add.component.ts","./src/app/layout/transport/transport-edit/transport-edit.component.html","./src/app/layout/transport/transport-edit/transport-edit.component.scss","./src/app/layout/transport/transport-edit/transport-edit.component.ts","./src/app/layout/transport/transport-routing.module.ts","./src/app/layout/transport/transport.component.html","./src/app/layout/transport/transport.component.scss","./src/app/layout/transport/transport.component.ts","./src/app/layout/transport/transport.module.ts","./src/app/layout/transport/transport.service.ts"],"names":[],"mappings":";;;;;AAAA,4jCAA4jC,aAAa,+kFAA+kF,YAAY,2CAA2C,sBAAsB,mlBAAmlB,UAAU,yCAAyC,uBAAuB,6kBAA6kB,UAAU,uCAAuC,kBAAkB,0gH;;;;;;;ACAlhK,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACmB;AACG;AACP;AACY;AACzB;AAM3C;IAKE,+BACU,MAAc,EACd,MAAqB,EACrB,gBAAkC,EAClC,cAA8B,EAC9B,aAA4B;QAJ5B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QARtC,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QAqCf,gBAAW,GAAE,UAAU,KAAK;YAC1B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,GAAC,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC;IAhCE,CAAC;IAGL,wCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,iEAAS,CAAC;YACxB,gBAAgB,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC1D,KAAK,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE;gBACzB,kEAAU,CAAC,QAAQ;gBACnB,kEAAU,CAAC,OAAO,CAAC,0CAA0C,CAAC;aAC/D,CAAC;YACF,KAAK,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE;gBACzB,kEAAU,CAAC,QAAQ;gBACnB,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxB,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,OAAO,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACjD,OAAO,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACjD,KAAK,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC/C,IAAI,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9C,GAAG,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC7C,GAAG,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC7C,KAAK,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC/C,aAAa,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACvD,YAAY,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;SACvD,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAMD,wCAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;IACzC,CAAC;IAAA,CAAC;IACF,4CAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,aAAG;YACjD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,+BAA+B;QACjC,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IACF,8CAAc,GAAd;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YAChD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC;YAC/B,gCAAgC;QAClC,CAAC,CAAC;IACJ,CAAC;IACD,8CAAc,GAAd;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC,SAAS,CACpD,UAAC,IAAW;YACV,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,iCAAiC;QACnC,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IACF,+CAAe,GAAf;QAAA,iBAwBC;QAvBC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAChE,kBAAQ;gBACN,wBAAwB;gBACxB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gCAAgC,EAAE,EAAE,EAAE;oBACxD,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC7B,CAAC,EACD,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;gBAC3B,kDAAkD;gBAClD,mBAAmB;gBACnB,MAAM;YACR,CAAC,CACF,CAAC;SACH;aAAM;YACL,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAK;gBAC3C,IAAM,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IAED,qCAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,+CAAe,GAAf,UAAgB,KAAa;QAC3B,OAAO;YACL,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACzH,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;SACtH,CAAC;IACJ,CAAC;IAxGU,qBAAqB;QALjC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAOkB,+DAAM;YACN,iEAAa;YACH,4EAAgB;YAClB,gFAAc;YACf,6EAAa;OAV3B,qBAAqB,CA0GjC;IAAD,4BAAC;CAAA;AA1GiC;;;;;;;;ACZlC,8jCAA8jC,aAAa,gwFAAgwF,YAAY,2CAA2C,sBAAsB,yoBAAyoB,UAAU,yCAAyC,uBAAuB,ioBAAioB,UAAU,uCAAuC,kBAAkB,6qH;;;;;;;ACA/yK,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AACG;AACG;AACP;AACY;AACzB;AAM3C;IAME,gCACU,MAAc,EACd,KAAqB,EACrB,MAAqB,EACrB,gBAAkC,EAClC,cAA8B,EAC9B,aAA4B;QAL5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAe;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QATtC,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QACjB,cAAS,GAAG,EAAE,CAAC;QA+Ef,gBAAW,GAAG,UAAU,KAAK;YAC3B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC;IAzEE,CAAC;IAEL,yCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,iEAAS,CAAC;YACxB,gBAAgB,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC1D,KAAK,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE;gBACzB,kEAAU,CAAC,QAAQ;gBACnB,kEAAU,CAAC,OAAO,CAAC,0CAA0C,CAAC;aAC/D,CAAC;YACF,KAAK,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE;gBACzB,kEAAU,CAAC,QAAQ;gBACnB,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxB,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC;aACzB,CAAC;YACF,OAAO,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACjD,OAAO,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACjD,KAAK,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC/C,IAAI,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9C,GAAG,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC7C,GAAG,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC7C,KAAK,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC/C,aAAa,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACvD,YAAY,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;SACvD,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG;YACf,gBAAgB,EAAE,EAAE;YACpB,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;YACP,KAAK,EAAE,EAAE;YACT,aAAa,EAAE,EAAE;YACjB,YAAY,EAAE,EAAE;SACjB,CAAC;IACJ,CAAC;IACD,yCAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;IACzC,CAAC;IAAA,CAAC;IACF,6CAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,aAAG;YACnD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,+BAA+B;QACjC,CAAC,CACA,CAAC;IACJ,CAAC;IAAA,CAAC;IACF,+CAAc,GAAd;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YAChD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC;YAC/B,gCAAgC;QAClC,CAAC,CAAC;IACJ,CAAC;IACD,+CAAc,GAAd;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC,SAAS,CACpD,UAAC,IAAW;YACV,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,iCAAiC;QACnC,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IACF,6CAAY,GAAZ,UAAa,EAAE;QAAf,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC3D,KAAI,CAAC,SAAS,GAAG,GAAG;QACtB,CAAC,CAAC;IACJ,CAAC;IAID,gDAAe,GAAf;QAAA,iBAwBC;QAvBC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAC/D,kBAAQ;gBACN,wBAAwB;gBACxB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kCAAkC,EAAE,EAAE,EAAE;oBAC1D,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC7B,CAAC,EACD,eAAK;gBACH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;gBAC3B,kDAAkD;gBAClD,mBAAmB;gBACnB,MAAM;YACR,CAAC,CACF,CAAC;SACH;aAAM;YACL,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAK;gBAC3C,IAAM,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IACD,sCAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,gDAAe,GAAf,UAAgB,KAAa;QAC3B,OAAO;YACL,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACzH,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;SACtH,CAAC;IACJ,CAAC;IAzHU,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAQkB,+DAAM;YACP,uEAAc;YACb,iEAAa;YACH,4EAAgB;YAClB,gFAAc;YACf,6EAAa;OAZ3B,sBAAsB,CA2HlC;IAAD,6BAAC;CAAA;AA3HkC;;;;;;;;;;;;;;;;;;;;;ACZM;AACc;AACI;AACqB;AACG;AAEnF,IAAM,MAAM,GAAW;IACrB;QACA,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAkB;KAC5B;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,qGAAqB;KACjC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,wGAAsB;KAClC;CACF,CAAC;AAMF;IAAA;IAAsC,CAAC;IAA1B,sBAAsB;QAJlC,+DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;SACxB,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAA;AAAJ;;;;;;;;ACzBnC,knEAAknE,qDAAqD,MAAM,2BAA2B,4BAA4B,2BAA2B,0CAA0C,sDAAsD,4NAA4N,8QAA8Q,+JAA+J,MAAM,MAAM,+CAA+C,6wB;;;;;;;ACAniG,mB;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACc;AACZ;AAM3C;IAKE,4BACU,MAAc,EACd,MAAqB,EACrB,gBAAkC;QAFlC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAP5C,kBAAa,GAAG,EAAE,CAAC;QAGnB,eAAU,GAAG,EAAE,CAAC;QAYhB,gBAAW,GAAE,UAAU,KAAK;YAC1B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,GAAC,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC;IATE,CAAC;IAEL,qCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAMD,uCAAU,GAAV;QACE,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,6CAAgB,GAAhB;QAAA,iBAWC;QAVC,IAAI,MAAM,GAAoB,IAAI,eAAe,EAAE,CAAC;QACpD,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC;QACtD,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CACxD,UAAC,IAAW;YACV,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;YACxC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,kCAAkC;QACpC,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IAEF,wCAAW,GAAX,UAAY,EAAE;QAAd,iBAqBC;QApBC,IAAI,WAAW,CAAC;QAEhB,WAAW,GAAG;YACZ,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,IAAI;SACb,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,SAAS,CACpE,kBAAQ;YACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,EAAE,EAAE,EAAE;gBACrD,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;YAC3B,kDAAkD;YAClD,mBAAmB;YACnB,MAAM;QACR,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IAEF,0CAAa,GAAb,UAAc,EAAE;QAAhB,iBAsBC;QArBC,IAAI,WAAW,CAAC;QAEhB,WAAW,GAAG;YACZ,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,KAAK;SACd,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,SAAS,CACpE,kBAAQ;YACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6BAA6B,EAAE,EAAE,EAAE;gBACrD,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;YAC3B,kDAAkD;YAClD,mBAAmB;YACnB,MAAM;QACR,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IAEF,4CAAe,GAAf,UAAgB,EAAE;QAAlB,iBAqBC;QApBC,IAAI,WAAW,CAAC;QAEhB,WAAW,GAAG;YACZ,EAAE,EAAE,EAAE;SACP,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CAC5D,kBAAQ;YACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kCAAkC,EAAE,EAAE,EAAE;gBAC1D,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;YAC3B,kDAAkD;YAClD,mBAAmB;YACnB,MAAM;QACR,CAAC,CACF,CAAC;IACJ,CAAC;IAAA,CAAC;IAEF,uCAAU,GAAV;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAAA,CAAC;IA9GS,kBAAkB;QAL9B,gEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAOkB,+DAAM;YACN,iEAAa;YACH,4EAAgB;OARjC,kBAAkB,CA+G9B;IAAD,yBAAC;CAAA;AA/G8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACM;AACkB;AACT;AACD;AACiB;AACJ;AACT;AACqB;AACG;AACnC;AACO;AACK;AACJ;AAexD;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAd3B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY;gBACZ,mEAAW;gBACX,2EAAmB;gBACnB,8EAAgB;gBAChB,yFAAsB;gBACtB,kEAAgB;gBAChB,oFAAiB;gBACjB,6EAAS,CAAC,OAAO,EAAE;aACpB;YACD,YAAY,EAAE,CAAC,gFAAkB,EAAE,qGAAqB,EAAE,wGAAsB,CAAC;YACjF,SAAS,EAAE,CAAC,6EAAgB,EAAC,iFAAc,EAAC,8EAAa,CAAC;SAC3D,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;AC5Be;AACqC;AAEhB;AAEhE;IAEE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,4CAAiB,GAAjB,UAAkB,IAAI;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8EAAW,CAAC,WAAW,GAAC,cAAc,EAAE,IAAI,EAAE;YAClE,OAAO,EAAE,IAAI,yEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACjG,CAAC;IACJ,CAAC;IAED,6CAAkB,GAAlB,UAAmB,MAAM;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8EAAW,CAAC,WAAW,GAAC,eAAe,GAAC,MAAM,EAAE;YACnE,OAAO,EAAE,IAAI,yEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACjG,CAAC;IACJ,CAAC;IAGD,gDAAqB,GAArB,UAAsB,EAAE;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8EAAW,CAAC,WAAW,GAAC,cAAc,GAAC,EAAE,GAAC,GAAG,EAAE;YAClE,OAAO,EAAE,IAAI,yEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACjG,CAAC;IACJ,CAAC;IAED,4CAAiB,GAAjB,UAAkB,IAAI;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8EAAW,CAAC,WAAW,GAAC,cAAc,GAAC,IAAI,CAAC,EAAE,GAAC,GAAG,EAAC,IAAI,EAAE;YAC5E,OAAO,EAAE,IAAI,yEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACjG,CAAC;IACJ,CAAC;IAED,oDAAyB,GAAzB,UAA0B,IAAI;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,8EAAW,CAAC,WAAW,GAAC,cAAc,GAAC,IAAI,CAAC,EAAE,GAAC,GAAG,EAAC,IAAI,EAAE;YAC9E,OAAO,EAAE,IAAI,yEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACjG,CAAC;IACJ,CAAC;IAED,4CAAiB,GAAjB,UAAkB,IAAI;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,8EAAW,CAAC,WAAW,GAAC,cAAc,GAAC,IAAI,CAAC,EAAE,GAAC,GAAG,EAAE;YAC1E,OAAO,EAAE,IAAI,yEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;SACjG,CAAC;IACJ,CAAC;IAvCU,gBAAgB;QAD5B,iEAAU,EAAE;yCAGe,wEAAU;OAFzB,gBAAgB,CAyC5B;IAAD,uBAAC;CAAA;AAzC4B","file":"transport.module.chunk.js","sourcesContent":["module.exports = \"<div>\\r\\n  <!-- <app-page-header [heading]=\\\"'Transport Add'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4 class=\\\"page-header\\\">Transport Add</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('transport')\\\">\\r\\n        <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\r\\n          <div class=\\\"card bg-light mb-3\\\">\\r\\n            <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Transport Add</div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Transporter Name</label>\\r\\n                  <input class=\\\"form-control\\\" name=\\\"transporter_name\\\" placeholder=\\\"Transporter Name\\\" formControlName=\\\"transporter_name\\\" [ngClass]=\\\"displayFieldCss('transporter_name')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['transporter_name'].hasError('required')\\\">\\r\\n                      Please enter transporter name\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Email</label>\\r\\n                  <input class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [ngClass]=\\\"displayFieldCss('email')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['email'].hasError('pattern') && !form.controls['email'].hasError('required')\\\">\\r\\n                      Please enter a valid email address\\r\\n                  </div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['email'].hasError('required')\\\">\\r\\n                      Email is required\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Contact No</label>\\r\\n                  <input class=\\\"form-control\\\" name=\\\"phone\\\" placeholder=\\\"Contact No\\\" formControlName=\\\"phone\\\" [ngClass]=\\\"displayFieldCss('phone')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['phone'].hasError('minlength') && !form.controls['phone'].hasError('required')\\\">\\r\\n                      Please enter at least 10 digit\\r\\n                  </div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['phone'].hasError('maxlength') && !form.controls['phone'].hasError('required')\\\">\\r\\n                      Phone number should be less then 13 digit\\r\\n                  </div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['phone'].hasError('required')\\\">\\r\\n                      Please enter phone\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Company</label>\\r\\n                  <select class=\\\"form-control\\\" name=\\\"company\\\" formControlName=\\\"company\\\" [ngClass]=\\\"displayFieldCss('company')\\\">\\r\\n                    <option value=\\\"\\\">Select company</option>\\r\\n                    <option value=\\\"{{country.id}}\\\" *ngFor=\\\"let country of companyList\\\">{{country.company_name}}</option>\\r\\n                  </select>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company'].hasError('required')\\\">\\r\\n                    Please select company\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Storage</label>\\r\\n                  <select class=\\\"form-control\\\" name=\\\"storage\\\" formControlName=\\\"storage\\\" [ngClass]=\\\"displayFieldCss('storage')\\\">\\r\\n                    <option value=\\\"\\\">Select storage</option>\\r\\n                    <option value=\\\"{{store.id}}\\\" *ngFor=\\\"let store of storageList\\\">{{store.storage_address}}</option>\\r\\n                  </select>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['storage'].hasError('required')\\\">\\r\\n                      Please select storage\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>State</label>\\r\\n                  <select class=\\\"form-control\\\" name=\\\"state\\\" formControlName=\\\"state\\\" [ngClass]=\\\"displayFieldCss('state')\\\">\\r\\n                    <option value=\\\"\\\">Select State</option>\\r\\n                    <option value=\\\"{{state.id}}\\\" *ngFor=\\\"let state of stateList\\\">{{state.state_name}}</option>\\r\\n                  </select>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['state'].hasError('required')\\\">\\r\\n                      Please select state\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>City</label>\\r\\n                  <input class=\\\"form-control\\\" name=\\\"city\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\" [ngClass]=\\\"displayFieldCss('city')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['city'].hasError('required')\\\">\\r\\n                      Please enter city\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Pincode</label>\\r\\n                  <input class=\\\"form-control\\\" name=\\\"pin\\\" placeholder=\\\"Pincode\\\" formControlName=\\\"pin\\\" [ngClass]=\\\"displayFieldCss('pin')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['pin'].hasError('required')\\\">\\r\\n                      Please enter pincode\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>PAN</label>\\r\\n                  <input class=\\\"form-control\\\" name=\\\"pan\\\" placeholder=\\\"PAN\\\" formControlName=\\\"pan\\\" [ngClass]=\\\"displayFieldCss('pan')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['pan'].hasError('required')\\\">\\r\\n                      Please enter PAN\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>GSTIN</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"gstin\\\" placeholder=\\\"GSTIN\\\" formControlName=\\\"gstin\\\" [ngClass]=\\\"displayFieldCss('gstin')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['gstin'].hasError('required')\\\">\\r\\n                      Please enter GSTIN\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Amount Credit</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\"  name=\\\"amount_credit\\\" placeholder=\\\"Amount Credit\\\" formControlName=\\\"amount_credit\\\" [ngClass]=\\\"displayFieldCss('amount_credit')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['amount_credit'].hasError('required')\\\">\\r\\n                      Please enter amount credit\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Amount Debit</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"amount_debit\\\" placeholder=\\\"Amount Debit\\\" formControlName=\\\"amount_debit\\\" [ngClass]=\\\"displayFieldCss('amount_debit')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['amount_debit'].hasError('required')\\\">\\r\\n                      Please enter amount debit\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addNewTransport()\\\">Submit</button>\\r\\n                  <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/transport/transport-add/transport-add.component.html\n// module id = ./src/app/layout/transport/transport-add/transport-add.component.html\n// module chunks = transport.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/transport/transport-add/transport-add.component.scss\n// module id = ./src/app/layout/transport/transport-add/transport-add.component.scss\n// module chunks = transport.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { CompanyService } from '../../company/company.service';\r\nimport { TransportService } from '../transport.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-transport-add',\r\n  templateUrl: './transport-add.component.html',\r\n  styleUrls: ['./transport-add.component.scss']\r\n})\r\nexport class TransportAddComponent implements OnInit {\r\n  form: FormGroup;\r\n  companyList = [];\r\n  storageList = [];\r\n  stateList = [];\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private transportService: TransportService,\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      transporter_name: new FormControl('', Validators.required),\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)\r\n      ]),\r\n      phone: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(12)\r\n      ]),\r\n      company: new FormControl('', Validators.required),\r\n      storage: new FormControl('', Validators.required),\r\n      state: new FormControl('', Validators.required),\r\n      city: new FormControl('', Validators.required),\r\n      pan: new FormControl('', Validators.required),\r\n      pin: new FormControl('', Validators.required),\r\n      gstin: new FormControl('', Validators.required),\r\n      amount_credit: new FormControl('', Validators.required),\r\n      amount_debit: new FormControl('', Validators.required)\r\n    });\r\n    this.getCompanyList();\r\n    this.getStorageList();\r\n    this.getStateList();\r\n  }\r\n\r\n  btnClickNav= function (toNav) {\r\n    this.router.navigateByUrl('/'+toNav);\r\n  };\r\n\r\n  goToList(toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n  getStateList() {\r\n    this.statesService.getStateActiveList().subscribe(res => {\r\n        this.stateList = res;\r\n        // console.log(this.stateList);\r\n      }\r\n    );\r\n  };\r\n  getStorageList(){\r\n    this.companyService.getStorageList().subscribe(res =>{\r\n      this.storageList = res.results;\r\n      // console.log(this.storageList)\r\n    })\r\n  }\r\n  getCompanyList() {\r\n    this.companyService.getCompanyDropdownList().subscribe(\r\n      (data: any[]) => {\r\n        this.companyList = data;\r\n        // console.log(this.companyList);\r\n      }\r\n    );\r\n  };\r\n  addNewTransport() {\r\n    if (this.form.valid) {\r\n      this.transportService.addNewTransporter(this.form.value).subscribe(\r\n        response => {\r\n          // console.log(response)\r\n          this.toastr.success('Transporter added successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('transport');\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': this.form.controls[field].invalid && (this.form.controls[field].dirty || this.form.controls[field].touched),\r\n      'is-valid': this.form.controls[field].valid && (this.form.controls[field].dirty || this.form.controls[field].touched)\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/transport/transport-add/transport-add.component.ts","module.exports = \"<div>\\r\\n  <!-- <app-page-header [heading]=\\\"'Transport Edit'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4 class=\\\"page-header\\\">Transport Edit</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('transport')\\\">\\r\\n        <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\r\\n          <div class=\\\"card bg-light mb-3\\\">\\r\\n            <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Transport Edit</div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Transporter Name</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.transporter_name\\\" name=\\\"transporter_name\\\" placeholder=\\\"Transporter Name\\\" formControlName=\\\"transporter_name\\\" [ngClass]=\\\"displayFieldCss('transporter_name')\\\"\\r\\n                  >\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['transporter_name'].hasError('required')\\\">\\r\\n                      Please enter transporter name\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Email</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [ngClass]=\\\"displayFieldCss('email')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['email'].hasError('pattern') && !form.controls['email'].hasError('required')\\\">\\r\\n                      Please enter a valid email address\\r\\n                  </div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['email'].hasError('required')\\\">\\r\\n                      Email is required\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Contact No</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.phone\\\" name=\\\"phone\\\" placeholder=\\\"Contact No\\\" formControlName=\\\"phone\\\" [ngClass]=\\\"displayFieldCss('phone')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['phone'].hasError('minlength') && !form.controls['phone'].hasError('required')\\\">\\r\\n                      Please enter at least 10 digit\\r\\n                  </div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['phone'].hasError('maxlength') && !form.controls['phone'].hasError('required')\\\">\\r\\n                      Phone number should be less then 13 digit\\r\\n                  </div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['phone'].hasError('required')\\\">\\r\\n                      Please enter phone\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                    <label>Company</label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"company\\\" [(ngModel)]=\\\"transport.company\\\" formControlName=\\\"company\\\" [ngClass]=\\\"displayFieldCss('company')\\\" >\\r\\n                      <option value=\\\"\\\">Select company</option>\\r\\n                      <option value=\\\"{{country.id}}\\\" *ngFor=\\\"let country of companyList\\\">{{country.company_name}}</option>\\r\\n                    </select>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company'].hasError('required')\\\">\\r\\n                      Please select company\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-md-2\\\">\\r\\n                    <label>Storage</label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"storage\\\" [(ngModel)]=\\\"transport.storage\\\" formControlName=\\\"storage\\\" [ngClass]=\\\"displayFieldCss('storage')\\\">\\r\\n                      <option value=\\\"\\\">Select storage</option>\\r\\n                      <option value=\\\"{{store.id}}\\\" *ngFor=\\\"let store of storageList\\\">{{store.storage_address}}</option>\\r\\n                    </select>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['storage'].hasError('required')\\\">\\r\\n                        Please select storage\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group col-md-2\\\">\\r\\n                    <label>State</label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"state\\\" [(ngModel)]=\\\"transport.state\\\" formControlName=\\\"state\\\" [ngClass]=\\\"displayFieldCss('state')\\\">\\r\\n                      <option value=\\\"\\\">Select State</option>\\r\\n                      <option value=\\\"{{state.id}}\\\" *ngFor=\\\"let state of stateList\\\">{{state.state_name}}</option>\\r\\n                    </select>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['state'].hasError('required')\\\">\\r\\n                        Please select state\\r\\n                      </div>\\r\\n                  </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>City</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.city\\\" name=\\\"city\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\" [ngClass]=\\\"displayFieldCss('city')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['city'].hasError('required')\\\">\\r\\n                      Please enter city\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Pincode</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.pin\\\" name=\\\"pin\\\" placeholder=\\\"Pincode\\\" formControlName=\\\"pin\\\" [ngClass]=\\\"displayFieldCss('pin')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['pin'].hasError('required')\\\">\\r\\n                      Please enter pincode\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>PAN</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.pan\\\" name=\\\"pan\\\" placeholder=\\\"PAN\\\" formControlName=\\\"pan\\\" [ngClass]=\\\"displayFieldCss('pan')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['pan'].hasError('required')\\\">\\r\\n                      Please enter PAN\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>GSTIN</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.gstin\\\" name=\\\"gstin\\\" placeholder=\\\"GSTIN\\\" formControlName=\\\"gstin\\\" [ngClass]=\\\"displayFieldCss('gstin')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['gstin'].hasError('required')\\\">\\r\\n                      Please enter GSTIN\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Amount Credit</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.amount_credit\\\" name=\\\"amount_credit\\\" placeholder=\\\"Amount Credit\\\" formControlName=\\\"amount_credit\\\" [ngClass]=\\\"displayFieldCss('amount_credit')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['amount_credit'].hasError('required')\\\">\\r\\n                      Please enter amount credit\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2\\\">\\r\\n                  <label>Amount Debit</label>\\r\\n                  <input class=\\\"form-control\\\" [(ngModel)]=\\\"transport.amount_debit\\\" name=\\\"amount_debit\\\" placeholder=\\\"Amount Debit\\\" formControlName=\\\"amount_debit\\\" [ngClass]=\\\"displayFieldCss('amount_debit')\\\">\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['amount_debit'].hasError('required')\\\">\\r\\n                      Please enter amount debit\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateTransport()\\\">Submit</button>\\r\\n                  <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/transport/transport-edit/transport-edit.component.html\n// module id = ./src/app/layout/transport/transport-edit/transport-edit.component.html\n// module chunks = transport.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/transport/transport-edit/transport-edit.component.scss\n// module id = ./src/app/layout/transport/transport-edit/transport-edit.component.scss\n// module chunks = transport.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { CompanyService } from '../../company/company.service';\r\nimport { TransportService } from '../transport.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-transport-edit',\r\n  templateUrl: './transport-edit.component.html',\r\n  styleUrls: ['./transport-edit.component.scss']\r\n})\r\nexport class TransportEditComponent implements OnInit {\r\n  transport;\r\n  form: FormGroup;\r\n  companyList = [];\r\n  storageList = [];\r\n  stateList = [];\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n    private transportService: TransportService,\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      transporter_name: new FormControl('', Validators.required),\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)\r\n      ]),\r\n      phone: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(12)\r\n      ]),\r\n      company: new FormControl('', Validators.required),\r\n      storage: new FormControl('', Validators.required),\r\n      state: new FormControl('', Validators.required),\r\n      city: new FormControl('', Validators.required),\r\n      pan: new FormControl('', Validators.required),\r\n      pin: new FormControl('', Validators.required),\r\n      gstin: new FormControl('', Validators.required),\r\n      amount_credit: new FormControl('', Validators.required),\r\n      amount_debit: new FormControl('', Validators.required)\r\n    });\r\n    this.getCompanyList();\r\n    this.getStorageList();\r\n    this.getStateList();\r\n    this.getTransport(this.route.snapshot.params['id']);\r\n    this.transport = {\r\n      transporter_name: '',\r\n      email: '',\r\n      phone: '',\r\n      company: '',\r\n      storage: '',\r\n      city: '',\r\n      pan: '',\r\n      pin: '',\r\n      gstin: '',\r\n      amount_credit: '',\r\n      amount_debit: ''\r\n    };\r\n  }\r\n  goToList(toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n  getStateList() {\r\n    this.statesService.getStateActiveList().subscribe(res => {\r\n      this.stateList = res;\r\n      // console.log(this.stateList);\r\n    }\r\n    );\r\n  };\r\n  getStorageList() {\r\n    this.companyService.getStorageList().subscribe(res => {\r\n      this.storageList = res.results;\r\n      // console.log(this.storageList)\r\n    })\r\n  }\r\n  getCompanyList() {\r\n    this.companyService.getCompanyDropdownList().subscribe(\r\n      (data: any[]) => {\r\n        this.companyList = data;\r\n        // console.log(this.companyList);\r\n      }\r\n    );\r\n  };\r\n  getTransport(id) {\r\n    this.transportService.getTransporterDetails(id).subscribe(res => {\r\n      this.transport = res\r\n    })\r\n  }\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n  updateTransport() {\r\n    if (this.form.valid) {\r\n      this.transportService.updateTransporter(this.transport).subscribe(\r\n        response => {\r\n          // console.log(response)\r\n          this.toastr.success('Transporter updated successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('transport');\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n\r\n  }\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': this.form.controls[field].invalid && (this.form.controls[field].dirty || this.form.controls[field].touched),\r\n      'is-valid': this.form.controls[field].valid && (this.form.controls[field].dirty || this.form.controls[field].touched)\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/transport/transport-edit/transport-edit.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TransportComponent } from './transport.component';\nimport { TransportAddComponent } from './transport-add/transport-add.component';\nimport { TransportEditComponent } from './transport-edit/transport-edit.component';\n\nconst routes: Routes = [\n  {\n  path: '',\n  component: TransportComponent\n  },\n  {\n    path: 'add',\n    component: TransportAddComponent\n  },\n  {\n    path: 'edit/:id',\n    component: TransportEditComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TransportRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/transport/transport-routing.module.ts","module.exports = \"<div>\\r\\n  <!-- <app-page-header [heading]=\\\"'Transport List'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n          <h4 class=\\\"page-header\\\">Transport List</h4>\\r\\n        </div>\\r\\n    <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('transport/add')\\\"><i class=\\\"fa fa-plus\\\"></i> New Transport</button>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </div>\\r\\n    \\r\\n  <hr/>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <h5>Transport</h5>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <form role=\\\"form\\\" (ngSubmit)=\\\"dataSearch()\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"search_key\\\">\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\">\\r\\n                        <i class=\\\"fa fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n      </div>\\r\\n      <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n          <thead>\\r\\n          <tr>\\r\\n              <th>Sl.No.</th>\\r\\n              <th>Transport</th>\\r\\n              <th>Created Date</th>\\r\\n              <th>Status</th>\\r\\n              <th>Action</th>\\r\\n          </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n          <tr *ngFor=\\\"let transport of transportList ; let i = index\\\">\\r\\n            <th scope=\\\"row\\\">{{i +1}}</th>\\r\\n            <td>{{transport.transporter_name}}</td>\\r\\n            <td>{{transport.created_at | date:'dd-MM-yyyy'}}</td>\\r\\n            <td><a href=\\\"javascript:void(0);\\\" title=\\\"Active\\\" name=\\\"Active\\\" (click)=\\\"inactiveState(transport.id)\\\" *ngIf=\\\"transport.status==true\\\">\\r\\n                <i class=\\\"fa fa-thumbs-up\\\"></i> Active</a>\\r\\n              <a href=\\\"javascript:void(0);\\\" title=\\\"Inactive\\\" name=\\\"Inactive\\\" (click)=\\\"activeState(transport.id)\\\" *ngIf=\\\"transport.status==false\\\">\\r\\n                <i class=\\\"fa fa-thumbs-down\\\"></i> Inactive</a>\\r\\n              </td>\\r\\n            <td>\\r\\n              <a href=\\\"javascript:void(0);\\\" title=\\\"Edit\\\" name=\\\"Edit\\\" [routerLink]=\\\"['/transport/edit', transport.id]\\\">\\r\\n                <i class=\\\"fa fa-edit\\\"></i>\\r\\n              </a>&nbsp;&nbsp;&nbsp;\\r\\n              <a href=\\\"javascript:void(0);\\\" title=\\\"Map\\\" name=\\\"Map\\\" (click)=\\\"deletetransport(transport.id)\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"transportList.length == 0\\\">\\r\\n              <td colspan=\\\"5\\\" class=\\\"text-center\\\">No record found</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"totaltransportList > 10\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card-body pull-right\\\">\\r\\n          <ngb-pagination [collectionSize]=\\\"totaltransportList\\\" [(page)]=\\\"defaultPagination\\\" (pageChange)=\\\"pagination()\\\" size=\\\"sm\\\"></ngb-pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/transport/transport.component.html\n// module id = ./src/app/layout/transport/transport.component.html\n// module chunks = transport.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/transport/transport.component.scss\n// module id = ./src/app/layout/transport/transport.component.scss\n// module chunks = transport.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TransportService } from './transport.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-transport',\r\n  templateUrl: './transport.component.html',\r\n  styleUrls: ['./transport.component.scss']\r\n})\r\nexport class TransportComponent implements OnInit {\r\n  transportList = [];\r\n  defaultPagination: number;\r\n  totaltransportList: number;\r\n  search_key = '';\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private transportService: TransportService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.defaultPagination = 1;\r\n    this.gettransportList();\r\n  }\r\n\r\n  btnClickNav= function (toNav) {\r\n    this.router.navigateByUrl('/'+toNav);\r\n  };\r\n\r\n  dataSearch() {\r\n    this.defaultPagination = 1;\r\n    this.gettransportList();\r\n  }\r\n  \r\n  gettransportList() {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set('page', this.defaultPagination.toString());\r\n    params.set('search', this.search_key.toString());\r\n    this.transportService.getTransporterList(params).subscribe(\r\n      (data: any[]) => {\r\n        this.totaltransportList = data['count'];\r\n        this.transportList = data['results'];\r\n        // console.log(this.transportList)\r\n      }\r\n    );\r\n  };\r\n  \r\n  activeState(id) {\r\n    let transporter;\r\n\r\n    transporter = {\r\n      id: id,\r\n      status: true\r\n    };\r\n    this.transportService.activeInactiveTransporter(transporter).subscribe(\r\n      response => {\r\n        this.toastr.success('Status changed successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.gettransportList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  inactiveState(id) {\r\n    let transporter;\r\n\r\n    transporter = {\r\n      id: id,\r\n      status: false\r\n    };\r\n\r\n    this.transportService.activeInactiveTransporter(transporter).subscribe(\r\n      response => {\r\n        this.toastr.success('Status changed successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.gettransportList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  deletetransport(id) {\r\n    let transporter;\r\n\r\n    transporter = {\r\n      id: id\r\n    };\r\n\r\n    this.transportService.deleteTransporter(transporter).subscribe(\r\n      response => {\r\n        this.toastr.success('Transporter deleted successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.gettransportList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  pagination() {\r\n    this.gettransportList();\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/transport/transport.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BsComponentModule } from '../bs-component/bs-component.module';\r\nimport { TransportRoutingModule } from './transport-routing.module';\r\nimport { TransportComponent } from './transport.component';\r\nimport { TransportAddComponent } from './transport-add/transport-add.component';\r\nimport { TransportEditComponent } from './transport-edit/transport-edit.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { TransportService } from './transport.service';\r\nimport { CompanyService } from '../company/company.service';\r\nimport { StatesService} from '../states/states.service';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    TransportRoutingModule,\r\n    PageHeaderModule,\r\n    BsComponentModule,\r\n    NgbModule.forRoot()\r\n  ],\r\n  declarations: [TransportComponent, TransportAddComponent, TransportEditComponent],\r\n  providers: [TransportService,CompanyService,StatesService]\r\n})\r\nexport class TransportModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/transport/transport.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule, HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { environment } from '../../../environments/environment';\r\n@Injectable()\r\nexport class TransportService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addNewTransporter(data): Observable<any>{\r\n    return this.http.post(environment.apiEndpoint+'transporter/', data, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n  getTransporterList(params): Observable<any>{\r\n    return this.http.get(environment.apiEndpoint+'transporter/?'+params, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n  \r\n\r\n  getTransporterDetails(id): Observable<any>{\r\n    return this.http.get(environment.apiEndpoint+'transporter/'+id+'/', {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n  updateTransporter(data): Observable<any>{\r\n    return this.http.put(environment.apiEndpoint+'transporter/'+data.id+'/',data, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n  activeInactiveTransporter(data): Observable<any>{\r\n    return this.http.patch(environment.apiEndpoint+'transporter/'+data.id+'/',data, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n  deleteTransporter(data): Observable<any>{\r\n    return this.http.delete(environment.apiEndpoint+'transporter/'+data.id+'/', {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/transport/transport.service.ts"],"sourceRoot":"webpack:///"}