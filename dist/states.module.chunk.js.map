{"version":3,"sources":["./src/app/layout/states/states-add/states-add.component.html","./src/app/layout/states/states-add/states-add.component.scss","./src/app/layout/states/states-add/states-add.component.ts","./src/app/layout/states/states-edit/states-edit.component.html","./src/app/layout/states/states-edit/states-edit.component.scss","./src/app/layout/states/states-edit/states-edit.component.ts","./src/app/layout/states/states-routing.module.ts","./src/app/layout/states/states.component.html","./src/app/layout/states/states.component.scss","./src/app/layout/states/states.component.ts","./src/app/layout/states/states.module.ts"],"names":[],"mappings":"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","file":"states.module.chunk.js","sourcesContent":["module.exports = \"<div>\\r\\n    <!-- <app-page-header [heading]=\\\"'State Add'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h4 class=\\\"page-header\\\">States Add</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('states')\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">State Add</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>State Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"state_name\\\" placeholder=\\\"State Name\\\" formControlName=\\\"state_name\\\" [ngClass]=\\\"displayFieldCss('state_name')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('state_name')\\\">\\r\\n                                        Please enter state name\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Tin Number</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"tin_number\\\" placeholder=\\\"Tin Number\\\" formControlName=\\\"tin_number\\\" [ngClass]=\\\"displayFieldCss('tin_number')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('tin_number')\\\">\\r\\n                                        Please enter tin number\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>State Code</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"state_code\\\" placeholder=\\\"State Code\\\" formControlName=\\\"state_code\\\" [ngClass]=\\\"displayFieldCss('state_code')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('state_code')\\\">\\r\\n                                        Please enter state code\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addState()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/states/states-add/states-add.component.html\n// module id = ./src/app/layout/states/states-add/states-add.component.html\n// module chunks = states.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/states/states-add/states-add.component.scss\n// module id = ./src/app/layout/states/states-add/states-add.component.scss\n// module chunks = states.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { StatesService } from '../states.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-states-add',\r\n  templateUrl: './states-add.component.html',\r\n  styleUrls: ['./states-add.component.scss']\r\n})\r\nexport class StatesAddComponent implements OnInit {\r\n  form: FormGroup;\r\n  constructor(\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      state_name: [null, Validators.required],\r\n      tin_number: [null, Validators.required],\r\n      state_code: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  goToList = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  addState = function () {\r\n    if (this.form.valid) {\r\n      this.statesService.addNewState(this.form.value).subscribe(\r\n        response => {\r\n          this.toastr.success('State added successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('states');          \r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n  }\r\n  \r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.form.get(field).valid && this.form.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': !this.form.get(field).valid && this.form.get(field).touched,\r\n      'is-valid': this.form.get(field).valid\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/states/states-add/states-add.component.ts","module.exports = \"<div>\\r\\n    <!-- <app-page-header [heading]=\\\"'State Edit'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h4 class=\\\"page-header\\\">States Edit</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('states')\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">State Edit</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>State Name</label>\\r\\n                                    <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"states.state_name\\\" name=\\\"state_name\\\" placeholder=\\\"State Name\\\" formControlName=\\\"state_name\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('state_name')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('state_name')\\\">\\r\\n                                        Please enter state name\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Tin Number</label>\\r\\n                                    <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"states.tin_number\\\" name=\\\"tin_number\\\" placeholder=\\\"Tin Number\\\" formControlName=\\\"tin_number\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('tin_number')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('tin_number')\\\">\\r\\n                                        Please enter tin number\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>State Code</label>\\r\\n                                    <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"states.state_code\\\" name=\\\"state_code\\\" placeholder=\\\"State Code\\\" formControlName=\\\"state_code\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('state_code')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('state_code')\\\">\\r\\n                                        Please enter state code\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateState()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/states/states-edit/states-edit.component.html\n// module id = ./src/app/layout/states/states-edit/states-edit.component.html\n// module chunks = states.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/states/states-edit/states-edit.component.scss\n// module id = ./src/app/layout/states/states-edit/states-edit.component.scss\n// module chunks = states.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StatesService } from '../states.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-states-edit',\r\n  templateUrl: './states-edit.component.html',\r\n  styleUrls: ['./states-edit.component.scss']\r\n})\r\nexport class StatesEditComponent implements OnInit {\r\n  states;\r\n  state;\r\n  form: FormGroup;\r\n  constructor(\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.states = {\r\n      id: '',\r\n      state_name: '',\r\n      tin_number: '',\r\n      state_code: ''\r\n    };\r\n    this.form = this.formBuilder.group({\r\n      state_name: [null, Validators.required],\r\n      tin_number: [null, Validators.required],\r\n      state_code: [null, Validators.required]\r\n    });\r\n    this.getStateDetails(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  getStateDetails = function (id) {\r\n    this.statesService.getStateDetails(id).subscribe(\r\n      (data: any[]) => {\r\n        this.states = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  goToList = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n\r\n  updateState = function () {\r\n    if (this.form.valid) {      \r\n      this.statesService.updateState(this.states).subscribe(\r\n        response => {\r\n          this.toastr.success('State updated successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('states');\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }    \r\n  }\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.form.get(field).valid && this.form.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': !this.form.get(field).valid && this.form.get(field).touched,\r\n      'is-valid': this.form.get(field).valid\r\n    };\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/states/states-edit/states-edit.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StatesComponent } from './states.component';\nimport { StatesAddComponent } from './states-add/states-add.component';\nimport { StatesEditComponent } from './states-edit/states-edit.component';\n\nconst routes: Routes = [\n  {\n  path: '',\n  component: StatesComponent\n  },\n  {\n    path: 'add',\n    component: StatesAddComponent\n  },\n  {\n    path: 'edit/:id',\n    component: StatesEditComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StatesRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/states/states-routing.module.ts","module.exports = \"<div>\\r\\n  <!-- <app-page-header [heading]=\\\"'States List'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4 class=\\\"page-header\\\">States List</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('states/add')\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i> New State</button>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-9\\\">\\r\\n              <h5>States</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <form role=\\\"form\\\" (ngSubmit)=\\\"dataSearch()\\\">\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"search_key\\\">\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\">\\r\\n                      <i class=\\\"fa fa-search\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Sl.No.</th>\\r\\n              <th>State</th>\\r\\n              <th>Tin</th>\\r\\n              <th>State code</th>\\r\\n              <th>Status</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let state of stateList ; let i = index\\\">\\r\\n              <th scope=\\\"row\\\">{{i +1}}</th>\\r\\n              <td>{{state.state_name}}</td>\\r\\n              <td>{{state.tin_number}}</td>\\r\\n              <td>{{state.state_code}}</td>\\r\\n              <td>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Active\\\" name=\\\"Active\\\" (click)=\\\"inactiveState(state.id)\\\" *ngIf=\\\"state.status==true\\\">\\r\\n                  <i class=\\\"fa fa-thumbs-up\\\"></i> Active</a>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Inactive\\\" name=\\\"Inactive\\\" (click)=\\\"activeState(state.id)\\\" *ngIf=\\\"state.status==false\\\">\\r\\n                  <i class=\\\"fa fa-thumbs-down\\\"></i> Inactive</a>\\r\\n              </td>\\r\\n              <td>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Edit\\\" name=\\\"Edit\\\" [routerLink]=\\\"['/states/edit', state.id]\\\">\\r\\n                  <i class=\\\"fa fa-edit\\\"></i>\\r\\n                </a>&nbsp;&nbsp;&nbsp;\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Map\\\" name=\\\"Map\\\" (click)=\\\"deleteState(state.id)\\\">\\r\\n                  <i class=\\\"fa fa-trash-o\\\"></i>\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"stateList.length == 0\\\">\\r\\n              <td colspan=\\\"6\\\" class=\\\"text-center\\\">No record found</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"totalstateList > 10\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card-body pull-right\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"totalstateList\\\" [(page)]=\\\"defaultPagination\\\" (pageChange)=\\\"pagination()\\\" size=\\\"sm\\\"></ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/states/states.component.html\n// module id = ./src/app/layout/states/states.component.html\n// module chunks = states.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/states/states.component.scss\n// module id = ./src/app/layout/states/states.component.scss\n// module chunks = states.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { StatesService } from './states.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-states',\r\n  templateUrl: './states.component.html',\r\n  styleUrls: ['./states.component.scss']\r\n})\r\nexport class StatesComponent implements OnInit {\r\n  stateList = [];\r\n  defaultPagination: number;\r\n  totalstateList: number;\r\n  search_key = '';\r\n\r\n  \r\n  constructor(\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.defaultPagination = 1;\r\n    this.getStateList();\r\n  }\r\n\r\n  dataSearch() {\r\n    this.defaultPagination = 1;\r\n    this.getStateList();\r\n  }\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  getStateList = function () {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set('page', this.defaultPagination.toString());\r\n    params.set('search', this.search_key.toString());\r\n    this.statesService.getStateList(params).subscribe(\r\n      (data: any[]) => {\r\n        this.totalstateList = data['count'];\r\n        this.stateList = data['results'];\r\n      }\r\n    );\r\n  };\r\n\r\n  activeState = function (id) {\r\n    let state;\r\n\r\n    state = {\r\n      id: id,\r\n      status: true\r\n    };\r\n    this.statesService.activeInactiveState(state).subscribe(\r\n      response => {\r\n        this.toastr.success('Status changed successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getStateList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  inactiveState = function (id) {\r\n    let state;\r\n\r\n    state = {\r\n      id: id,\r\n      status: false\r\n    };\r\n\r\n    this.statesService.activeInactiveState(state).subscribe(\r\n      response => {\r\n        this.toastr.success('Status changed successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getStateList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  deleteState = function (id) {\r\n    let state;\r\n\r\n    state = {\r\n      id: id\r\n    };\r\n\r\n    this.statesService.deleteState(state).subscribe(\r\n      response => {\r\n        this.toastr.success('State deleted successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getStateList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  pagination = function () {\r\n    this.getStateList();\r\n  };\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/states/states.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BsComponentModule } from '../bs-component/bs-component.module';\r\nimport { StatesRoutingModule } from './states-routing.module';\r\nimport { StatesComponent } from './states.component';\r\nimport { StatesAddComponent } from './states-add/states-add.component';\r\nimport { StatesEditComponent } from './states-edit/states-edit.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { StatesService } from './states.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgbModule.forRoot(),\r\n    StatesRoutingModule,\r\n    PageHeaderModule,\r\n    BsComponentModule\r\n  ],\r\n  declarations: [StatesComponent, StatesAddComponent, StatesEditComponent],\r\n  providers: [StatesService]\r\n})\r\nexport class StatesModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/states/states.module.ts"],"sourceRoot":"webpack:///"}