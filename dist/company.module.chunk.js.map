{"version":3,"sources":["./src/app/layout/company/branch-add/branch-add.component.html","./src/app/layout/company/branch-add/branch-add.component.scss","./src/app/layout/company/branch-add/branch-add.component.ts","./src/app/layout/company/branch-edit/branch-edit.component.html","./src/app/layout/company/branch-edit/branch-edit.component.scss","./src/app/layout/company/branch-edit/branch-edit.component.ts","./src/app/layout/company/branch-list/branch-list.component.html","./src/app/layout/company/branch-list/branch-list.component.scss","./src/app/layout/company/branch-list/branch-list.component.ts","./src/app/layout/company/company-add/company-add.component.html","./src/app/layout/company/company-add/company-add.component.scss","./src/app/layout/company/company-add/company-add.component.ts","./src/app/layout/company/company-details/company-details.component.html","./src/app/layout/company/company-details/company-details.component.scss","./src/app/layout/company/company-details/company-details.component.ts","./src/app/layout/company/company-edit/company-edit.component.html","./src/app/layout/company/company-edit/company-edit.component.scss","./src/app/layout/company/company-edit/company-edit.component.ts","./src/app/layout/company/company-routing.module.ts","./src/app/layout/company/company-tree/company-tree.component.html","./src/app/layout/company/company-tree/company-tree.component.scss","./src/app/layout/company/company-tree/company-tree.component.ts","./src/app/layout/company/company.component.html","./src/app/layout/company/company.component.scss","./src/app/layout/company/company.component.ts","./src/app/layout/company/company.module.ts","./src/app/layout/company/storage-bin-add/storage-bin-add.component.html","./src/app/layout/company/storage-bin-add/storage-bin-add.component.scss","./src/app/layout/company/storage-bin-add/storage-bin-add.component.ts","./src/app/layout/company/storage-bin-edit/storage-bin-edit.component.html","./src/app/layout/company/storage-bin-edit/storage-bin-edit.component.scss","./src/app/layout/company/storage-bin-edit/storage-bin-edit.component.ts","./src/app/layout/company/storage-bin-list/storage-bin-list.component.html","./src/app/layout/company/storage-bin-list/storage-bin-list.component.scss","./src/app/layout/company/storage-bin-list/storage-bin-list.component.ts","./src/app/layout/company/storage-location-add/storage-location-add.component.html","./src/app/layout/company/storage-location-add/storage-location-add.component.scss","./src/app/layout/company/storage-location-add/storage-location-add.component.ts","./src/app/layout/company/storage-location-edit/storage-location-edit.component.html","./src/app/layout/company/storage-location-edit/storage-location-edit.component.scss","./src/app/layout/company/storage-location-edit/storage-location-edit.component.ts","./src/app/layout/company/storage-location-list/storage-location-list.component.html","./src/app/layout/company/storage-location-list/storage-location-list.component.scss","./src/app/layout/company/storage-location-list/storage-location-list.component.ts"],"names":[],"mappings":"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","file":"company.module.chunk.js","sourcesContent":["module.exports = \"<div>\\r\\n    <div style=\\\"padding-top: 20px;\\\">\\r\\n        <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav()\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Branch Add</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Branch Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_name\\\" name=\\\"branch_name\\\" placeholder=\\\"Branch Name\\\"\\r\\n                                        formControlName=\\\"branch_name\\\" [ngClass]=\\\"displayFieldCss('branch_name')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_name')\\\">\\r\\n                                        Please enter branch name\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_email\\\" name=\\\"branch_email\\\" placeholder=\\\"Email\\\"\\r\\n                                        formControlName=\\\"branch_email\\\" [ngClass]=\\\"displayFieldCss('branch_email')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_email')\\\">\\r\\n                                        Please enter email\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Phone</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_contact_no\\\" name=\\\"branch_contact_no\\\" placeholder=\\\"Phone\\\"\\r\\n                                        formControlName=\\\"branch_contact_no\\\" [ngClass]=\\\"displayFieldCss('branch_contact_no')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_contact_no')\\\">\\r\\n                                        Please enter phone\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label>Branch Address</label>\\r\\n                                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_address\\\" name=\\\"branch_address\\\" rows=\\\"3\\\" placeholder=\\\"Branch Address\\\"\\r\\n                                        formControlName=\\\"branch_address\\\" [ngClass]=\\\"displayFieldCss('branch_address')\\\">{{companyBranch.branch_address}}</textarea>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_address')\\\">\\r\\n                                        Please enter branch address\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>State</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_state\\\" name=\\\"branch_state\\\" formControlName=\\\"branch_state\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('branch_state')\\\">\\r\\n                                        <option value=\\\"\\\">Select State</option>\\r\\n                                        <option *ngFor=\\\"let state of stateList;\\\" value=\\\"{{state.id}}\\\">{{state.state_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_state')\\\">\\r\\n                                        Please select state\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>City</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City Name\\\" [(ngModel)]=\\\"companyBranch.branch_city\\\" name=\\\"branch_city\\\"\\r\\n                                        formControlName=\\\"branch_city\\\" [ngClass]=\\\"displayFieldCss('branch_city')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_city')\\\">\\r\\n                                        Please enter state\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Pin</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Pin\\\" [(ngModel)]=\\\"companyBranch.branch_pincode\\\" name=\\\"branch_pincode\\\"\\r\\n                                        formControlName=\\\"branch_pincode\\\" [ngClass]=\\\"displayFieldCss('branch_pincode')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_pincode')\\\">\\r\\n                                        Please enter pin\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>GSTIN</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"GSTIN\\\" [(ngModel)]=\\\"companyBranch.branch_gstin\\\" name=\\\"branch_gstin\\\"\\r\\n                                        formControlName=\\\"branch_gstin\\\" [ngClass]=\\\"displayFieldCss('branch_gstin')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_gstin')\\\">\\r\\n                                        Please enter GSTIN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>PAN</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"PAN\\\" [(ngModel)]=\\\"companyBranch.branch_pan\\\" name=\\\"branch_pan\\\" formControlName=\\\"branch_pan\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('branch_pan')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_pan')\\\">\\r\\n                                        Please enter PAN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>CIN</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"CIN\\\" [(ngModel)]=\\\"companyBranch.branch_cin\\\" name=\\\"branch_cin\\\" formControlName=\\\"branch_cin\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('branch_cin')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_cin')\\\">\\r\\n                                        Please enter CIN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addNewCompanyBranch()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/branch-add/branch-add.component.html\n// module id = ./src/app/layout/company/branch-add/branch-add.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/branch-add/branch-add.component.scss\n// module id = ./src/app/layout/company/branch-add/branch-add.component.scss\n// module chunks = company.module","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-branch-add',\r\n  templateUrl: './branch-add.component.html',\r\n  styleUrls: ['./branch-add.component.scss']\r\n})\r\nexport class BranchAddComponent implements OnInit {\r\n\r\n  @Output() showBranchList = new EventEmitter();\r\n\r\n  companyBranch;\r\n  stateList;\r\n  form: FormGroup;\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      branch_name: [null, Validators.required],\r\n      branch_email: [null, [Validators.required,Validators.email]],\r\n      branch_contact_no: [null, Validators.required],\r\n      branch_address: [null, Validators.required],\r\n      branch_state: [null, Validators.required],\r\n      branch_city: [null, Validators.required],\r\n      branch_pincode: [null, Validators.required],\r\n      branch_gstin: [null, Validators.required],\r\n      branch_pan: [null, Validators.required],\r\n      branch_cin: [null, Validators.required]\r\n    });\r\n    this.companyBranch = {\r\n      branch_name: '',\r\n      branch_email: '',\r\n      branch_contact_no: '',\r\n      branch_address: '',\r\n      branch_state: '',\r\n      branch_city: '',\r\n      branch_pincode: '',\r\n      branch_gstin: '',\r\n      branch_pan: '',\r\n      branch_cin: '',\r\n      company: this.route.snapshot.params['id']\r\n    };\r\n    this.getStateList();\r\n  }\r\n\r\n  addNewCompanyBranch = function () {\r\n    if (this.form.valid) {\r\n      this.companyService.addNewCompanyBranch(this.companyBranch).subscribe(\r\n        response => {\r\n          this.toastr.success('Branch added successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          //this.goToList('states');\r\n          this.showBranchList.emit();\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  btnClickNav = function () {\r\n    this.showBranchList.emit();\r\n  };\r\n\r\n  getStateList = function () {\r\n    this.statesService.getStateActiveList().subscribe(\r\n      (data: any[]) => {\r\n        this.stateList = data;\r\n      }\r\n    );\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.form.get(field).valid && this.form.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': !this.form.get(field).valid && this.form.get(field).touched,\r\n      'is-valid': this.form.get(field).valid\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/branch-add/branch-add.component.ts","module.exports = \"<div>\\r\\n    <div  style=\\\"padding-top: 20px;\\\">\\r\\n      <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n      </div>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <form role=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n                <div class=\\\"card bg-light mb-3\\\">\\r\\n                    <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Branch Edit</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>Branch Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_name\\\" name=\\\"branch_name\\\" placeholder=\\\"Branch Name\\\" formControlName=\\\"branch_name\\\" [ngClass]=\\\"displayFieldCss('branch_name')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_name')\\\">\\r\\n                                        Please enter branch name\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>Email</label>\\r\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_email\\\" name=\\\"branch_email\\\" placeholder=\\\"Email\\\" formControlName=\\\"branch_email\\\" [ngClass]=\\\"displayFieldCss('branch_email')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_email')\\\">\\r\\n                                        Please enter email\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                              <label>Phone</label>\\r\\n                              <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_contact_no\\\" name=\\\"branch_contact_no\\\" placeholder=\\\"Phone\\\" formControlName=\\\"branch_contact_no\\\" [ngClass]=\\\"displayFieldCss('branch_contact_no')\\\">\\r\\n                              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_contact_no')\\\">\\r\\n                                    Please enter phone\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label>Branch Address</label>\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"companyBranch.branch_address\\\" name=\\\"branch_address\\\" rows=\\\"3\\\" placeholder=\\\"Branch Address\\\" formControlName=\\\"branch_address\\\" [ngClass]=\\\"displayFieldCss('branch_address')\\\">{{companyBranch.branch_address}}</textarea>\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_address')\\\">\\r\\n                                        Please enter branch address\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>State</label>\\r\\n                                <select class=\\\"form-control\\\"  [(ngModel)]=\\\"companyBranch.branch_state\\\" name=\\\"branch_state\\\" formControlName=\\\"branch_state\\\"\\r\\n                                [ngClass]=\\\"displayFieldCss('branch_state')\\\">\\r\\n                                    <option value=\\\"\\\">Select State</option>\\r\\n                                    <option *ngFor=\\\"let state of stateList;\\\" value=\\\"{{state.id}}\\\">{{state.state_name}}</option>\\r\\n                                </select>\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_state')\\\">\\r\\n                                        Please select state\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>City</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City Name\\\" [(ngModel)]=\\\"companyBranch.branch_city\\\" name=\\\"branch_city\\\" formControlName=\\\"branch_city\\\" [ngClass]=\\\"displayFieldCss('branch_city')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_city')\\\">\\r\\n                                        Please enter state\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>Pin</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Pin\\\" [(ngModel)]=\\\"companyBranch.branch_pincode\\\" name=\\\"branch_pincode\\\" formControlName=\\\"branch_pincode\\\" [ngClass]=\\\"displayFieldCss('branch_pincode')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_pincode')\\\">\\r\\n                                        Please enter pin\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>GSTIN</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"GSTIN\\\" [(ngModel)]=\\\"companyBranch.branch_gstin\\\" name=\\\"branch_gstin\\\" formControlName=\\\"branch_gstin\\\" [ngClass]=\\\"displayFieldCss('branch_gstin')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_gstin')\\\">\\r\\n                                        Please enter GSTIN\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>PAN</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"PAN\\\" [(ngModel)]=\\\"companyBranch.branch_pan\\\" name=\\\"branch_pan\\\" formControlName=\\\"branch_pan\\\"\\r\\n                                [ngClass]=\\\"displayFieldCss('branch_pan')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_pan')\\\">\\r\\n                                        Please enter PAN\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>CIN</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"CIN\\\" [(ngModel)]=\\\"companyBranch.branch_cin\\\" name=\\\"branch_cin\\\" formControlName=\\\"branch_cin\\\"\\r\\n                                [ngClass]=\\\"displayFieldCss('branch_cin')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch_cin')\\\">\\r\\n                                        Please enter CIN\\r\\n                                    </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCompanyBranch()\\\">Submit</button>\\r\\n                                <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </form>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/branch-edit/branch-edit.component.html\n// module id = ./src/app/layout/company/branch-edit/branch-edit.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/branch-edit/branch-edit.component.scss\n// module id = ./src/app/layout/company/branch-edit/branch-edit.component.scss\n// module chunks = company.module","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-branch-edit',\r\n  templateUrl: './branch-edit.component.html',\r\n  styleUrls: ['./branch-edit.component.scss']\r\n})\r\nexport class BranchEditComponent implements OnInit {\r\n\r\n  @Input() companyBranchId: number;\r\n\r\n  @Output() showBranchList = new EventEmitter();\r\n\r\n  companyBranch;\r\n  stateList;\r\n  form: FormGroup;\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      branch_name: [null, Validators.required],\r\n      branch_email: [null, [Validators.required,Validators.email]],\r\n      branch_contact_no: [null, Validators.required],\r\n      branch_address: [null, Validators.required],\r\n      branch_state: [null, Validators.required],\r\n      branch_city: [null, Validators.required],\r\n      branch_pincode: [null, Validators.required],\r\n      branch_gstin: [null, Validators.required],\r\n      branch_pan: [null, Validators.required],\r\n      branch_cin: [null, Validators.required]\r\n    });\r\n    // console.log(this.companyBranchId);\r\n    this.companyBranch = {\r\n      id: '',\r\n      branch_name: '',\r\n      branch_email: '',\r\n      branch_contact_no: '',\r\n      branch_address: '',\r\n      branch_state: '',\r\n      branch_city: '',\r\n      branch_pincode: '',\r\n      branch_gstin: '',\r\n      branch_pan: '',\r\n      branch_cin: '',\r\n      company: this.route.snapshot.params['id']\r\n    };\r\n\r\n    this.getCompanyBranchDetails(this.companyBranchId);\r\n    this.getStateList();\r\n  }\r\n\r\n  getCompanyBranchDetails = function (id) {\r\n\r\n    this.companyService.getCompanyBranchDetails(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyBranch = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  updateCompanyBranch = function () {\r\n    if (this.form.valid) {\r\n      this.companyService.updateCompanyBranch(this.companyBranch).subscribe(\r\n        response => {\r\n          //this.goToList('states');\r\n          this.toastr.success('Branch updated successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.showBranchList.emit();\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  btnClickNav = function () {\r\n    this.showBranchList.emit();\r\n  };\r\n\r\n  getStateList = function () {\r\n    this.statesService.getStateActiveList().subscribe(\r\n      (data: any[]) => {\r\n        this.stateList = data;\r\n      }\r\n    );\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.form.get(field).valid && this.form.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': !this.form.get(field).valid && this.form.get(field).touched,\r\n      'is-valid': this.form.get(field).valid\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/branch-edit/branch-edit.component.ts","module.exports = \"<div>\\r\\n  <div *ngIf=\\\"companyBranchCompShow.showList==true\\\">\\r\\n    <div style=\\\"padding-top: 20px;\\\">\\r\\n      <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n          <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n          <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"showBranchAdd()\\\">\\r\\n          <i class=\\\"fa fa-plus\\\"></i> New Branch</button>\\r\\n      </div>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <hr/>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <h5>Branch</h5>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <form role=\\\"form\\\" (ngSubmit)=\\\"dataSearch()\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"search_key\\\">\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\">\\r\\n                        <i class=\\\"fa fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Sl.No.</th>\\r\\n                <th>Unit</th>\\r\\n                <th>Unit Location</th>\\r\\n                <th>Contact No.</th>\\r\\n                <th>Email</th>\\r\\n                <th>GST</th>\\r\\n                <th>PAN</th>\\r\\n                <th>CIN</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let companyBranch of companyBranchList ; let i = index\\\">\\r\\n                <th scope=\\\"row\\\">{{i +1}}</th>\\r\\n                <td>{{companyBranch.branch_name}}</td>\\r\\n                <td>{{companyBranch.branch_address}}</td>\\r\\n                <td>{{companyBranch.branch_contact_no}}</td>\\r\\n                <td>{{companyBranch.branch_email}}</td>\\r\\n                <td>{{companyBranch.branch_gstin}}</td>\\r\\n                <td>{{companyBranch.branch_pan}}</td>\\r\\n                <td>{{companyBranch.branch_cin}}</td>\\r\\n                <td>\\r\\n                  <a href=\\\"javascript:void(0);\\\" title=\\\"Edit\\\" name=\\\"Edit\\\" (click)=\\\"showBranchEdit(companyBranch.id)\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"companyBranchList.length == 0\\\">\\r\\n                <td colspan=\\\"9\\\" class=\\\"text-center\\\">No record found</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"totalcompanyBranchList > 10\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card-body pull-right\\\">\\r\\n          <ngb-pagination [collectionSize]=\\\"totalcompanyBranchList\\\" [(page)]=\\\"defaultPagination\\\" (pageChange)=\\\"pagination()\\\" size=\\\"sm\\\"></ngb-pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"companyBranchCompShow.showAdd==true\\\">\\r\\n    <app-branch-add (showBranchList)=\\\"reloadBranchList($event)\\\"></app-branch-add>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"companyBranchCompShow.showEdit==true\\\">\\r\\n    <app-branch-edit [companyBranchId]=companyBranchId (showBranchList)=\\\"reloadBranchList($event)\\\"></app-branch-edit>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/branch-list/branch-list.component.html\n// module id = ./src/app/layout/company/branch-list/branch-list.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/branch-list/branch-list.component.scss\n// module id = ./src/app/layout/company/branch-list/branch-list.component.scss\n// module chunks = company.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-branch-list',\r\n  templateUrl: './branch-list.component.html',\r\n  styleUrls: ['./branch-list.component.scss']\r\n})\r\nexport class BranchListComponent implements OnInit {\r\n  companyBranchList = [];\r\n  states;\r\n  companyBranchCompShow;\r\n  companyBranchId;\r\n  defaultPagination: number;\r\n  totalcompanyBranchList: number;\r\n  search_key = '';\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.defaultPagination = 1;\r\n    this.companyBranchCompShow = {\r\n      showList: true,\r\n      showAdd: false,\r\n      showEdit: false\r\n    };\r\n\r\n    this.getCompanyBranchList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  showBranchAdd = function () {\r\n    this.companyBranchCompShow = {\r\n      showList: false,\r\n      showAdd: true,\r\n      showEdit: false\r\n    };\r\n  };\r\n\r\n  showBranchEdit = function (id) {\r\n    this.companyBranchId = id;\r\n    this.companyBranchCompShow = {\r\n      showList: false,\r\n      showAdd: false,\r\n      showEdit: true\r\n    };\r\n  };\r\n\r\n  reloadBranchList = function () {\r\n    this.companyBranchCompShow = {\r\n      showList: true,\r\n      showAdd: false,\r\n      showEdit: false\r\n    };\r\n\r\n    this.getCompanyBranchList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  getCompanyBranchList = function (id) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set('page', this.defaultPagination.toString());\r\n    params.set('search', this.search_key.toString());\r\n    this.companyService.getCompanyBranchList(id,params).subscribe(\r\n      (data: any[]) => {\r\n        this.totalcompanyBranchList = data['count'];\r\n        this.companyBranchList = data['results'];\r\n        // console.log(this.companyBranchList);\r\n      }\r\n    );\r\n  };\r\n\r\n  dataSearch() {\r\n    this.defaultPagination = 1;\r\n    this.getCompanyBranchList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  pagination = function () {\r\n    this.getCompanyBranchList(this.route.snapshot.params['id']);\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/branch-list/branch-list.component.ts","module.exports = \"<div>\\r\\n    <!-- <app-page-header [heading]=\\\"'Add Company'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h4 class=\\\"page-header\\\">Add Company</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('company')\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Add</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label>Mother Company</label>\\r\\n                                    <select class=\\\"form-control\\\" name=\\\"company_list\\\" formControlName=\\\"parent\\\" [ngClass]=\\\"displayFieldCss('parent')\\\">\\r\\n                                        <option value=\\\"\\\">Select Mother company</option>\\r\\n                                        <option *ngFor=\\\"let motherCompany of companyList ;\\\" value=\\\"{{motherCompany.id}}\\\">{{motherCompany.company_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['parent'].hasError('required')\\\">\\r\\n                                        Please select mother company\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label>Company Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"company_name\\\" placeholder=\\\"Name\\\" formControlName=\\\"company_name\\\" [ngClass]=\\\"displayFieldCss('company_name')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_name'].hasError('required')\\\">\\r\\n                                        Please enter company name\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Website</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"company_url\\\" placeholder=\\\"Website\\\" formControlName=\\\"company_url\\\" [ngClass]=\\\"displayFieldCss('company_url')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_url'].hasError('pattern') && !form.controls['company_url'].hasError('required')\\\">\\r\\n                                        Please enter a valid website\\r\\n                                    </div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_url'].hasError('required')\\\">\\r\\n                                        Please enter website\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"company_email\\\" placeholder=\\\"Email\\\" formControlName=\\\"company_email\\\" [ngClass]=\\\"displayFieldCss('company_email')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_email'].hasError('pattern') && !form.controls['company_email'].hasError('required')\\\">\\r\\n                                        Please enter a valid email address\\r\\n                                    </div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_email'].hasError('required')\\\">\\r\\n                                        Email is required\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Phone</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"company_contact\\\" placeholder=\\\"Phone\\\" formControlName=\\\"company_contact\\\" [ngClass]=\\\"displayFieldCss('company_contact')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_contact'].hasError('minlength') && !form.controls['company_contact'].hasError('required')\\\">\\r\\n                                        Please enter at least 10 digit\\r\\n                                    </div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_contact'].hasError('maxlength') && !form.controls['company_contact'].hasError('required')\\\">\\r\\n                                        Phone number should be less then 13 digit\\r\\n                                    </div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_contact'].hasError('required')\\\">\\r\\n                                        Please enter phone\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label>Company Address</label>\\r\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"3\\\" placeholder=\\\"Company Address\\\" name=\\\"company_address\\\" formControlName=\\\"company_address\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_address')\\\"></textarea>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_address'].hasError('required')\\\">\\r\\n                                        Please enter address\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>State</label>\\r\\n                                    <select class=\\\"form-control\\\" name=\\\"company_state\\\" formControlName=\\\"company_state\\\" [ngClass]=\\\"displayFieldCss('company_state')\\\">\\r\\n                                        <option value=\\\"\\\">Select State</option>\\r\\n                                        <option *ngFor=\\\"let state of stateList ;\\\" value=\\\"{{state.id}}\\\">{{state.state_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_state'].hasError('required')\\\">\\r\\n                                        Please select state\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>City</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City Name\\\" name=\\\"company_city\\\" formControlName=\\\"company_city\\\" [ngClass]=\\\"displayFieldCss('company_city')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_city'].hasError('required')\\\">\\r\\n                                        Please enter city\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Pin</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pin\\\" name=\\\"company_pin\\\" formControlName=\\\"company_pin\\\" [ngClass]=\\\"displayFieldCss('company_pin')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_pin'].hasError('required')\\\">\\r\\n                                        Please enter pin\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>GSTIN</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"GSTIN\\\" name=\\\"company_gst\\\" formControlName=\\\"company_gst\\\" [ngClass]=\\\"displayFieldCss('company_gst')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_gst'].hasError('required')\\\">\\r\\n                                        Please enter GSTN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>PAN</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"PAN\\\" name=\\\"company_pan\\\" formControlName=\\\"company_pan\\\" [ngClass]=\\\"displayFieldCss('company_pan')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_pan'].hasError('required')\\\">\\r\\n                                        Please enter PAN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>CIN</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"CIN\\\" placeholder=\\\"CIN\\\" name=\\\"company_cin\\\" formControlName=\\\"company_cin\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_cin')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_cin'].hasError('required')\\\">\\r\\n                                        Please enter CIN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addNewCompany()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company-add/company-add.component.html\n// module id = ./src/app/layout/company/company-add/company-add.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company-add/company-add.component.scss\n// module id = ./src/app/layout/company/company-add/company-add.component.scss\n// module chunks = company.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-company-add',\r\n  templateUrl: './company-add.component.html',\r\n  styleUrls: ['./company-add.component.scss']\r\n})\r\nexport class CompanyAddComponent implements OnInit {\r\n  companyList=[];\r\n  stateList;\r\n  form: FormGroup;\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      parent: new FormControl('', Validators.required),\r\n      company_name: new FormControl('', Validators.required),\r\n      company_url: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/)\r\n      ]),\r\n      company_email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)\r\n      ]),\r\n      company_contact: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(12)\r\n      ]),\r\n      company_address: new FormControl('', Validators.required),\r\n      company_state: new FormControl('', Validators.required),\r\n      company_city: new FormControl('', Validators.required),\r\n      company_pin: new FormControl('', Validators.required),\r\n      company_gst: new FormControl('', Validators.required),\r\n      company_pan: new FormControl('', Validators.required),\r\n      company_cin: new FormControl('', Validators.required)\r\n    });\r\n    this.getCompanyDropdownList();\r\n    this.getStateList();\r\n  }\r\n\r\n\r\n  goToList = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  addNewCompany = function () {\r\n    if (this.form.valid) {\r\n      this.companyService.addNewCompany(this.form.value).subscribe(\r\n        response => {\r\n          // console.log(response)\r\n          this.toastr.success('Company added successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('company');\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getStateList = function () {\r\n    this.statesService.getStateActiveList().subscribe(\r\n      (data: any[]) => {\r\n        this.stateList = data;\r\n        // console.log(this.stateList);\r\n      }\r\n    );\r\n  };\r\n\r\n  getCompanyDropdownList = function () {\r\n    this.companyService.getCompanyDropdownList().subscribe(\r\n      (data: any[]) => {\r\n        this.companyList = data;\r\n        // console.log(this.companyList);\r\n      }\r\n    );\r\n  };\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': this.form.controls[field].invalid && (this.form.controls[field].dirty || this.form.controls[field].touched),\r\n      'is-valid': this.form.controls[field].valid && (this.form.controls[field].dirty || this.form.controls[field].touched)\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/company-add/company-add.component.ts","module.exports = \"<div>\\r\\n    <!-- <app-page-header [heading]=\\\"'Company Details'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h4 class=\\\"page-header\\\">Company Details</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('company')\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card bg-light mb-3\\\">\\r\\n                    <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Details : {{company.company_name}}</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <ngb-tabset>\\r\\n                                    <ngb-tab title=\\\"Company Details\\\">\\r\\n                                        <ng-template ngbTabContent>\\r\\n                                            <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th colspan=\\\"2\\\">\\r\\n                                                            <label class=\\\"control-label \\\">Company Name : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_name}}</h5>\\r\\n                                                        </th>\\r\\n                                                        <th>\\r\\n                                                            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['/company/edit', company.id]\\\">\\r\\n                                                                <i class=\\\"fa fa-edit\\\"></i> Edit</button>\\r\\n                                                        </th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">Website : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_url}}</h5>\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">Email : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_email}}</h5>\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">Phone : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_contact}}</h5>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    <tr>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">Company Address : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_address}}</h5>\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">State : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{states.state_name}}</h5>\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">City : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_city}}</h5>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    <tr>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">Pin : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_pin}}</h5>\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">GSTIN : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_gst}}</h5>\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <label class=\\\"control-label \\\">PAN : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_pan}}</h5>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                    <tr>\\r\\n                                                        <td colspan=\\\"3\\\">\\r\\n                                                            <label class=\\\"control-label \\\">CIN : </label>\\r\\n                                                            <br>\\r\\n                                                            <h5>{{company.company_cin}}</h5>\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                            </table>\\r\\n                                        </ng-template>\\r\\n                                    </ngb-tab>\\r\\n                                    <ngb-tab title=\\\"Unit / Branch\\\">\\r\\n                                        <ng-template ngbTabContent>\\r\\n                                            <app-branch-list></app-branch-list>\\r\\n                                        </ng-template>\\r\\n                                    </ngb-tab>\\r\\n                                    <ngb-tab title=\\\"Storage Location\\\">\\r\\n                                        <ng-template ngbTabContent>\\r\\n                                            <app-storage-location-list></app-storage-location-list>\\r\\n                                        </ng-template>\\r\\n                                    </ngb-tab>\\r\\n                                    <ngb-tab title=\\\"Storage Bin\\\">\\r\\n                                        <ng-template ngbTabContent>\\r\\n                                            <app-storage-bin-list></app-storage-bin-list>\\r\\n                                        </ng-template>\\r\\n                                    </ngb-tab>\\r\\n                                </ngb-tabset>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company-details/company-details.component.html\n// module id = ./src/app/layout/company/company-details/company-details.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company-details/company-details.component.scss\n// module id = ./src/app/layout/company/company-details/company-details.component.scss\n// module chunks = company.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService} from '../../states/states.service';\r\n\r\n@Component({\r\n  selector: 'app-company-details',\r\n  templateUrl: './company-details.component.html',\r\n  styleUrls: ['./company-details.component.scss']\r\n})\r\nexport class CompanyDetailsComponent implements OnInit {\r\n  company;\r\n  states;\r\n  constructor(private companyService: CompanyService, private statesService: StatesService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.company = {\r\n      id: '',\r\n      company_name: '',\r\n      company_url: '',\r\n      company_email: '',\r\n      company_contact: '',\r\n      company_address:'',\r\n      company_state:'',\r\n      company_city:'',\r\n      company_pin:'',\r\n      company_gst:'',\r\n      company_pan:'',\r\n      company_cin:''\r\n    };\r\n\r\n    this.states = {\r\n      id: '',\r\n      state_name: '',\r\n      tin_number: '',\r\n      state_code:''\r\n    };\r\n    this.getCompanyDetails(this.route.snapshot.params['id']);\r\n\r\n  }\r\n\r\n  getCompanyDetails(id) {\r\n\r\n    this.companyService.getCompanyDetails(id).subscribe(\r\n      (data: any[]) =>{\r\n        this.company = data;\r\n       \r\n        if(this.company.company_state)\r\n        {\r\n          this.getStateDetails(this.company.company_state);\r\n        }\r\n      }\r\n     );\r\n  }\r\n\r\n  getStateDetails(id) {\r\n    this.statesService.getStateDetails(id).subscribe(\r\n      (data: any[]) =>{  \r\n        this.states = data;\r\n      }\r\n     );\r\n  }\r\n\r\n  btnClickNav(toNav) {\r\n    this.router.navigateByUrl('/'+toNav);\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/company-details/company-details.component.ts","module.exports = \"<div>\\r\\n    <!-- <app-page-header [heading]=\\\"'Edit Company'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h4 class=\\\"page-header\\\">Edit Company</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('company')\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Edit</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label>Company Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"company.company_name\\\" name=\\\"company_name\\\" placeholder=\\\"Name\\\" formControlName=\\\"company_name\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_name')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_name'].hasError('required')\\\">\\r\\n                                        Please enter company name\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Website</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"company.company_url\\\" name=\\\"company_url\\\" placeholder=\\\"Website\\\" formControlName=\\\"company_url\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_url')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_url'].hasError('pattern') && !form.controls['company_url'].hasError('required')\\\">\\r\\n                                        Please enter a valid website\\r\\n                                    </div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_url'].hasError('required')\\\">\\r\\n                                        Please enter website\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"company.company_email\\\" name=\\\"company_email\\\" placeholder=\\\"Email\\\" formControlName=\\\"company_email\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_email')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_email'].hasError('pattern') && !form.controls['company_email'].hasError('required')\\\">\\r\\n                                        Please enter a valid email address\\r\\n                                    </div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_email'].hasError('required')\\\">\\r\\n                                        Email is required\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Phone</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"company.company_contact\\\" name=\\\"company_contact\\\" placeholder=\\\"Phone\\\"\\r\\n                                        formControlName=\\\"company_contact\\\" [ngClass]=\\\"displayFieldCss('company_contact')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_contact'].hasError('minlength') && !form.controls['company_contact'].hasError('required')\\\">\\r\\n                                        Please enter at least 10 digit\\r\\n                                    </div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_contact'].hasError('maxlength') && !form.controls['company_contact'].hasError('required')\\\">\\r\\n                                        Phone number should be less then 13 digit\\r\\n                                    </div>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_contact'].hasError('required')\\\">\\r\\n                                        Please enter phone\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label>Company Address</label>\\r\\n                                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"company.company_address\\\" name=\\\"company_address\\\" rows=\\\"3\\\" placeholder=\\\"Company Address\\\"\\r\\n                                        formControlName=\\\"company_address\\\" [ngClass]=\\\"displayFieldCss('company_address')\\\">{{company.company_address}}</textarea>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_address'].hasError('required')\\\">\\r\\n                                        Please enter address\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>State</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"company.company_state\\\" name=\\\"company_state\\\" formControlName=\\\"company_state\\\" [ngClass]=\\\"displayFieldCss('company_state')\\\">\\r\\n                                        <option value=\\\"0\\\">Select State</option>\\r\\n                                        <option *ngFor=\\\"let state of stateList ;\\\" value=\\\"{{state.id}}\\\">{{state.state_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_state'].hasError('required')\\\">\\r\\n                                        Please select state\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>City</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City Name\\\" [(ngModel)]=\\\"company.company_city\\\" name=\\\"company_city\\\" formControlName=\\\"company_city\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_city')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_city'].hasError('required')\\\">\\r\\n                                        Please enter city\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Pin</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pin\\\" [(ngModel)]=\\\"company.company_pin\\\" name=\\\"company_pin\\\" formControlName=\\\"company_pin\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_pin')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_pin'].hasError('required')\\\">\\r\\n                                        Please enter pin\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>GSTIN</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"GSTIN\\\" [(ngModel)]=\\\"company.company_gst\\\" name=\\\"company_gst\\\" formControlName=\\\"company_gst\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_gst')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_gst'].hasError('required')\\\">\\r\\n                                        Please enter GSTN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>PAN</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"PAN\\\" [(ngModel)]=\\\"company.company_pan\\\" name=\\\"company_pan\\\" formControlName=\\\"company_pan\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_pan')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_pan'].hasError('required')\\\">\\r\\n                                        Please enter PAN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>CIN</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"CIN\\\" [(ngModel)]=\\\"company.company_cin\\\" name=\\\"company_cin\\\" formControlName=\\\"company_cin\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('company_cin')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['company_cin'].hasError('required')\\\">\\r\\n                                        Please enter CIN\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCompany()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company-edit/company-edit.component.html\n// module id = ./src/app/layout/company/company-edit/company-edit.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company-edit/company-edit.component.scss\n// module id = ./src/app/layout/company/company-edit/company-edit.component.scss\n// module chunks = company.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-company-edit',\r\n  templateUrl: './company-edit.component.html',\r\n  styleUrls: ['./company-edit.component.scss']\r\n})\r\nexport class CompanyEditComponent implements OnInit {\r\n  company;\r\n  stateList;\r\n  form: FormGroup;\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      company_name: new FormControl('', Validators.required),\r\n      company_url: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/)\r\n      ]),\r\n      company_email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)\r\n      ]),\r\n      company_contact: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(12)\r\n      ]),\r\n      company_address: new FormControl('', Validators.required),\r\n      company_state: new FormControl('', Validators.required),\r\n      company_city: new FormControl('', Validators.required),\r\n      company_pin: new FormControl('', Validators.required),\r\n      company_gst: new FormControl('', Validators.required),\r\n      company_pan: new FormControl('', Validators.required),\r\n      company_cin: new FormControl('', Validators.required)\r\n    });\r\n    this.company = {\r\n      id: '',\r\n      company_name: '',\r\n      company_url: '',\r\n      company_email: '',\r\n      company_contact: '',\r\n      company_address: '',\r\n      company_state: '',\r\n      company_city: '',\r\n      company_pin: '',\r\n      company_gst: '',\r\n      company_pan: '',\r\n      company_cin: ''\r\n    };\r\n    this.getCompanyDetails(this.route.snapshot.params['id']);\r\n    this.getStateList();\r\n  }\r\n  getCompanyDetails = function (id) {\r\n\r\n    this.companyService.getCompanyDetails(id).subscribe(\r\n      (data: any[]) => {\r\n        this.company = data;\r\n        // console.log(this.company);\r\n      }\r\n    );\r\n  }\r\n\r\n  goToList = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n\r\n  updateCompany = function () {\r\n    if (this.form.valid) {\r\n      this.companyService.updateCompany(this.company).subscribe(\r\n        response => {\r\n          this.toastr.success('Company updated successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('company');\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  getStateList = function () {\r\n    this.statesService.getStateActiveList().subscribe(\r\n      (data: any[]) => {\r\n        this.stateList = data;\r\n      }\r\n    );\r\n  };\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }  \r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': this.form.controls[field].invalid && (this.form.controls[field].dirty || this.form.controls[field].touched),\r\n      'is-valid': this.form.controls[field].valid && (this.form.controls[field].dirty || this.form.controls[field].touched)\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/company-edit/company-edit.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CompanyComponent } from './company.component';\r\nimport { CompanyAddComponent } from './company-add/company-add.component';\r\nimport { CompanyDetailsComponent } from './company-details/company-details.component';\r\nimport { CompanyEditComponent } from './company-edit/company-edit.component';\r\nimport { BranchListComponent } from './branch-list/branch-list.component';\r\nimport { BranchAddComponent } from './branch-add/branch-add.component';\r\nimport { BranchEditComponent } from './branch-edit/branch-edit.component';\r\nimport { StorageLocationListComponent } from './storage-location-list/storage-location-list.component';\r\nimport { StorageLocationAddComponent } from './storage-location-add/storage-location-add.component';\r\nimport { StorageLocationEditComponent } from './storage-location-edit/storage-location-edit.component';\r\nimport { StorageBinListComponent } from './storage-bin-list/storage-bin-list.component';\r\nimport { StorageBinAddComponent } from './storage-bin-add/storage-bin-add.component';\r\nimport { StorageBinEditComponent } from './storage-bin-edit/storage-bin-edit.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyComponent\r\n  },\r\n  {\r\n    path: 'add',\r\n    component: CompanyAddComponent\r\n  },\r\n  {\r\n    path: 'details/:id',\r\n    component: CompanyDetailsComponent\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: CompanyEditComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/company-routing.module.ts","module.exports = \"<div>\\n  <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\n     <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\n     <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\n     <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('company/add')\\\"><i class=\\\"fa fa-plus\\\"></i> New Company</button>\\n  </div>\\n  <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<hr/>\\n<div style=\\\"text-align: center\\\">\\n  <div class=\\\"tree\\\">\\n    <ul>\\n        <li *ngFor=\\\"let company of companyList\\\" >\\n            <a href=\\\"javascript:void(0);\\\" [routerLink]=\\\"['/company/details', company.id]\\\">{{company.company_name}}</a>\\n            <ul *ngIf=\\\"company.children.length>0\\\">\\n                <li *ngFor=\\\"let subCompany of company.children\\\">\\n                    <a href=\\\"javascript:void(0);\\\" [routerLink]=\\\"['/company/details', subCompany.id]\\\">{{subCompany.company_name}}</a>\\n                    <ul *ngIf=\\\"subCompany.children.length>0\\\">\\n                        <li *ngFor=\\\"let subSubCompany of subCompany.children\\\">\\n                            <a href=\\\"javascript:void(0);\\\" [routerLink]=\\\"['/company/details', subSubCompany.id]\\\">{{subSubCompany.company_name}}</a>\\n                            <ul *ngIf=\\\"subSubCompany.children.length>0\\\">\\n                                <li *ngFor=\\\"let subSubSubCompany of subSubCompany.children\\\">\\n                                    <a href=\\\"javascript:void(0);\\\" [routerLink]=\\\"['/company/details', subSubSubCompany.id]\\\">{{subSubSubCompany.company_name}}</a>\\n                                </li>\\n                            </ul>\\n                        </li>\\n                    </ul>\\n                </li>\\n            </ul>\\n        </li>\\n    </ul>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company-tree/company-tree.component.html\n// module id = ./src/app/layout/company/company-tree/company-tree.component.html\n// module chunks = company.module","module.exports = \".tree ul {\\n  padding-top: 20px;\\n  position: relative;\\n  transition: all 0.5s;\\n  -webkit-transition: all 0.5s;\\n  -moz-transition: all 0.5s; }\\n\\n.tree li {\\n  float: left;\\n  text-align: center;\\n  list-style-type: none;\\n  position: relative;\\n  padding: 20px 5px 0 5px;\\n  transition: all 0.5s;\\n  -webkit-transition: all 0.5s;\\n  -moz-transition: all 0.5s; }\\n\\n/*We will use ::before and ::after to draw the connectors*/\\n\\n.tree li::before, .tree li::after {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  right: 50%;\\n  border-top: 1px solid #2BBBAF;\\n  width: 50%;\\n  height: 20px; }\\n\\n.tree li::after {\\n  right: auto;\\n  left: 50%;\\n  border-left: 1px solid #2BBBAF; }\\n\\n/*We need to remove left-right connectors from elements without\\r\\n\\r\\nany siblings*/\\n\\n.tree li:only-child::after, .tree li:only-child::before {\\n  display: none; }\\n\\n/*Remove space from the top of single children*/\\n\\n.tree li:only-child {\\n  padding-top: 0; }\\n\\n/*Remove left connector from first child and\\r\\n\\r\\nright connector from last child*/\\n\\n.tree li:first-child::before, .tree li:last-child::after {\\n  border: 0 none; }\\n\\n/*Adding back the vertical connector to the last nodes*/\\n\\n.tree li:last-child::before {\\n  border-right: 1px solid #2BBBAF;\\n  border-radius: 0 5px 0 0;\\n  -webkit-border-radius: 0 5px 0 0;\\n  -moz-border-radius: 0 5px 0 0; }\\n\\n.tree li:first-child::after {\\n  border-radius: 5px 0 0 0;\\n  -webkit-border-radius: 5px 0 0 0;\\n  -moz-border-radius: 5px 0 0 0; }\\n\\n/*Time to add downward connectors from parents*/\\n\\n.tree ul ul::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 50%;\\n  border-left: 1px solid #2BBBAF;\\n  width: 0;\\n  height: 20px; }\\n\\n.tree li a {\\n  border: 1px solid #2BBBAF;\\n  padding: 8px 19px;\\n  text-decoration: none;\\n  color: #666;\\n  font-family: arial, verdana, tahoma;\\n  font-size: 14px;\\n  display: inline-block;\\n  transition: all 0.5s;\\n  -webkit-transition: all 0.5s;\\n  -moz-transition: all 0.5s; }\\n\\n/*Time for some hover effects*/\\n\\n/*We will apply the hover effect the the lineage of the element also*/\\n\\n.tree li a:hover, .tree li a:hover + ul li a {\\n  background-color: #2BBBAF;\\n  color: #fff;\\n  border: 1px solid #2BBBAF; }\\n\\n/*Connector styles on hover*/\\n\\n.tree li a:hover + ul li::after,\\n.tree li a:hover + ul li::before,\\n.tree li a:hover + ul::before,\\n.tree li a:hover + ul ul::before {\\n  border-color: #2BBBAF; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company-tree/company-tree.component.scss\n// module id = ./src/app/layout/company/company-tree/company-tree.component.scss\n// module chunks = company.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { CompanyService } from '../company.service';\r\n@Component({\r\n  selector: 'app-company-tree',\r\n  templateUrl: './company-tree.component.html',\r\n  styleUrls: ['./company-tree.component.scss']\r\n})\r\nexport class CompanyTreeComponent implements OnInit {\r\n  companyList;\r\n  \r\n  constructor(private companyService: CompanyService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getCompanyList();\r\n  }\r\n\r\n  getCompanyList= function(){\r\n    this.companyService.getCompanyList().subscribe(\r\n      (data: any[]) =>{   \r\n        this.companyList = data;\r\n        // console.log(this.companyList);\r\n      }\r\n     );\r\n  };\r\n\r\n  btnClickNav= function (toNav) {\r\n    this.router.navigateByUrl('/'+toNav);\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/company-tree/company-tree.component.ts","module.exports = \"<div>\\r\\n  <!-- <app-page-header [heading]=\\\"'Company Hierarchy'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n  <h2 class=\\\"text-muted\\\">Company Hierarchy</h2>\\r\\n  <app-company-tree></app-company-tree>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company.component.html\n// module id = ./src/app/layout/company/company.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/company.component.scss\n// module id = ./src/app/layout/company/company.component.scss\n// module chunks = company.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.scss']\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  \r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/company.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CompanyRoutingModule } from './company-routing.module';\r\nimport { CompanyComponent } from './company.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { CompanyTreeComponent } from './company-tree/company-tree.component';\r\nimport { CompanyAddComponent } from './company-add/company-add.component';\r\nimport { CompanyDetailsComponent } from './company-details/company-details.component';\r\nimport { CompanyEditComponent } from './company-edit/company-edit.component';\r\nimport { BranchListComponent } from './branch-list/branch-list.component';\r\nimport { BranchAddComponent } from './branch-add/branch-add.component';\r\nimport { BranchEditComponent } from './branch-edit/branch-edit.component';\r\nimport { StorageLocationListComponent } from './storage-location-list/storage-location-list.component';\r\nimport { StorageLocationAddComponent } from './storage-location-add/storage-location-add.component';\r\nimport { StorageLocationEditComponent } from './storage-location-edit/storage-location-edit.component';\r\nimport { StorageBinListComponent } from './storage-bin-list/storage-bin-list.component';\r\nimport { StorageBinAddComponent } from './storage-bin-add/storage-bin-add.component';\r\nimport { StorageBinEditComponent } from './storage-bin-edit/storage-bin-edit.component';\r\n\r\n\r\nimport { BsComponentModule } from '../bs-component/bs-component.module';\r\n\r\nimport { CompanyService } from './company.service';\r\nimport { StatesService} from '../states/states.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CompanyRoutingModule,\r\n    PageHeaderModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule.forRoot(),\r\n    BsComponentModule\r\n  ],\r\n  declarations: [\r\n    CompanyComponent,\r\n    CompanyTreeComponent, \r\n    CompanyAddComponent, \r\n    CompanyDetailsComponent, \r\n    CompanyEditComponent, \r\n    BranchListComponent, \r\n    BranchAddComponent, \r\n    BranchEditComponent, \r\n    StorageLocationListComponent, \r\n    StorageLocationAddComponent, \r\n    StorageLocationEditComponent, \r\n    StorageBinListComponent, \r\n    StorageBinAddComponent, \r\n    StorageBinEditComponent\r\n  ],\r\n  providers: [CompanyService,StatesService]\r\n})\r\nexport class CompanyModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/company.module.ts","module.exports = \"<div>\\r\\n    <div style=\\\"padding-top: 20px;\\\">\\r\\n        <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav()\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Storage Bin Add</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-3\\\">\\r\\n                                    <label>Branch</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.branch\\\" name=\\\"storagebin_branch\\\" formControlName=\\\"branch\\\" [ngClass]=\\\"displayFieldCss('branch')\\\">\\r\\n                                        <option value=\\\"\\\">Select Branch</option>\\r\\n                                        <option *ngFor=\\\"let companyBranch of companyBranchList;\\\" value=\\\"{{companyBranch.id}}\\\">{{companyBranch.branch_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch')\\\">\\r\\n                                        Please select branch\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-3\\\">\\r\\n                                    <label>Storage</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.storage\\\" name=\\\"storagebin_storage\\\" formControlName=\\\"storage\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('storage')\\\">\\r\\n                                        <option value=\\\"\\\">Select Storage</option>\\r\\n                                        <option *ngFor=\\\"let companyStorage of companyStorageList;\\\" value=\\\"{{companyStorage.id}}\\\">{{companyStorage.storage_address}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage')\\\">\\r\\n                                        Please select storage\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Bin Number</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.bin_no\\\" name=\\\"bin_no\\\" placeholder=\\\"Bin Number\\\" formControlName=\\\"bin_no\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('bin_no')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('bin_no')\\\">\\r\\n                                        Please enter bin number\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Bin Volume</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.bin_volume\\\" name=\\\"bin_volume\\\" placeholder=\\\"Bin Volume\\\" formControlName=\\\"bin_volume\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('bin_volume')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('bin_volume')\\\">\\r\\n                                        Please enter bin volume\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Material UOM</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.uom\\\" name=\\\"storagebin_uom\\\" formControlName=\\\"uom\\\" [ngClass]=\\\"displayFieldCss('uom')\\\">\\r\\n                                        <option value=\\\"\\\">Select UOM</option>\\r\\n                                        <option *ngFor=\\\"let uom of UOMList;\\\" value=\\\"{{uom.id}}\\\">{{uom.name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('uom')\\\">\\r\\n                                        Please select UMO\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addNewCompanyStorageBin()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-bin-add/storage-bin-add.component.html\n// module id = ./src/app/layout/company/storage-bin-add/storage-bin-add.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-bin-add/storage-bin-add.component.scss\n// module id = ./src/app/layout/company/storage-bin-add/storage-bin-add.component.scss\n// module chunks = company.module","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-storage-bin-add',\r\n  templateUrl: './storage-bin-add.component.html',\r\n  styleUrls: ['./storage-bin-add.component.scss']\r\n})\r\nexport class StorageBinAddComponent implements OnInit {\r\n  @Output() showStorageBinList = new EventEmitter();\r\n\r\n  companyStorageBin;\r\n  companyBranchList;\r\n  companyStorageList;\r\n  UOMList;\r\n  form: FormGroup;\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      bin_no: [null, Validators.required],\r\n      bin_volume: [null, Validators.required],\r\n      branch: [null, Validators.required],\r\n      storage: [null, Validators.required],\r\n      uom: [null, Validators.required]\r\n    });\r\n    this.companyStorageBin = {\r\n      bin_no: '',\r\n      bin_volume: '',\r\n      branch: '',\r\n      storage: '',\r\n      uom: '',\r\n      company: this.route.snapshot.params['id']\r\n    };\r\n    this.getCompanyBranchList(this.route.snapshot.params['id']);\r\n    this.getCompanyStorageList(this.route.snapshot.params['id']);\r\n    this.getUOMList();\r\n  }\r\n\r\n  addNewCompanyStorageBin = function () {\r\n    if (this.form.valid) {\r\n      this.companyService.addNewCompanyStorageBin(this.companyStorageBin).subscribe(\r\n        response => {\r\n          this.toastr.success('Storeage bin added successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.showStorageBinList.emit();\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  btnClickNav = function () {\r\n    this.showStorageBinList.emit();\r\n  };\r\n\r\n  getCompanyBranchList = function (id) {\r\n    this.companyService.getCompanyBranchList(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyBranchList = data['results'];\r\n        // console.log(this.companyBranchList);\r\n      }\r\n    );\r\n  };\r\n\r\n  getCompanyStorageList = function (id) {\r\n    this.companyService.getCompanyStorageList(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyStorageList = data['results'];\r\n        // console.log(this.companyStorageList);\r\n      }\r\n    );\r\n  };\r\n\r\n  getUOMList = function () {\r\n    this.companyService.getUOMList().subscribe(\r\n      (data: any[]) => {\r\n        this.UOMList = data['results'];\r\n        // console.log(this.UOMList);\r\n      }\r\n    );\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.form.get(field).valid && this.form.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': !this.form.get(field).valid && this.form.get(field).touched,\r\n      'is-valid': this.form.get(field).valid\r\n    };\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/storage-bin-add/storage-bin-add.component.ts","module.exports = \"<div>\\r\\n    <div style=\\\"padding-top: 20px;\\\">\\r\\n        <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav()\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Storage Bin Edit</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-3\\\">\\r\\n                                    <label>Branch</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.branch\\\" name=\\\"storagebin_branch\\\" formControlName=\\\"branch\\\" [ngClass]=\\\"displayFieldCss('branch')\\\">\\r\\n                                        <option value=\\\"0\\\">Select Branch</option>\\r\\n                                        <option *ngFor=\\\"let companyBranch of companyBranchList;\\\" value=\\\"{{companyBranch.id}}\\\">{{companyBranch.branch_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch')\\\">\\r\\n                                        Please select branch\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-3\\\">\\r\\n                                    <label>Storage</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.storage\\\" name=\\\"storagebin_storage\\\" formControlName=\\\"storage\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('storage')\\\">\\r\\n                                        <option value=\\\"0\\\">Select Storage</option>\\r\\n                                        <option *ngFor=\\\"let companyStorage of companyStorageList;\\\" value=\\\"{{companyStorage.id}}\\\">{{companyStorage.storage_address}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage')\\\">\\r\\n                                        Please select storage\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Bin Number</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.bin_no\\\" name=\\\"bin_no\\\" placeholder=\\\"Bin Number\\\" formControlName=\\\"bin_no\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('bin_no')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('bin_no')\\\">\\r\\n                                        Please enter bin number\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Bin Volume</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.bin_volume\\\" name=\\\"bin_volume\\\" placeholder=\\\"Bin Volume\\\"\\r\\n                                        formControlName=\\\"bin_volume\\\" [ngClass]=\\\"displayFieldCss('bin_volume')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('bin_volume')\\\">\\r\\n                                        Please enter bin volume\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Material UOM</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorageBin.uom\\\" name=\\\"storagebin_uom\\\" formControlName=\\\"uom\\\" [ngClass]=\\\"displayFieldCss('uom')\\\">\\r\\n                                        <option value=\\\"0\\\">Select UOM</option>\\r\\n                                        <option *ngFor=\\\"let uom of UOMList;\\\" value=\\\"{{uom.id}}\\\">{{uom.name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('uom')\\\">\\r\\n                                        Please select UMO\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCompanyStorageBin()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-bin-edit/storage-bin-edit.component.html\n// module id = ./src/app/layout/company/storage-bin-edit/storage-bin-edit.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-bin-edit/storage-bin-edit.component.scss\n// module id = ./src/app/layout/company/storage-bin-edit/storage-bin-edit.component.scss\n// module chunks = company.module","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-storage-bin-edit',\r\n  templateUrl: './storage-bin-edit.component.html',\r\n  styleUrls: ['./storage-bin-edit.component.scss']\r\n})\r\nexport class StorageBinEditComponent implements OnInit {\r\n  @Input() companyStorageBinId: number;\r\n\r\n  @Output() showStorageBinList = new EventEmitter();\r\n\r\n  companyStorageBin;\r\n  companyBranchList;\r\n  companyStorageList;\r\n  UOMList;\r\n  form: FormGroup;\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      bin_no: [null, Validators.required],\r\n      bin_volume: [null, Validators.required],\r\n      branch: [null, Validators.required],\r\n      storage: [null, Validators.required],\r\n      uom: [null, Validators.required]\r\n    });\r\n    // console.log(this.companyStorageBinId);\r\n\r\n    this.companyStorageBin = {\r\n      id: '',\r\n      bin_no: '',\r\n      bin_volume: '',\r\n      branch: '',\r\n      storage: '',\r\n      uom: '',\r\n      company: this.route.snapshot.params['id']\r\n    };\r\n\r\n    this.getCompanyStorageBinDetails(this.companyStorageBinId);\r\n    this.getCompanyBranchList(this.route.snapshot.params['id']);\r\n    this.getCompanyStorageList(this.route.snapshot.params['id']);\r\n    this.getUOMList();\r\n  }\r\n\r\n  getCompanyStorageBinDetails = function (id) {\r\n\r\n    this.companyService.getCompanyStorageBinDetails(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyStorageBin = data;\r\n        // console.log(this.companyStorageBin);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateCompanyStorageBin = function () {\r\n    if (this.form.valid) {\r\n      this.companyService.updateCompanyStorageBin(this.companyStorageBin).subscribe(\r\n        response => {\r\n          //this.goToList('states');\r\n          this.toastr.success('Storeage bin updated successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.showStorageBinList.emit();\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  btnClickNav = function () {\r\n    this.showStorageBinList.emit();\r\n  };\r\n\r\n\r\n  getCompanyBranchList = function (id) {\r\n    this.companyService.getCompanyBranchList(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyBranchList = data['results'];\r\n        // console.log(this.companyBranchList);\r\n      }\r\n    );\r\n  };\r\n\r\n  getCompanyStorageList = function (id) {\r\n    this.companyService.getCompanyStorageList(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyStorageList = data['results'];\r\n        // console.log(this.companyStorageList);\r\n      }\r\n    );\r\n  };\r\n\r\n  getUOMList = function () {\r\n    this.companyService.getUOMList().subscribe(\r\n      (data: any[]) => {\r\n        this.UOMList = data['results'];\r\n        // console.log(this.UOMList);\r\n      }\r\n    );\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.form.get(field).valid && this.form.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': !this.form.get(field).valid && this.form.get(field).touched,\r\n      'is-valid': this.form.get(field).valid\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/storage-bin-edit/storage-bin-edit.component.ts","module.exports = \"<div>\\r\\n    <div *ngIf=\\\"companyStorageBinCompShow.showList==true\\\">\\r\\n      <div style=\\\"padding-top: 20px;\\\">\\r\\n        <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"showStorageBinAdd()\\\"><i class=\\\"fa fa-plus\\\"></i> New Branch</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n      </div>\\r\\n        \\r\\n      <hr/>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <h5>Storage Bin</h5>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <form role=\\\"form\\\" (ngSubmit)=\\\"dataSearch()\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"search_key\\\">\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\">\\r\\n                        <i class=\\\"fa fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n              <thead>\\r\\n              <tr>\\r\\n                  <th>Sl.No.</th>\\r\\n                  <th>Bin No.</th>\\r\\n                  <th>Capacity</th>\\r\\n                  <th>UOM</th>\\r\\n                  <th>Action</th>\\r\\n              </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n              <tr  *ngFor=\\\"let companyStorageBin of companyStorageBinList ; let i = index\\\" >\\r\\n                <th scope=\\\"row\\\">{{i +1}}</th>\\r\\n                <td>{{companyStorageBin.bin_no}}</td>\\r\\n                <td>{{companyStorageBin.bin_volume}}</td>\\r\\n                <td>{{companyStorageBin.uom}}</td>\\r\\n                <td>\\r\\n                  <a href=\\\"javascript:void(0);\\\" title=\\\"Edit\\\" name=\\\"Edit\\\" (click)=\\\"showStorageBinEdit(companyStorageBin.id)\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"companyStorageBinList.length == 0\\\">\\r\\n                <td colspan=\\\"9\\\" class=\\\"text-center\\\">No record found</td>\\r\\n              </tr>\\r\\n              </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"totalcompanyStorageBinList > 10\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card-body pull-right\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"totalcompanyStorageBinList\\\" [(page)]=\\\"defaultPagination\\\" (pageChange)=\\\"pagination()\\\" size=\\\"sm\\\"></ngb-pagination>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"companyStorageBinCompShow.showAdd==true\\\">\\r\\n      <app-storage-bin-add (showStorageBinList)=\\\"reloadStorageBinList($event)\\\"></app-storage-bin-add>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"companyStorageBinCompShow.showEdit==true\\\">\\r\\n      <app-storage-bin-edit [companyStorageBinId]=companyStorageBinId (showStorageBinList)=\\\"reloadStorageBinList($event)\\\"></app-storage-bin-edit>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-bin-list/storage-bin-list.component.html\n// module id = ./src/app/layout/company/storage-bin-list/storage-bin-list.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-bin-list/storage-bin-list.component.scss\n// module id = ./src/app/layout/company/storage-bin-list/storage-bin-list.component.scss\n// module chunks = company.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-storage-bin-list',\r\n  templateUrl: './storage-bin-list.component.html',\r\n  styleUrls: ['./storage-bin-list.component.scss']\r\n})\r\nexport class StorageBinListComponent implements OnInit {\r\n  companyStorageBinList = [];\r\n  states;\r\n  companyStorageBinCompShow;\r\n  companyStorageBinId;\r\n  defaultPagination: number;\r\n  totalcompanyStorageBinList: number;\r\n  search_key = '';\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.defaultPagination = 1;\r\n    this.companyStorageBinCompShow = {\r\n      showList: true,\r\n      showAdd: false,\r\n      showEdit: false\r\n    };\r\n\r\n    this.getCompanyStorageBinList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  showStorageBinAdd = function () {\r\n    this.companyStorageBinCompShow = {\r\n      showList: false,\r\n      showAdd: true,\r\n      showEdit: false\r\n    };\r\n  };\r\n\r\n  showStorageBinEdit = function (id) {\r\n    this.companyStorageBinId = id;\r\n    this.companyStorageBinCompShow = {\r\n      showList: false,\r\n      showAdd: false,\r\n      showEdit: true\r\n    };\r\n  };\r\n\r\n  reloadStorageBinList = function () {\r\n    this.companyStorageBinCompShow = {\r\n      showList: true,\r\n      showAdd: false,\r\n      showEdit: false\r\n    };\r\n\r\n    this.getCompanyStorageBinList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  getCompanyStorageBinList = function (id) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set('page', this.defaultPagination.toString());\r\n    params.set('search', this.search_key.toString());\r\n    this.companyService.getCompanyStorageBinList(id,params).subscribe(\r\n      (data: any[]) => {\r\n        this.companyStorageBinList = data['results'];\r\n        // console.log(this.companyStorageBinList);\r\n      }\r\n    );\r\n  };\r\n\r\n  dataSearch() {\r\n    this.defaultPagination = 1;\r\n    this.getCompanyStorageBinList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  pagination = function () {\r\n    this.getCompanyStorageBinList(this.route.snapshot.params['id']);\r\n  };\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/storage-bin-list/storage-bin-list.component.ts","module.exports = \"<div>\\r\\n    <div style=\\\"padding-top: 20px;\\\">\\r\\n        <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav()\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Storage Add</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Branch</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorage.branch\\\" name=\\\"storage_branch\\\" formControlName=\\\"branch\\\" [ngClass]=\\\"displayFieldCss('branch')\\\">\\r\\n                                        <option value=\\\"\\\">Select Branch</option>\\r\\n                                        <option *ngFor=\\\"let companyBranch of companyBranchList;\\\" value=\\\"{{companyBranch.id}}\\\">{{companyBranch.branch_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch')\\\">\\r\\n                                        Please select branch\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorage.storage_email\\\" name=\\\"storage_email\\\" placeholder=\\\"Email\\\"\\r\\n                                        formControlName=\\\"storage_email\\\" [ngClass]=\\\"displayFieldCss('storage_email')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_email')\\\">\\r\\n                                        Please enter email\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Phone</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorage.storage_contact_no\\\" name=\\\"storage_contact_no\\\" placeholder=\\\"Phone\\\"\\r\\n                                        formControlName=\\\"storage_contact_no\\\" [ngClass]=\\\"displayFieldCss('storage_contact_no')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_contact_no')\\\">\\r\\n                                        Please enter phone\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label>Store Address</label>\\r\\n                                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorage.storage_address\\\" name=\\\"storage_address\\\" rows=\\\"3\\\" placeholder=\\\"Store Address\\\"\\r\\n                                        formControlName=\\\"storage_address\\\" [ngClass]=\\\"displayFieldCss('storage_address')\\\">{{companyStorage.branch_address}}</textarea>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_address')\\\">\\r\\n                                        Please enter store address\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>State</label>\\r\\n                                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorage.storage_state\\\" name=\\\"storage_state\\\" formControlName=\\\"storage_state\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('storage_state')\\\">\\r\\n                                        <option value=\\\"\\\">Select State</option>\\r\\n                                        <option *ngFor=\\\"let state of stateList;\\\" value=\\\"{{state.id}}\\\">{{state.state_name}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_state')\\\">\\r\\n                                        Please select state\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>City</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City Name\\\" [(ngModel)]=\\\"companyStorage.storage_city\\\" name=\\\"storage_city\\\"\\r\\n                                        formControlName=\\\"storage_city\\\" [ngClass]=\\\"displayFieldCss('storage_city')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_city')\\\">\\r\\n                                        Please enter city\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-4\\\">\\r\\n                                    <label>Pin</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pin\\\" [(ngModel)]=\\\"companyStorage.storage_pincode\\\" name=\\\"storage_pincode\\\"\\r\\n                                        formControlName=\\\"storage_pincode\\\" [ngClass]=\\\"displayFieldCss('storage_pincode')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_pincode')\\\">\\r\\n                                        Please enter city\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addNewCompanyStorage()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-location-add/storage-location-add.component.html\n// module id = ./src/app/layout/company/storage-location-add/storage-location-add.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-location-add/storage-location-add.component.scss\n// module id = ./src/app/layout/company/storage-location-add/storage-location-add.component.scss\n// module chunks = company.module","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-storage-location-add',\r\n  templateUrl: './storage-location-add.component.html',\r\n  styleUrls: ['./storage-location-add.component.scss']\r\n})\r\nexport class StorageLocationAddComponent implements OnInit {\r\n  @Output() showStorageList = new EventEmitter();\r\n\r\n  companyStorage;\r\n  stateList;\r\n  companyBranchList;\r\n  form: FormGroup;\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      storage_email: [null, [Validators.required,Validators.email]],\r\n      storage_contact_no: [null, Validators.required],\r\n      storage_address: [null, Validators.required],\r\n      storage_state: [null, Validators.required],\r\n      storage_city: [null, Validators.required],\r\n      storage_pincode: [null, Validators.required],\r\n      branch: [null, Validators.required]\r\n    });\r\n    this.companyStorage = {\r\n      storage_email: '',\r\n      storage_contact_no: '',\r\n      storage_address: '',\r\n      storage_state: '',\r\n      storage_city: '',\r\n      storage_pincode: '',\r\n      company: this.route.snapshot.params['id'],\r\n      branch: ''\r\n    };\r\n    this.getStateList();\r\n    this.getCompanyBranchList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  addNewCompanyStorage = function () {\r\n    if (this.form.valid) {\r\n      this.companyService.addNewCompanyStorage(this.companyStorage).subscribe(\r\n        response => {\r\n          this.toastr.success('Store added successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          //this.goToList('states');\r\n          this.showStorageList.emit();\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  btnClickNav = function () {\r\n    this.showStorageList.emit();\r\n  };\r\n\r\n  getStateList = function () {\r\n    this.statesService.getStateActiveList().subscribe(\r\n      (data: any[]) => {\r\n        this.stateList = data;\r\n      }\r\n    );\r\n  };\r\n\r\n  getCompanyBranchList = function (id) {\r\n    this.companyService.getCompanyBranchList(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyBranchList = data['results'];\r\n        // console.log(this.companyBranchList);\r\n      }\r\n    );\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.form.get(field).valid && this.form.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': !this.form.get(field).valid && this.form.get(field).touched,\r\n      'is-valid': this.form.get(field).valid\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/storage-location-add/storage-location-add.component.ts","module.exports = \"<div>\\r\\n    <div  style=\\\"padding-top: 20px;\\\">\\r\\n      <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav()\\\"><i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n      </div>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <form role=\\\"form\\\" [formGroup]=\\\"form\\\">\\r\\n                <div class=\\\"card bg-light mb-3\\\">\\r\\n                    <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Company Storage Add</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>Branch</label>\\r\\n                                <select class=\\\"form-control\\\"  [(ngModel)]=\\\"companyStorage.branch\\\" name=\\\"storage_branch\\\" formControlName=\\\"branch\\\" [ngClass]=\\\"displayFieldCss('branch')\\\">\\r\\n                                    <option value=\\\"\\\">Select Branch</option>\\r\\n                                    <option *ngFor=\\\"let companyBranch of companyBranchList;\\\" value=\\\"{{companyBranch.id}}\\\">{{companyBranch.branch_name}}</option>\\r\\n                                </select>\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('branch')\\\">\\r\\n                                    Please select branch\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            \\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>Email</label>\\r\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorage.storage_email\\\" name=\\\"storage_email\\\" placeholder=\\\"Email\\\" formControlName=\\\"storage_email\\\" [ngClass]=\\\"displayFieldCss('storage_email')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_email')\\\">\\r\\n                                    Please enter email\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                              <label>Phone</label>\\r\\n                              <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorage.storage_contact_no\\\" name=\\\"storage_contact_no\\\" placeholder=\\\"Phone\\\" formControlName=\\\"storage_contact_no\\\" [ngClass]=\\\"displayFieldCss('storage_contact_no')\\\">\\r\\n                              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_contact_no')\\\">\\r\\n                                Please enter phone\\r\\n                            </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label>Store Address</label>\\r\\n                                <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"companyStorage.storage_address\\\" name=\\\"storage_address\\\" rows=\\\"3\\\" placeholder=\\\"Store Address\\\" formControlName=\\\"storage_address\\\" [ngClass]=\\\"displayFieldCss('storage_address')\\\">{{companyStorage.branch_address}}</textarea>\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_address')\\\">\\r\\n                                    Please enter store address\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>State</label>\\r\\n                                <select class=\\\"form-control\\\"  [(ngModel)]=\\\"companyStorage.storage_state\\\" name=\\\"storage_state\\\" formControlName=\\\"storage_state\\\"\\r\\n                                [ngClass]=\\\"displayFieldCss('storage_state')\\\">\\r\\n                                    <option value=\\\"0\\\">Select State</option>\\r\\n                                    <option *ngFor=\\\"let state of stateList;\\\" value=\\\"{{state.id}}\\\">{{state.state_name}}</option>\\r\\n                                </select>\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_state')\\\">\\r\\n                                    Please select state\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>City</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City Name\\\" [(ngModel)]=\\\"companyStorage.storage_city\\\" name=\\\"storage_city\\\" formControlName=\\\"storage_city\\\" [ngClass]=\\\"displayFieldCss('storage_city')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_city')\\\">\\r\\n                                    Please enter city\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group col-md-4\\\">\\r\\n                                <label>Pin</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pin\\\" [(ngModel)]=\\\"companyStorage.storage_pincode\\\" name=\\\"storage_pincode\\\" formControlName=\\\"storage_pincode\\\" [ngClass]=\\\"displayFieldCss('storage_pincode')\\\">\\r\\n                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isFieldValid('storage_pincode')\\\">\\r\\n                                    Please enter city\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCompanyStorage()\\\">Submit</button>\\r\\n                                <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </form>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-location-edit/storage-location-edit.component.html\n// module id = ./src/app/layout/company/storage-location-edit/storage-location-edit.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-location-edit/storage-location-edit.component.scss\n// module id = ./src/app/layout/company/storage-location-edit/storage-location-edit.component.scss\n// module chunks = company.module","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-storage-location-edit',\r\n  templateUrl: './storage-location-edit.component.html',\r\n  styleUrls: ['./storage-location-edit.component.scss']\r\n})\r\nexport class StorageLocationEditComponent implements OnInit {\r\n  @Input() companyStorageId: number;\r\n\r\n  @Output() showStorageList = new EventEmitter();\r\n\r\n  companyStorage;\r\n  stateList;\r\n  companyBranchList;\r\n  form: FormGroup;\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      storage_email: [null, [Validators.required,Validators.email]],\r\n      storage_contact_no: [null, Validators.required],\r\n      storage_address: [null, Validators.required],\r\n      storage_state: [null, Validators.required],\r\n      storage_city: [null, Validators.required],\r\n      storage_pincode: [null, Validators.required],\r\n      branch: [null, Validators.required]\r\n    });\r\n    // console.log(this.companyStorageId);\r\n    this.companyStorage = {\r\n      id: '',\r\n      storage_email: '',\r\n      storage_contact_no: '',\r\n      storage_address: '',\r\n      storage_state: '',\r\n      storage_city: '',\r\n      storage_pincode: '',\r\n      company: this.route.snapshot.params['id'],\r\n      branch: ''\r\n    };\r\n\r\n    this.getCompanyStorageDetails(this.companyStorageId);\r\n    this.getStateList();\r\n    this.getCompanyBranchList(this.route.snapshot.params['id'])\r\n  }\r\n\r\n  getCompanyStorageDetails = function (id) {\r\n\r\n    this.companyService.getCompanyStorageDetails(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyStorage = data;\r\n        // console.log(this.companyStorage);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateCompanyStorage = function () {\r\n    if (this.form.valid) {\r\n      this.companyService.updateCompanyStorage(this.companyStorage).subscribe(\r\n        response => {\r\n          this.toastr.success('Store updated successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          //this.goToList('states');\r\n          this.showStorageList.emit();\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      Object.keys(this.form.controls).forEach(field => {\r\n        const control = this.form.get(field);\r\n        control.markAsTouched({ onlySelf: true });\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  btnClickNav = function () {\r\n    this.showStorageList.emit();\r\n  };\r\n\r\n  getStateList = function () {\r\n    this.statesService.getStateActiveList().subscribe(\r\n      (data: any[]) => {\r\n        this.stateList = data;\r\n        // console.log(this.stateList)\r\n      }\r\n    );\r\n  };\r\n\r\n  getCompanyBranchList = function (id) {\r\n    this.companyService.getCompanyBranchList(id).subscribe(\r\n      (data: any[]) => {\r\n        this.companyBranchList = data['results'];\r\n        // console.log(this.companyBranchList);\r\n      }\r\n    );\r\n  };\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.form.get(field).valid && this.form.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': !this.form.get(field).valid && this.form.get(field).touched,\r\n      'is-valid': this.form.get(field).valid\r\n    };\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/storage-location-edit/storage-location-edit.component.ts","module.exports = \"<div>\\r\\n  <div *ngIf=\\\"companyStorageCompShow.showList==true\\\">\\r\\n    <div style=\\\"padding-top: 20px;\\\">\\r\\n      <div class=\\\"col-md-6 offset-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n          <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n          <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"showStorageAdd()\\\">\\r\\n          <i class=\\\"fa fa-plus\\\"></i> New Storage Location</button>\\r\\n      </div>\\r\\n      <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <hr/>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <h5>Storage</h5>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <form role=\\\"form\\\" (ngSubmit)=\\\"dataSearch()\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"search_key\\\">\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\">\\r\\n                        <i class=\\\"fa fa-search\\\"></i>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Sl.No.</th>\\r\\n                <th>Storage Location</th>\\r\\n                <th>Contact</th>\\r\\n                <th>Email</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let companyStorage of companyStorageList ; let i = index\\\">\\r\\n                <th scope=\\\"row\\\">{{i +1}}</th>\\r\\n                <td>{{companyStorage.storage_address}}</td>\\r\\n                <td>{{companyStorage.storage_contact_no}}</td>\\r\\n                <td>{{companyStorage.storage_email}}</td>\\r\\n                <td>\\r\\n                  <a href=\\\"javascript:void(0);\\\" title=\\\"Edit\\\" name=\\\"Edit\\\" (click)=\\\"showStorageEdit(companyStorage.id)\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"companyStorageList.length == 0\\\">\\r\\n                <td colspan=\\\"9\\\" class=\\\"text-center\\\">No record found</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"totalcompanyStorageList > 10\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card-body pull-right\\\">\\r\\n          <ngb-pagination [collectionSize]=\\\"totalcompanyStorageList\\\" [(page)]=\\\"defaultPagination\\\" (pageChange)=\\\"pagination()\\\" size=\\\"sm\\\"></ngb-pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"companyStorageCompShow.showAdd==true\\\">\\r\\n    <app-storage-location-add (showStorageList)=\\\"reloadStorageList($event)\\\"></app-storage-location-add>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"companyStorageCompShow.showEdit==true\\\">\\r\\n    <app-storage-location-edit [companyStorageId]=companyStorageId (showStorageList)=\\\"reloadStorageList($event)\\\"></app-storage-location-edit>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-location-list/storage-location-list.component.html\n// module id = ./src/app/layout/company/storage-location-list/storage-location-list.component.html\n// module chunks = company.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/company/storage-location-list/storage-location-list.component.scss\n// module id = ./src/app/layout/company/storage-location-list/storage-location-list.component.scss\n// module chunks = company.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { CompanyService } from '../company.service';\r\nimport { StatesService } from '../../states/states.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-storage-location-list',\r\n  templateUrl: './storage-location-list.component.html',\r\n  styleUrls: ['./storage-location-list.component.scss']\r\n})\r\nexport class StorageLocationListComponent implements OnInit {\r\n  companyStorageList = [];\r\n  states;\r\n  companyStorageCompShow;\r\n  companyStorageId;\r\n  defaultPagination: number;\r\n  totalcompanyStorageList: number;\r\n  search_key = '';\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private statesService: StatesService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.defaultPagination = 1;\r\n    this.companyStorageCompShow = {\r\n      showList: true,\r\n      showAdd: false,\r\n      showEdit: false\r\n    };\r\n\r\n    this.getCompanyStorageList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n\r\n  showStorageAdd = function () {\r\n    this.companyStorageCompShow = {\r\n      showList: false,\r\n      showAdd: true,\r\n      showEdit: false\r\n    };\r\n  };\r\n\r\n  showStorageEdit = function (id) {\r\n    this.companyStorageId = id;\r\n    this.companyStorageCompShow = {\r\n      showList: false,\r\n      showAdd: false,\r\n      showEdit: true\r\n    };\r\n  };\r\n\r\n  reloadStorageList = function () {\r\n    this.companyStorageCompShow = {\r\n      showList: true,\r\n      showAdd: false,\r\n      showEdit: false\r\n    };\r\n\r\n    this.getCompanyStorageList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  getCompanyStorageList = function (id) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set('page', this.defaultPagination.toString());\r\n    params.set('search', this.search_key.toString());\r\n    this.companyService.getCompanyStorageList(id,params).subscribe(\r\n      (data: any[]) => {\r\n        this.totalcompanyStorageList = data['count'];\r\n        this.companyStorageList = data['results'];\r\n        // console.log(this.companyStorageList);\r\n      }\r\n    );\r\n  };\r\n\r\n  dataSearch() {\r\n    this.defaultPagination = 1;\r\n    this.getCompanyStorageList(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  pagination = function () {\r\n    this.getCompanyStorageList(this.route.snapshot.params['id']);\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/company/storage-location-list/storage-location-list.component.ts"],"sourceRoot":"webpack:///"}