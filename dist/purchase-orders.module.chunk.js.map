{"version":3,"sources":["./node_modules/number-to-words/numberToWords.min.js","./src/app/layout/purchase-orders/purchase-details/purchase-details.component.html","./src/app/layout/purchase-orders/purchase-details/purchase-details.component.scss","./src/app/layout/purchase-orders/purchase-details/purchase-details.component.ts","./src/app/layout/purchase-orders/purchase-orders-add/purchase-orders-add.component.html","./src/app/layout/purchase-orders/purchase-orders-add/purchase-orders-add.component.scss","./src/app/layout/purchase-orders/purchase-orders-add/purchase-orders-add.component.ts","./src/app/layout/purchase-orders/purchase-orders-routing.module.ts","./src/app/layout/purchase-orders/purchase-orders.component.html","./src/app/layout/purchase-orders/purchase-orders.component.scss","./src/app/layout/purchase-orders/purchase-orders.component.ts","./src/app/layout/purchase-orders/purchase-orders.module.ts","./src/app/layout/purchase-orders/purchase-orders.service.ts"],"names":[],"mappings":"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","file":"purchase-orders.module.chunk.js","sourcesContent":["!function(){\"use strict\";function e(e){return!(\"number\"!=typeof e||e!==e||e===1/0||e===-(1/0))}function t(e){return h.test(e)||s.test(e)?e+\"th\":u.test(e)?e.replace(u,\"ieth\"):a.test(e)?e.replace(a,n):e}function n(e,t){return d[t]}function o(t){var n=parseInt(t,10);if(!e(n))throw new TypeError(\"Not a finite number: \"+t+\" (\"+typeof t+\")\");var o=String(n),r=n%100,i=r>=11&&13>=r,f=o.charAt(o.length-1);return o+(i?\"th\":\"1\"===f?\"st\":\"2\"===f?\"nd\":\"3\"===f?\"rd\":\"th\")}function r(n,o){var r,f=parseInt(n,10);if(!e(f))throw new TypeError(\"Not a finite number: \"+n+\" (\"+typeof n+\")\");return r=i(f),o?t(r):r}function i(e){var t,n,o=arguments[1];return 0===e?o?o.join(\" \").replace(/,$/,\"\"):\"zero\":(o||(o=[]),0>e&&(o.push(\"minus\"),e=Math.abs(e)),20>e?(t=0,n=x[e]):p>e?(t=e%v,n=M[Math.floor(e/v)],t&&(n+=\"-\"+x[t],t=0)):y>e?(t=e%p,n=i(Math.floor(e/p))+\" hundred\"):c>e?(t=e%y,n=i(Math.floor(e/y))+\" thousand,\"):b>e?(t=e%c,n=i(Math.floor(e/c))+\" million,\"):g>e?(t=e%b,n=i(Math.floor(e/b))+\" billion,\"):m>e?(t=e%g,n=i(Math.floor(e/g))+\" trillion,\"):w>=e&&(t=e%m,n=i(Math.floor(e/m))+\" quadrillion,\"),o.push(n),i(t,o))}function f(e){var n=r(e);return t(n)}var l=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||this,h=/(hundred|thousand|(m|b|tr|quadr)illion)$/,s=/teen$/,u=/y$/,a=/(zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)$/,d={zero:\"zeroth\",one:\"first\",two:\"second\",three:\"third\",four:\"fourth\",five:\"fifth\",six:\"sixth\",seven:\"seventh\",eight:\"eighth\",nine:\"ninth\",ten:\"tenth\",eleven:\"eleventh\",twelve:\"twelfth\"},v=10,p=100,y=1e3,c=1e6,b=1e9,g=1e12,m=1e15,w=9007199254740992,x=[\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\",\"eleven\",\"twelve\",\"thirteen\",\"fourteen\",\"fifteen\",\"sixteen\",\"seventeen\",\"eighteen\",\"nineteen\"],M=[\"zero\",\"ten\",\"twenty\",\"thirty\",\"forty\",\"fifty\",\"sixty\",\"seventy\",\"eighty\",\"ninety\"],z={toOrdinal:o,toWords:r,toWordsOrdinal:f};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=z),exports.numberToWords=z):l.numberToWords=z}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/number-to-words/numberToWords.min.js\n// module id = ./node_modules/number-to-words/numberToWords.min.js\n// module chunks = purchase-orders.module","module.exports = \"<div>\\r\\n  <!-- <app-page-header [heading]=\\\"'Company Details'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4 class=\\\"page-header\\\">Purchase Order Details</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('purchase-orders')\\\">\\r\\n        <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n\\r\\n  <div *ngIf=\\\"visible_key\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card bg-light mb-3\\\">\\r\\n          <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Purchase Order Number : {{purchaseOrder.purchase_order_map[0].purchase_order_no}} </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"card-body table table-sm table-bordered\\\">\\r\\n\\r\\n                  <tbody>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <label>PO Number : </label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{purchaseOrder.purchase_order_map[0].purchase_order_no}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>PR Number : </label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{purchaseOrder.requisition_no[0].requisition_no}}</label>\\r\\n                      </td>\\r\\n\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <label>Purchase Org : </label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{purchaseOrder.pur_org.name}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>Purchase Group : </label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{purchaseOrder.pur_grp.name}}</label>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <label>Vendor Name : </label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{purchaseOrder.vendor}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>Vendor Address : </label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{purchaseOrder.vendor_address.address}}</label>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <label>PO Date : </label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{purchaseOrder.quotation_date | date:'yyy-MM-dd'}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>PR Raised Date : </label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{getRequisitionDate(purchaseOrder.requisition_no[0].requisition_no)}}</label>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <label>Indent Raised By :</label>\\r\\n                      </td>\\r\\n                      <td colspan=\\\"3\\\">\\r\\n                        <label>{{purchaseOrder.created_by.first_name}}</label>\\r\\n                      </td>\\r\\n\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n\\r\\n                </table>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <h4>Items ordered</h4>\\r\\n                <hr/>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>\\r\\n                        <label>Item</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>Quantity</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>Rate/Unit</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>Material Value</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>Disc(%)</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>Disc Amount</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>IGST(%)</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>SGST(%)</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>CGST(%)</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>GST Amount</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>Sub Total</label>\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let item of purchaseOrder.purchase_order_detail\\\">\\r\\n                      <td>\\r\\n                        <label>{{item.material}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.order_quantity}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.rate}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.material_value}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.discount_percent}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.discount_value}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.igst}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.sgst}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.cgst}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.gst_amount}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{item.sub_total}}</label>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr><td colspan=\\\"9\\\"></td><td>Grand Total</td><td>{{purchaseOrder.grand_total}}</td></tr>\\r\\n                    <tr><td colspan=\\\"11\\\">Amount in words : <strong>{{purchaseOrder.grand_total_words}}</strong></td></tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <h4>Terms and Conditions</h4>\\r\\n                <hr/>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"card-body table table-hover table-sm table-bordered\\\">                 \\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>\\r\\n                        <label>Sl.No.</label>\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        <label>Description</label>\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let term of purchaseOrder.purchase_order_terms; let i= index\\\">\\r\\n                      <td>\\r\\n                        <label>{{i + 1}}</label>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <label>{{term.po_terms.term_text}}</label>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/purchase-orders/purchase-details/purchase-details.component.html\n// module id = ./src/app/layout/purchase-orders/purchase-details/purchase-details.component.html\n// module chunks = purchase-orders.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/purchase-orders/purchase-details/purchase-details.component.scss\n// module id = ./src/app/layout/purchase-orders/purchase-details/purchase-details.component.scss\n// module chunks = purchase-orders.module","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { PurchaseOrdersService } from '../purchase-orders.service';\r\n@Component({\r\n  selector: 'app-purchase-details',\r\n  templateUrl: './purchase-details.component.html',\r\n  styleUrls: ['./purchase-details.component.scss']\r\n})\r\nexport class PurchaseDetailsComponent implements OnInit {\r\n  purchaseOrder;\r\n  visible_key: boolean\r\n  constructor(\r\n    private purchaseOrdersService: PurchaseOrdersService,\r\n    private router: Router, \r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getPurchaseOrderDetails(this.route.snapshot.params['id']);\r\n  }\r\n\r\n  getPurchaseOrderDetails(id) {\r\n    this.purchaseOrdersService.getPurchaseOrderDetails(id).subscribe(\r\n      (data: any[]) =>{\r\n        this.purchaseOrder = data;\r\n        this.visible_key = true\r\n        // console.log(this.purchaseOrder);\r\n      }\r\n     );\r\n  }\r\n\r\n  btnClickNav(toNav) {\r\n    this.router.navigateByUrl('/'+toNav);\r\n  };\r\n\r\n  getRequisitionDate(date){\r\n    var PrDate = date.split('/')\r\n    return PrDate[0]\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/purchase-orders/purchase-details/purchase-details.component.ts","module.exports = \"<div>\\r\\n    <!-- <app-page-header [heading]=\\\"'Purchase Order Add'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <h4 class=\\\"page-header\\\">Purchase Order Add</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('purchase-orders')\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\r\\n        </div>\\r\\n        <div class=\\\"clearfix\\\"></div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\r\\n                    <div class=\\\"card bg-light mb-3\\\">\\r\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Pruchase Order Add</div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-3\\\">\\r\\n                                    <label>Requisition No.</label>\\r\\n                                    <select class=\\\"form-control\\\" (change)=\\\"requisitionChange($event.target.value)\\\" name=\\\"requisition\\\" formControlName=\\\"requisition\\\"\\r\\n                                        [ngClass]=\\\"displayFieldCss('requisition')\\\">\\r\\n                                        <option value=\\\"\\\">Select Requisition</option>\\r\\n                                        <option value=\\\"{{requisition.id}}\\\" *ngFor=\\\"let requisition of requisition_list\\\">{{requisition.requisition_map[0].requisition_no}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['requisition'].hasError('required')\\\">\\r\\n                                        Please select requisition\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-3\\\">\\r\\n                                    <label>Vendor</label>\\r\\n                                    <select class=\\\"form-control\\\" (change)=\\\"vendorChange($event.target.value)\\\" name=\\\"vendor\\\" formControlName=\\\"vendor\\\" [ngClass]=\\\"displayFieldCss('vendor')\\\">\\r\\n                                        <option value=\\\"\\\">Select vendor</option>\\r\\n                                        <option value=\\\"{{vendor.id}}\\\" *ngFor=\\\"let vendor of vendor_list\\\">{{vendor.vendor_fullname}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['vendor'].hasError('required')\\\">\\r\\n                                        Please select vendor\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Vendor Address</label>\\r\\n                                    <select class=\\\"form-control\\\" name=\\\"vendor_address\\\" formControlName=\\\"vendor_address\\\" [ngClass]=\\\"displayFieldCss('vendor_address')\\\">\\r\\n                                        <option value=\\\"\\\">Select address</option>\\r\\n                                        <option value=\\\"{{address.id}}\\\" *ngFor=\\\"let address of vendor_address_list\\\">{{address.address}}</option>\\r\\n                                    </select>\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['vendor_address'].hasError('required')\\\">\\r\\n                                        Please select vendor address\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Quotation No.</label>\\r\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"Quotation No.\\\" name=\\\"quotation_no\\\" formControlName=\\\"quotation_no\\\" [ngClass]=\\\"displayFieldCss('quotation_no')\\\">\\r\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['quotation_no'].hasError('required')\\\">\\r\\n                                        Please enter quotation no\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                    <label>Quotation Date</label>\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"quotation_date\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" name=\\\"quotation_date\\\"\\r\\n                                            formControlName=\\\"quotation_date\\\" [ngClass]=\\\"displayFieldCss('quotation_date')\\\">\\r\\n                                        <div class=\\\"input-group-append\\\">\\r\\n                                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\r\\n                                                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['quotation_date'].hasError('required')\\\">\\r\\n                                            Please enter quotation date\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"card bg-light mb-3\\\" *ngIf=\\\"visible_key\\\">\\r\\n                                <div class=\\\"card-header\\\">Material Details</div>\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <table class=\\\"card-body table table-sm table-bordered\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th></th>\\r\\n                                                <th>Material</th>\\r\\n                                                <th>PR. Quantity</th>\\r\\n                                                <th>UOM</th>\\r\\n                                                <th>Plant</th>\\r\\n                                                <th>Storage</th>\\r\\n                                                <th>Bin</th>\\r\\n                                                <th>HSN/SAC</th>\\r\\n                                                <th>IGST(%)</th>\\r\\n                                                <th>CGST(%)</th>\\r\\n                                                <th>SGST(%)</th>\\r\\n                                                <th>GST Amount</th>\\r\\n                                                <th>PO Quantity</th>\\r\\n                                                <th>Rate</th>\\r\\n                                                <th>Discount(%)</th>\\r\\n                                                <th>Delivery Date</th>\\r\\n                                                <th>Sub Total</th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr *ngFor=\\\"let mat of requisition_details.requisition_detail; let k = index\\\">\\r\\n                                                <th scope=\\\"row\\\" width=\\\"20px\\\">\\r\\n                                                    <input type=\\\"checkbox\\\" (change)=\\\"matCheck($event, mat)\\\">\\r\\n                                                </th>\\r\\n                                                <td>{{mat.material.material_code}}({{mat.material.material_fullname}})</td>\\r\\n                                                <td>{{mat.quantity}}</td>\\r\\n                                                <td>{{mat.uom.name}}</td>\\r\\n                                                <td>{{mat.branch.branch_name}}</td>\\r\\n                                                <td>{{mat.storage_location.storage_address}}</td>\\r\\n                                                <td>{{mat.storage_bin.bin_no}}</td>\\r\\n                                                <td>{{mat.material.material_tax[0].hsn}}</td>\\r\\n                                                <td>{{mat.material.material_tax[0].igst}}</td>\\r\\n                                                <td>{{mat.material.material_tax[0].cgst}}</td>\\r\\n                                                <td>{{mat.material.material_tax[0].sgst}}</td>\\r\\n                                                <td width=\\\"80px\\\">\\r\\n                                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"gst_amount\\\" [(ngModel)]=\\\"material_details_list[k].gst_amount\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                </td>\\r\\n                                                <td width=\\\"80px\\\">\\r\\n                                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"order_quantity\\\" [(ngModel)]=\\\"material_details_list[k].order_quantity\\\" (keyup)=\\\"getSubTotal(material_details_list[k].order_quantity,material_details_list[k].rate,material_details_list[k].discount_percent, k)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                </td>\\r\\n                                                <td width=\\\"80px\\\">\\r\\n                                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"rate\\\" [(ngModel)]=\\\"material_details_list[k].rate\\\" (keyup)=\\\"getSubTotal(material_details_list[k].order_quantity,material_details_list[k].rate,material_details_list[k].discount_percent, k)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                </td>\\r\\n                                                <td width=\\\"80px\\\">\\r\\n                                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"discount_percent\\\" [(ngModel)]=\\\"material_details_list[k].discount_percent\\\" (keyup)=\\\"getSubTotal(material_details_list[k].order_quantity,material_details_list[k].rate,material_details_list[k].discount_percent, k)\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                </td>\\r\\n                                                <td width=\\\"150px\\\">\\r\\n                                                    <div class=\\\"input-group\\\">\\r\\n                                                        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"delivery_date\\\" ngbDatepicker #i=\\\"ngbDatepicker\\\" [(ngModel)]=\\\"material_details_list[k].delivery_date\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                        <div class=\\\"input-group-append\\\">\\r\\n                                                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"i.toggle()\\\" type=\\\"button\\\">\\r\\n                                                                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                                            </button>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                                <td width=\\\"80px\\\">\\r\\n                                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"sub_total\\\" [(ngModel)]=\\\"material_details_list[k].sub_total\\\" [ngModelOptions]=\\\"{standalone: true}\\\" readonly>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"card bg-light mb-3\\\" *ngIf=\\\"visible_key\\\">\\r\\n                                <div class=\\\"card-header\\\">Freight Details</div>\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <div class=\\\"row\\\" formArrayName=\\\"purchase_order_freight\\\" *ngFor=\\\"let freight of form.get('purchase_order_freight').controls; let i = index;\\\">\\r\\n                                        <div [formGroupName]=\\\"i\\\" class=\\\"col-md-12\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <!-- <div class=\\\"form-group col-md-2\\\">\\r\\n                                                    <label>Freight Option</label>\\r\\n                                                    <div class=\\\"input-group\\\">\\r\\n                                                        <label class=\\\"radio-inline\\\">\\r\\n                                                            <input type=\\\"radio\\\" name=\\\"freight\\\" value=\\\"vendor\\\"> Vendor</label>\\r\\n                                                        <label class=\\\"radio-inline\\\">\\r\\n                                                            <input type=\\\"radio\\\" name=\\\"freight\\\" value=\\\"own\\\"> Own</label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group col-md-3\\\">\\r\\n                                                    <label>Freight Vendor</label>\\r\\n                                                    <select class=\\\"form-control\\\">\\r\\n                                                        <option value=\\\"\\\">Select Transporter</option>\\r\\n                                                        <option>ATC</option>\\r\\n                                                        <option>Test Transporter name</option>\\r\\n                                                        <option>ATC</option>\\r\\n                                                        <option>Test Transporter name</option>\\r\\n                                                    </select>\\r\\n                                                </div> -->\\r\\n                                                <!-- <div class=\\\"form-group col-md-2\\\">\\r\\n                                                    <label>Rate </label>\\r\\n                                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"freight_rate\\\" formControlName=\\\"freight_rate\\\" [ngClass]=\\\"{\\r\\n                                                        'is-invalid': freight.get('freight_rate').invalid && (freight.get('freight_rate').dirty || freight.get('freight_rate').touched),\\r\\n                                                        'is-valid': freight.get('freight_rate').valid && (freight.get('freight_rate').dirty || freight.get('freight_rate').touched)\\r\\n                                                      }\\\" (keyup)=\\\"getFreightTotal(freight.get('freight_rate').value, freight.get('freight_amount').value, freight.get('freight_gst_rate').value, i)\\\">\\r\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"freight.get('freight_rate').touched && freight.get('freight_rate').hasError('required')\\\">\\r\\n                                                        Please enter rate\\r\\n                                                    </div>\\r\\n                                                </div> -->\\r\\n                                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                                    <label>Freight Amount </label>\\r\\n                                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"freight_amount\\\" formControlName=\\\"freight_amount\\\" [ngClass]=\\\"{\\r\\n                                                        'is-invalid': freight.get('freight_amount').invalid && (freight.get('freight_amount').dirty || freight.get('freight_amount').touched),\\r\\n                                                        'is-valid': freight.get('freight_amount').valid && (freight.get('freight_amount').dirty || freight.get('freight_amount').touched)\\r\\n                                                      }\\\" (keyup)=\\\"getFreightTotal(freight.get('freight_rate').value, freight.get('freight_amount').value, freight.get('freight_gst_rate').value, i)\\\">\\r\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"freight.get('freight_amount').touched && freight.get('freight_amount').hasError('required')\\\">\\r\\n                                                        Please enter freight amount\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                                    <label>GST </label>\\r\\n                                                    <select class=\\\"form-control\\\" name=\\\"freight_gst_rate\\\" formControlName=\\\"freight_gst_rate\\\" [ngClass]=\\\"{\\r\\n                                                        'is-invalid': freight.get('freight_gst_rate').invalid && (freight.get('freight_gst_rate').dirty || freight.get('freight_gst_rate').touched),\\r\\n                                                        'is-valid': freight.get('freight_gst_rate').valid && (freight.get('freight_gst_rate').dirty || freight.get('freight_gst_rate').touched)\\r\\n                                                      }\\\" (change)=\\\"getFreightTotal(freight.get('freight_rate').value, freight.get('freight_amount').value, freight.get('freight_gst_rate').value, i)\\\">\\r\\n                                                        <option value=\\\"\\\">Select GST</option>\\r\\n                                                        <option value=\\\"{{gst.id}}\\\" *ngFor=\\\"let gst of gst_rates_list\\\">{{gst.gst_pattern}}</option>\\r\\n                                                    </select>\\r\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"freight.get('freight_gst_rate').touched && freight.get('freight_gst_rate').hasError('required')\\\">\\r\\n                                                        Please enter GST\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group col-md-2\\\">\\r\\n                                                    <label>Freight Total</label>\\r\\n                                                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"freight_total\\\" [(ngModel)]=\\\"form.value.purchase_order_freight[i].freight_total\\\"\\r\\n                                                        formControlName=\\\"freight_total\\\" readonly>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"card bg-light mb-3\\\" *ngIf=\\\"visible_key\\\">\\r\\n                                <div class=\\\"card-header\\\">Terms & Conditions</div>\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div *ngFor=\\\"let term of terms_condition_list;let i = index\\\" class=\\\"col-md-2\\\">\\r\\n                                            <div class=\\\"form-control\\\">\\r\\n                                                <input type=\\\"checkbox\\\" (change)=\\\"termsCheck($event, term.id)\\\">\\r\\n                                                <label>{{term.term_text}}</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"card bg-light mb-3\\\" *ngIf=\\\"visible_key\\\">\\r\\n                                <div class=\\\"card-header\\\">PO Amount</div>\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"form-group col-md-2\\\">\\r\\n                                            <label>Total Amount(GST included)</label>\\r\\n                                            <input class=\\\"form-control\\\" placeholder=\\\"Quotation No.\\\" name=\\\"grand_total\\\" formControlName=\\\"grand_total\\\"  [(ngModel)]=\\\"form.value.grand_total\\\" readonly>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addPurchaseOrder()\\\">Submit</button>\\r\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"reSet()\\\">Reset</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/purchase-orders/purchase-orders-add/purchase-orders-add.component.html\n// module id = ./src/app/layout/purchase-orders/purchase-orders-add/purchase-orders-add.component.html\n// module chunks = purchase-orders.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/purchase-orders/purchase-orders-add/purchase-orders-add.component.scss\n// module id = ./src/app/layout/purchase-orders/purchase-orders-add/purchase-orders-add.component.scss\n// module chunks = purchase-orders.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CompanyService } from '../../company/company.service';\r\nimport { PurchaseRequisitionService } from '../../purchase-requisition/purchase-requisition.service';\r\nimport { MaterialService } from '../../material/material.service';\r\nimport { PurchaseOrdersService } from '../purchase-orders.service';\r\nimport { VendorService } from '../../vendor/vendor.service';\r\nimport { TermsConditionService } from '../../terms-condition/terms-condition.service';\r\nimport { GstRatesService } from '../../gst-rates/gst-rates.service';\r\ndeclare var require: any;\r\nvar converter = require('number-to-words');\r\n@Component({\r\n  selector: 'app-purchase-orders-add',\r\n  templateUrl: './purchase-orders-add.component.html',\r\n  styleUrls: ['./purchase-orders-add.component.scss']\r\n})\r\nexport class PurchaseOrdersAddComponent implements OnInit {\r\n  model: any;\r\n  form: FormGroup;\r\n  purchase_order_detail: any[] = [];\r\n  purchase_order_freight: any[] = [];\r\n  purchase_order_terms: any[] = [];\r\n  requisition_list: any[] = [];\r\n  vendor_list: any[] = [];\r\n  requisition_details: any;\r\n  vendor_address_list: any[] = [];\r\n  visible_key: boolean;\r\n  terms_condition_list: any[] = [];\r\n  gst_rates_list: any[] = [];\r\n  get_gst_deatils: any;\r\n  material_details_list: any[] = [];\r\n  sum: number = 0;\r\n \r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private purchaseOrdersService: PurchaseOrdersService,\r\n    private purchaseRequisitionService: PurchaseRequisitionService,\r\n    private materialService: MaterialService,\r\n    private companyService: CompanyService,\r\n    private vendorService: VendorService,\r\n    private termsConditionService: TermsConditionService,\r\n    private gstRatesService: GstRatesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      requisition: ['', Validators.required],\r\n      quotation_no: ['', Validators.required],\r\n      quotation_date: ['', Validators.required],\r\n      pur_org: ['', Validators.required],\r\n      pur_grp: ['', Validators.required],\r\n      company: ['', Validators.required],\r\n      vendor: ['', Validators.required],\r\n      vendor_address: ['', Validators.required],\r\n      grand_total: [0, Validators.required],\r\n      grand_total_words: ['', Validators.required],\r\n      purchase_order_detail: this.formBuilder.array([]),\r\n      purchase_order_freight: this.formBuilder.array([]),\r\n      purchase_order_terms: this.formBuilder.array([]),\r\n    });\r\n    this.getRequisitionList();\r\n    this.getVendorList();\r\n    this.getTermsConditionList();\r\n    this.getGstRatesList();\r\n  }\r\n  getGstRatesList() {\r\n    this.gstRatesService.getGSTListWithoutPagination().subscribe(res => {\r\n      this.gst_rates_list = res;\r\n      // console.log(res)\r\n    })\r\n  }\r\n  getTermsConditionList() {\r\n    this.termsConditionService.getTermsListWithoutPagination().subscribe(res => {\r\n      this.terms_condition_list = res;\r\n      // console.log(this.terms_condition_list)\r\n    })\r\n  }\r\n  getVendorList() {\r\n    this.vendorService.getVendorListWithoutPagination().subscribe(res => {\r\n      this.vendor_list = res;\r\n    })\r\n  }\r\n  getRequisitionList() {\r\n    this.purchaseRequisitionService.getPurchaseRequisitionListWithoutPagination().subscribe(res => {\r\n      this.requisition_list = res;\r\n    })\r\n  }\r\n  btnClickNav = function (toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n  vendorChange(id) {\r\n    this.vendorService.getVendorDetails(id).subscribe(res => {\r\n      this.vendor_address_list = res.vendor_address;\r\n    })\r\n  }\r\n  requisitionChange(id) {\r\n    const order_freight_control = <FormArray>this.form.controls['purchase_order_freight'];\r\n    const order_detail_control = <FormArray>this.form.controls['purchase_order_detail'];\r\n    const order_terms_control = <FormArray>this.form.controls['purchase_order_terms'];\r\n    if (id) {\r\n      this.clearFormArray(order_freight_control)\r\n      this.requisition_details = '';\r\n      this.material_details_list = [];\r\n      this.sum = 0;\r\n      this.form.patchValue({\r\n        grand_total: this.sum\r\n      })\r\n      this.purchaseRequisitionService.getPurchaseRequisitionDetails(id).subscribe(res => {\r\n        this.requisition_details = res;\r\n        this.requisition_details.requisition_detail.forEach(x => {\r\n          var Mdtl = {\r\n            material: x.material.id,\r\n            gst_amount: '',\r\n            order_quantity: '',\r\n            rate: '',\r\n            discount_percent: '',\r\n            delivery_date: '',\r\n            sub_total: ''\r\n          }\r\n          this.material_details_list.push(Mdtl)\r\n        })\r\n        this.form.patchValue({\r\n          company: this.requisition_details.company.id,\r\n          pur_org: this.requisition_details.purchase_grp.id,\r\n          pur_grp: this.requisition_details.purchase_org.id\r\n        })\r\n        if (this.requisition_details.requisition_detail.length > 0) {\r\n          order_freight_control.push(this.create_purchase_order_freight());\r\n          this.visible_key = true;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this.clearFormArray(order_freight_control);\r\n      this.clearFormArray(order_detail_control);\r\n      this.clearFormArray(order_terms_control);\r\n      this.material_details_list = [];\r\n      this.visible_key = false;\r\n    }\r\n  }\r\n\r\n  clearFormArray = (formArray: FormArray) => {\r\n    while (formArray.length !== 0) {\r\n      formArray.removeAt(0)\r\n    }\r\n  }\r\n\r\n  // order deatils\r\n  create_purchase_order_detail(mat) {\r\n    return this.formBuilder.group({\r\n      company_branch: [mat.branch.id, Validators.required],\r\n      storage_location: [mat.storage_location.id, Validators.required],\r\n      storage_bin: [mat.storage_bin.id, Validators.required],\r\n      material: [mat.material.id, Validators.required],\r\n      uom: [mat.uom.id, Validators.required],\r\n      requisition_quantity: [mat.quantity, Validators.required],\r\n      order_quantity: ['', Validators.required],\r\n      rate: ['', Validators.required],\r\n      material_value: ['', Validators.required],\r\n      discount_percent: ['', Validators.required],\r\n      discount_value: ['', Validators.required],\r\n      igst: [mat.material.material_tax[0].igst, Validators.required],\r\n      cgst: [mat.material.material_tax[0].cgst, Validators.required],\r\n      sgst: [mat.material.material_tax[0].sgst, Validators.required],\r\n      gst_amount: ['', Validators.required],\r\n      sub_total: ['', Validators.required],\r\n      delivery_date: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  add_purchase_order_detail(mat) {\r\n    const control = <FormArray>this.form.controls['purchase_order_detail'];\r\n    control.push(this.create_purchase_order_detail(mat));\r\n  }\r\n\r\n  delete_purchase_order_detail(index: number) {\r\n    const control = <FormArray>this.form.controls['purchase_order_detail'];\r\n    control.removeAt(index);\r\n  }\r\n\r\n  matCheck(val, mat) {\r\n    if (val.currentTarget.checked) {\r\n      this.add_purchase_order_detail(mat)\r\n    } else {\r\n      var index = this.form.value.purchase_order_detail.findIndex(p => p.material == mat.material.id)\r\n      this.delete_purchase_order_detail(index)\r\n    }\r\n    this.sum = 0;\r\n    this.material_details_list.forEach(x => {\r\n      var Mindex = this.form.value.purchase_order_detail.findIndex(p => p.material == x.material)\r\n      if (Mindex > -1) {\r\n        this.sum += Math.round(x.sub_total)\r\n      }\r\n    })\r\n    this.form.patchValue({\r\n      grand_total: this.sum,\r\n      grand_total_words: converter.toWords(this.sum)\r\n    })\r\n  }\r\n  getSubTotal(quantity, rate, discount, i) {\r\n    if (Math.round(quantity) > Math.round(this.requisition_details.requisition_detail[i].quantity)) {\r\n      this.material_details_list[i].order_quantity = Math.round(this.requisition_details.requisition_detail[i].quantity)\r\n      this.toastr.error('Please enter less then PR quantity', '', {\r\n        timeOut: 3000,\r\n      });\r\n    }\r\n    if (quantity != \"\" && rate != \"\" && discount != \"\") {\r\n      this.material_details_list[i].sub_total = Math.round((rate * quantity) - (((rate * quantity) * discount) / 100))\r\n    }\r\n    else if (quantity != \"\" && rate != \"\") {\r\n      this.material_details_list[i].sub_total = Math.round((rate * quantity))\r\n    }\r\n    this.sum = 0;\r\n    this.material_details_list.forEach(x => {\r\n      var Mindex = this.form.value.purchase_order_detail.findIndex(p => p.material == x.material)\r\n      if (Mindex > -1) {\r\n        this.sum += Math.round(x.sub_total)\r\n      }\r\n    })\r\n    this.form.patchValue({\r\n      grand_total: this.sum,\r\n      grand_total_words: converter.toWords(this.sum)\r\n    })\r\n\r\n  }\r\n  // freight list\r\n  create_purchase_order_freight() {\r\n    return this.formBuilder.group({\r\n      freight_option: 1,\r\n      vendor: null,\r\n      freight_rate: 1,\r\n      freight_amount: ['', Validators.required],\r\n      freight_gst_rate: ['', Validators.required],\r\n      freight_total: [0, Validators.required]\r\n    });\r\n  }\r\n\r\n  add_purchase_order_freight() {\r\n    const control = <FormArray>this.form.controls['purchase_order_freight'];\r\n    control.push(this.create_purchase_order_freight());\r\n  }\r\n\r\n  delete_purchase_order_freight(index: number) {\r\n    const control = <FormArray>this.form.controls['purchase_order_freight'];\r\n    control.removeAt(index);\r\n  }\r\n\r\n  // terms and conditions\r\n  create_purchase_order_terms(id) {\r\n    return this.formBuilder.group({\r\n      po_terms: [id, Validators.required]\r\n    });\r\n  }\r\n\r\n  add_purchase_order_terms(id) {\r\n    const control = <FormArray>this.form.controls['purchase_order_terms'];\r\n    control.push(this.create_purchase_order_terms(id));\r\n  }\r\n\r\n  delete_purchase_order_terms(index: number) {\r\n    const control = <FormArray>this.form.controls['purchase_order_terms'];\r\n    control.removeAt(index);\r\n  }\r\n  termsCheck(val, id) {\r\n    if (val.currentTarget.checked) {\r\n      this.add_purchase_order_terms(id)\r\n    } else {\r\n      var index = this.form.value.purchase_order_terms.findIndex(p => p.po_terms == id)\r\n      this.delete_purchase_order_terms(index)\r\n    }\r\n  }\r\n  getFreightTotal(rate, amount, gst, i) {\r\n    if (rate != \"\" && amount != \"\" && gst != \"\") {\r\n      if (gst > 0) {\r\n        this.gstRatesService.getGSTDetails(gst).subscribe(res => {\r\n          this.get_gst_deatils = res;\r\n          this.form.value.purchase_order_freight[i].freight_total = Math.round(amount + Math.round(this.get_gst_deatils.igst));\r\n        })\r\n      }\r\n    }\r\n  }\r\n  goToList(toNav) {\r\n    this.router.navigateByUrl('/' + toNav);\r\n  };\r\n  addPurchaseOrder() {\r\n    if (this.form.value.purchase_order_detail.length == 0) {\r\n      this.toastr.error('Check atleast one item from list of item/s', '', {\r\n        timeOut: 3000,\r\n      });\r\n      return;\r\n    }\r\n    const order_detail_control = <FormArray>this.form.controls['purchase_order_detail'];\r\n    this.material_details_list.forEach(x => {\r\n      if(x.gst_amount == \"\" || x.rate == \"\" || x.discount_percent == \"\" || x.delivery_date == \"\"){\r\n        this.toastr.error('All fields are required in every row ', '', {\r\n          timeOut: 3000,\r\n        });\r\n        return;\r\n      }\r\n      var  myDate = new Date(x.delivery_date.year, x.delivery_date.month-1, x.delivery_date.day)\r\n      var Mindex = this.form.value.purchase_order_detail.findIndex(p => p.material == x.material)\r\n      if (Mindex > -1) {\r\n        order_detail_control.at(Mindex).patchValue({\r\n          gst_amount: x.gst_amount,\r\n          rate: x.rate,\r\n          order_quantity: x.order_quantity,\r\n          discount_percent: x.discount_percent,\r\n          discount_value: Math.round((x.rate * x.order_quantity) - x.sub_total),\r\n          sub_total: x.sub_total,\r\n          material_value: Math.round((x.rate * x.order_quantity)),\r\n          delivery_date: myDate.toISOString()\r\n        });\r\n      }\r\n    })\r\n    if (this.form.valid) {\r\n      var QtnDate = new Date(this.form.value.quotation_date.year,this.form.value.quotation_date.month-1,this.form.value.quotation_date.day)\r\n      this.form.patchValue({\r\n        quotation_date: QtnDate.toISOString()\r\n      })\r\n      this.purchaseOrdersService.addNewPurchaseOrder(this.form.value).subscribe(\r\n        response => {\r\n          // console.log(response)\r\n          this.toastr.success('Purchase order added successfully', '', {\r\n            timeOut: 3000,\r\n          });\r\n          this.goToList('purchase-orders');\r\n        },\r\n        error => {\r\n          console.log('error', error)\r\n          // this.toastr.error('everything is broken', '', {\r\n          //   timeOut: 3000,\r\n          // });\r\n        }\r\n      );\r\n    } else {\r\n      this.markFormGroupTouched(this.form)      \r\n    }\r\n  }\r\n\r\n  markFormGroupTouched(formGroup: FormGroup) {\r\n    (<any>Object).values(formGroup.controls).forEach(control => {\r\n      control.markAsTouched();\r\n      if (control.controls) {\r\n        control.controls.forEach(c => this.markFormGroupTouched(c));\r\n      }\r\n    });\r\n  }\r\n\r\n  reSet() {\r\n    this.form.reset();\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'is-invalid': this.form.get(field).invalid && (this.form.get(field).dirty || this.form.get(field).touched),\r\n      'is-valid': this.form.get(field).valid && (this.form.get(field).dirty || this.form.get(field).touched)\r\n    };\r\n  }\r\n\r\n\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/purchase-orders/purchase-orders-add/purchase-orders-add.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PurchaseOrdersComponent } from './purchase-orders.component';\r\nimport { PurchaseOrdersAddComponent } from './purchase-orders-add/purchase-orders-add.component';\r\nimport { PurchaseDetailsComponent } from './purchase-details/purchase-details.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PurchaseOrdersComponent\r\n  },\r\n  {\r\n    path: 'add',\r\n    component: PurchaseOrdersAddComponent\r\n  },\r\n  {\r\n    path: 'details/:id',\r\n    component: PurchaseDetailsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PurchaseOrdersRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/purchase-orders/purchase-orders-routing.module.ts","module.exports = \"<div>\\r\\n  <!-- <app-page-header [heading]=\\\"'Purchase Order List'\\\" [icon]=\\\"'fa fa-university'\\\"></app-page-header> -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4 class=\\\"page-header\\\">Purchase Order List</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\r\\n        <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('purchase-orders/add')\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i> New Purchase Order</button>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <hr/>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-9\\\">\\r\\n              <h5>Purchase Orders</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <form role=\\\"form\\\" (ngSubmit)=\\\"dataSearch()\\\">\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"search_key\\\">\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\">\\r\\n                      <i class=\\\"fa fa-search\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Sl.No.</th>\\r\\n              <th>Po No</th>\\r\\n              <th>Indent No</th>\\r\\n              <th>Po Amount</th>\\r\\n              <th>Company</th>\\r\\n              <th>Plant</th>\\r\\n              <th>Storage</th>\\r\\n              <th>Bin</th>\\r\\n              <th>Po Raised Date</th>\\r\\n              <th>Status</th>\\r\\n              <th>Is approved</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let purchaseOrder of purchaseOrderList ; let i = index\\\">\\r\\n              <th scope=\\\"row\\\">{{i +1}}</th>\\r\\n              <td>{{purchaseOrder.purchase_order_map[0].purchase_order_no}}</td>\\r\\n              <td>{{purchaseOrder.requisition_no[0].requisition_no}}</td>\\r\\n              <td>{{purchaseOrder.grand_total}}</td>\\r\\n              <td>{{purchaseOrder.company.company_name}}</td>\\r\\n              <td>{{purchaseOrder.purchase_order_detail[0].company_branch.branch_address}}</td>\\r\\n              <td>{{purchaseOrder.purchase_order_detail[0].storage_location.storage_address}}</td>\\r\\n              <td>{{purchaseOrder.purchase_order_detail[0].storage_bin.bin_no}}</td>\\r\\n              <td>{{purchaseOrder.quotation_date | date:'dd-MM-yyyy'}}</td>\\r\\n              <td>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Active\\\" name=\\\"Active\\\" (click)=\\\"inactiveState(purchaseOrder.id)\\\" *ngIf=\\\"purchaseOrder.status==true\\\">\\r\\n                    <i class=\\\"fa fa-thumbs-up\\\"></i> Active</a>\\r\\n                  <a href=\\\"javascript:void(0);\\\" title=\\\"Inactive\\\" name=\\\"Inactive\\\" (click)=\\\"activeState(purchaseOrder.id)\\\" *ngIf=\\\"purchaseOrder.status==false\\\">\\r\\n                    <i class=\\\"fa fa-thumbs-down\\\"></i> Inactive</a>\\r\\n              </td>\\r\\n              <td>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Active\\\" name=\\\"Active\\\" (click)=\\\"disApprovePurchaseOrder(purchaseOrder.id)\\\" *ngIf=\\\"purchaseOrder.is_approve==1\\\">\\r\\n                    <i class=\\\"fa fa-thumbs-up\\\"></i> Approve</a>\\r\\n                  <a href=\\\"javascript:void(0);\\\" title=\\\"Inactive\\\" name=\\\"Inactive\\\" (click)=\\\"approvePurchaseOrder(purchaseOrder.id)\\\" *ngIf=\\\"purchaseOrder.is_approve==0\\\">\\r\\n                    <i class=\\\"fa fa-thumbs-down\\\"></i> Dis-approve</a>\\r\\n              </td>\\r\\n              <td>\\r\\n                <a href=\\\"javascript:void(0);\\\" title=\\\"Details\\\" name=\\\"Details\\\" [routerLink]=\\\"['/purchase-orders/details', purchaseOrder.id]\\\">\\r\\n                  <i class=\\\"fa fa-eye\\\"></i>\\r\\n                </a>\\r\\n              </td>\\r\\n\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"purchaseOrderList.length == 0\\\">\\r\\n              <td colspan=\\\"12\\\" class=\\\"text-center\\\">No record found</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"totalpurchaseOrderList > 10\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card-body pull-right\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"totalpurchaseOrderList\\\" [(page)]=\\\"defaultPagination\\\" (pageChange)=\\\"pagination()\\\" size=\\\"sm\\\"></ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/purchase-orders/purchase-orders.component.html\n// module id = ./src/app/layout/purchase-orders/purchase-orders.component.html\n// module chunks = purchase-orders.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/purchase-orders/purchase-orders.component.scss\n// module id = ./src/app/layout/purchase-orders/purchase-orders.component.scss\n// module chunks = purchase-orders.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PurchaseOrdersService } from './purchase-orders.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CompanyService } from '../company/company.service';\r\n@Component({\r\n  selector: 'app-purchase-orders',\r\n  templateUrl: './purchase-orders.component.html',\r\n  styleUrls: ['./purchase-orders.component.scss']\r\n})\r\nexport class PurchaseOrdersComponent implements OnInit {\r\n  purchaseOrderList = []\r\n  defaultPagination: number;\r\n  totalpurchaseOrderList: number;\r\n  search_key = '';\r\n  companyList = [];\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private purchaseOrdersService: PurchaseOrdersService,\r\n    private companyService: CompanyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.defaultPagination = 1;\r\n    this.getPurchaseOrderList();\r\n    this.getCompanyList()\r\n  }\r\n\r\n  btnClickNav= function (toNav) {\r\n    this.router.navigateByUrl('/'+toNav);\r\n  };\r\n\r\n  dataSearch() {\r\n    this.defaultPagination = 1;\r\n    this.getPurchaseOrderList();\r\n  }\r\n  getCompanyList() {\r\n    this.companyService.getCompanyDropdownList().subscribe(\r\n      (data: any[]) => {\r\n        this.companyList = data;\r\n        // console.log(this.companyList);\r\n      }\r\n    );\r\n  };\r\n  // getCompanyName(id) {\r\n  //   var data = { id: 0, company_name: '' }\r\n  //   data = this.companyList.filter(x => x.id === id)[0];\r\n  //   if (data != undefined) {\r\n  //     return data.company_name\r\n  //   }\r\n  // }\r\n  getPurchaseOrderList(){\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set('page', this.defaultPagination.toString());\r\n    params.set('search', this.search_key.toString());\r\n    this.purchaseOrdersService.getPurchaseOrderList(params).subscribe(\r\n      (data: any[]) => {\r\n        this.totalpurchaseOrderList = data['count'];\r\n        this.purchaseOrderList = data['results'];\r\n        // console.log(this.purchaseOrderList)\r\n      }\r\n    );\r\n  }\r\n\r\n  activeState(id) {\r\n    let PurchaseOrder;\r\n\r\n    PurchaseOrder = {\r\n      id: id,\r\n      status: true\r\n    };\r\n    this.purchaseOrdersService.activeInactivePurchaseOrder(PurchaseOrder).subscribe(\r\n      response => {\r\n        this.toastr.success('Status changed successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getPurchaseOrderList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  inactiveState(id) {\r\n    let PurchaseOrder;\r\n\r\n    PurchaseOrder = {\r\n      id: id,\r\n      status: false\r\n    };\r\n\r\n    this.purchaseOrdersService.activeInactivePurchaseOrder(PurchaseOrder).subscribe(\r\n      response => {\r\n        this.toastr.success('Status changed successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getPurchaseOrderList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  approvePurchaseOrder(id) {\r\n    let PurchaseOrder;\r\n\r\n    PurchaseOrder = {\r\n      id: id,\r\n      is_approve: 1\r\n    };\r\n    this.purchaseOrdersService.activeInactivePurchaseOrder(PurchaseOrder).subscribe(\r\n      response => {\r\n        this.toastr.success('Purchase order approved successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getPurchaseOrderList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  disApprovePurchaseOrder(id) {\r\n    let PurchaseOrder;\r\n\r\n    PurchaseOrder = {\r\n      id: id,\r\n      is_approve: 0\r\n    };\r\n\r\n    this.purchaseOrdersService.activeInactivePurchaseOrder(PurchaseOrder).subscribe(\r\n      response => {\r\n        this.toastr.success('Purchase order disapproved successfully', '', {\r\n          timeOut: 3000,\r\n        });\r\n        this.getPurchaseOrderList();\r\n      },\r\n      error => {\r\n        console.log('error', error)\r\n        // this.toastr.error('everything is broken', '', {\r\n        //   timeOut: 3000,\r\n        // });\r\n      }\r\n    );\r\n  };\r\n\r\n  pagination() {\r\n    this.getPurchaseOrderList();\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/purchase-orders/purchase-orders.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { PurchaseOrdersRoutingModule } from './purchase-orders-routing.module';\r\nimport { PurchaseOrdersComponent } from './purchase-orders.component';\r\nimport { PurchaseOrdersAddComponent } from './purchase-orders-add/purchase-orders-add.component';\r\nimport { PageHeaderModule } from '../../shared';\r\n\r\nimport { BsComponentModule } from '../bs-component/bs-component.module';\r\nimport { PurchaseOrdersService } from './purchase-orders.service';\r\nimport { CompanyService } from '../company/company.service';\r\nimport { MaterialService } from '../material/material.service';\r\nimport { PurchaseRequisitionService } from '../purchase-requisition/purchase-requisition.service';\r\nimport { VendorService } from '../vendor/vendor.service';\r\nimport { TermsConditionService } from '../terms-condition/terms-condition.service';\r\nimport { GstRatesService } from '../gst-rates/gst-rates.service';\r\nimport { PurchaseDetailsComponent } from './purchase-details/purchase-details.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PurchaseOrdersRoutingModule,\r\n    PageHeaderModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule.forRoot(),\r\n    HttpClientModule,\r\n    BsComponentModule\r\n  ],\r\n  declarations: [PurchaseOrdersComponent, PurchaseOrdersAddComponent, PurchaseDetailsComponent],\r\n  providers: [PurchaseOrdersService,CompanyService,MaterialService,PurchaseRequisitionService,VendorService,TermsConditionService,GstRatesService]\r\n})\r\nexport class PurchaseOrdersModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/purchase-orders/purchase-orders.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule, HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class PurchaseOrdersService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addNewPurchaseOrder(data): Observable<any>{\r\n    return this.http.post(environment.apiEndpoint+'purchase_order/', data, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n  getPurchaseOrderList(params): Observable<any>{\r\n    return this.http.get(environment.apiEndpoint+'all_purchase_order/?'+params, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }  \r\n  \r\n\r\n  getPurchaseOrderDetails(id): Observable<any>{\r\n    return this.http.get(environment.apiEndpoint+'all_purchase_order/'+id+'/', {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n  updatePurchaseOrder(data): Observable<any>{\r\n    return this.http.put(environment.apiEndpoint+'purchase_order/'+data.id+'/',data, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n  activeInactivePurchaseOrder(data): Observable<any>{\r\n    return this.http.patch(environment.apiEndpoint+'purchase_order/'+data.id+'/',data, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n  approveDisapprovePurchaseOrder(data): Observable<any>{\r\n    return this.http.patch(environment.apiEndpoint+'purchase_order/'+data.id+'/',data, {\r\n      headers: new HttpHeaders().set('Authorization', 'Token '+localStorage.getItem('logedUserToken'))\r\n    })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/purchase-orders/purchase-orders.service.ts"],"sourceRoot":"webpack:///"}