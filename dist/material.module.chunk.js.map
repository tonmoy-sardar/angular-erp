{"version":3,"sources":["./src/app/layout/material/material-add/material-add.component.html","./src/app/layout/material/material-add/material-add.component.scss","./src/app/layout/material/material-add/material-add.component.ts","./src/app/layout/material/material-edit/material-edit.component.html","./src/app/layout/material/material-edit/material-edit.component.scss","./src/app/layout/material/material-edit/material-edit.component.ts","./src/app/layout/material/material-routing.module.ts","./src/app/layout/material/material.component.html","./src/app/layout/material/material.component.scss","./src/app/layout/material/material.component.ts","./src/app/layout/material/material.module.ts"],"names":[],"mappings":"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","file":"material.module.chunk.js","sourcesContent":["module.exports = \"<div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h4 class=\\\"page-header\\\">Material Add</h4>\\n        </div>\\n        <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\n                <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\n                <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('material')\\\">\\n                <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n    <hr/>\\n    <div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\n                    <div class=\\\"card bg-light mb-3\\\">\\n                        <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Material Add</div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"form-group col-md-4\\\">\\n                                    <label>Material Type</label>\\n                                    <select class=\\\"form-control\\\" formControlName=\\\"material_type\\\" [ngClass]=\\\"displayFieldCss('material_type')\\\">\\n                                        <option value=\\\"\\\">Select Material Type</option>\\n                                        <option *ngFor=\\\"let materialType of materialTypeList;\\\" value=\\\"{{materialType.id}}\\\">{{materialType.material_type}}</option>\\n                                    </select>\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_type'].hasError('required')\\\">\\n                                        Please select material Type\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group col-md-4\\\">\\n                                    <label>Material Name</label>\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"material_fullname\\\" [ngClass]=\\\"displayFieldCss('material_fullname')\\\" placeholder=\\\"Material Name\\\">\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_fullname'].hasError('required')\\\">\\n                                        Please enter material name\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group col-md-4\\\">\\n                                    <label>Material Code</label>\\n                                    <input class=\\\"form-control\\\" formControlName=\\\"material_code\\\" [ngClass]=\\\"displayFieldCss('material_code')\\\" placeholder=\\\"Material Name\\\">\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_code'].hasError('required')\\\">\\n                                        Please enter material cose\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group col-md-12\\\" formArrayName=\\\"material_uom\\\">\\n                                    <div *ngFor=\\\"let material_uoms of form.controls['material_uom'].controls; let i = index;\\\">\\n                                        <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n                                            <div class=\\\"form-group col-md-4\\\">\\n                                                <label>Unit of Measurement</label>\\n                                                <select class=\\\"form-control\\\" formControlName=\\\"base_uom\\\" [ngClass]=\\\"{\\n                                                    'is-invalid': form.controls['material_uom'].controls[i].controls['base_uom'].invalid && (form.controls['material_uom'].controls[i].controls['base_uom'].dirty || form.controls['material_uom'].controls[i].controls['base_uom'].touched),\\n                                                    'is-valid': form.controls['material_uom'].controls[i].controls['base_uom'].valid && (form.controls['material_uom'].controls[i].controls['base_uom'].dirty || form.controls['material_uom'].controls[i].controls['base_uom'].touched)\\n                                                  }\\\">\\n                                                    <option value=\\\"0\\\">Select UOM</option>\\n                                                    <option *ngFor=\\\"let uom of UOMList;\\\" value=\\\"{{uom.id}}\\\">{{uom.name}}</option>\\n                                                </select>\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_uom'].controls[i].controls['base_uom'].hasError('required')\\\">\\n                                                    Please enter unit of Measurement\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-4\\\">\\n                                                <label>Unit Per UOM</label>\\n                                                <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"unit_per_uom\\\" placeholder=\\\"Material Name\\\" [ngClass]=\\\"{\\n                                                    'is-invalid': form.controls['material_uom'].controls[i].controls['unit_per_uom'].invalid && (form.controls['material_uom'].controls[i].controls['unit_per_uom'].dirty || form.controls['material_uom'].controls[i].controls['unit_per_uom'].touched),\\n                                                    'is-valid': form.controls['material_uom'].controls[i].controls['unit_per_uom'].valid && (form.controls['material_uom'].controls[i].controls['unit_per_uom'].dirty || form.controls['material_uom'].controls[i].controls['unit_per_uom'].touched)\\n                                                  }\\\">\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_uom'].controls[i].controls['unit_per_uom'].hasError('required')\\\">\\n                                                    Please enter unit per UOM\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-4\\\">\\n                                                <label>UOM</label>\\n                                                <select class=\\\"form-control\\\" formControlName=\\\"unit_uom\\\" [ngClass]=\\\"{\\n                                                    'is-invalid': form.controls['material_uom'].controls[i].controls['unit_uom'].invalid && (form.controls['material_uom'].controls[i].controls['unit_uom'].dirty || form.controls['material_uom'].controls[i].controls['unit_uom'].touched),\\n                                                    'is-valid': form.controls['material_uom'].controls[i].controls['unit_uom'].valid && (form.controls['material_uom'].controls[i].controls['unit_uom'].dirty || form.controls['material_uom'].controls[i].controls['unit_uom'].touched)\\n                                                  }\\\">\\n                                                    <option value=\\\"0\\\">Select UOM</option>\\n                                                    <option *ngFor=\\\"let uom of UOMList;\\\" value=\\\"{{uom.id}}\\\">{{uom.name}}</option>\\n                                                </select>\\n                                                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_uom'].controls[i].controls['unit_uom'].hasError('required')\\\">\\n                                                    Please enter select UOM\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group col-md-12\\\">\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" formControlName=\\\"is_sales\\\" (click)=\\\"showHideMaterialUOM()\\\"> For Sale Material\\n                                        </label>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group col-md-12\\\">\\n\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\" formControlName=\\\"is_taxable\\\" (click)=\\\"showHideMaterialTax()\\\"> Is Taxable?\\n                                    </label>\\n\\n                                </div>\\n                                <div class=\\\"form-group col-md-12\\\" *ngIf=\\\"is_taxable_value==true\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"form-group col-md-12\\\" formArrayName=\\\"material_tax\\\" *ngFor=\\\"let material_taxs of form.controls['material_tax'].controls; let i = index;\\\">\\n                                            <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n                                                <div class=\\\"form-group col-md-3\\\">\\n                                                    <label>IGST</label>\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"igst\\\" placeholder=\\\"IGST\\\" [ngClass]=\\\"{\\n                                                'is-invalid': form.controls['material_tax'].controls[i].controls['igst'].invalid && (form.controls['material_tax'].controls[i].controls['igst'].dirty || form.controls['material_tax'].controls[i].controls['igst'].touched),\\n                                                'is-valid': form.controls['material_tax'].controls[i].controls['igst'].valid && (form.controls['material_tax'].controls[i].controls['igst'].dirty || form.controls['material_tax'].controls[i].controls['igst'].touched)\\n                                              }\\\">\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_tax'].controls[i].controls['igst'].hasError('required')\\\">\\n                                                        Please enter IGST\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-3\\\">\\n                                                    <label>CGST</label>\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"cgst\\\" placeholder=\\\"CGST\\\" [ngClass]=\\\"{\\n                                                'is-invalid': form.controls['material_tax'].controls[i].controls['cgst'].invalid && (form.controls['material_tax'].controls[i].controls['cgst'].dirty || form.controls['material_tax'].controls[i].controls['cgst'].touched),\\n                                                'is-valid': form.controls['material_tax'].controls[i].controls['cgst'].valid && (form.controls['material_tax'].controls[i].controls['cgst'].dirty || form.controls['material_tax'].controls[i].controls['cgst'].touched)\\n                                              }\\\">\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_tax'].controls[i].controls['cgst'].hasError('required')\\\">\\n                                                        Please enter CGST\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-3\\\">\\n                                                    <label>SGST</label>\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"sgst\\\" placeholder=\\\"SGST\\\" [ngClass]=\\\"{\\n                                                'is-invalid': form.controls['material_tax'].controls[i].controls['sgst'].invalid && (form.controls['material_tax'].controls[i].controls['sgst'].dirty || form.controls['material_tax'].controls[i].controls['sgst'].touched),\\n                                                'is-valid': form.controls['material_tax'].controls[i].controls['sgst'].valid && (form.controls['material_tax'].controls[i].controls['sgst'].dirty || form.controls['material_tax'].controls[i].controls['sgst'].touched)\\n                                              }\\\">\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_tax'].controls[i].controls['sgst'].hasError('required')\\\">\\n                                                        Please enter SGST\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-3\\\">\\n                                                    <label>HSN</label>\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"hsn\\\" placeholder=\\\"HSN\\\" [ngClass]=\\\"{\\n                                                'is-invalid': form.controls['material_tax'].controls[i].controls['hsn'].invalid && (form.controls['material_tax'].controls[i].controls['hsn'].dirty || form.controls['material_tax'].controls[i].controls['hsn'].touched),\\n                                                'is-valid': form.controls['material_tax'].controls[i].controls['hsn'].valid && (form.controls['material_tax'].controls[i].controls['hsn'].dirty || form.controls['material_tax'].controls[i].controls['hsn'].touched)\\n                                              }\\\">\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_tax'].controls[i].controls['hsn'].hasError('required')\\\">\\n                                                        Please enter HSN\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group col-md-6\\\">\\n                                    <label>Purchase Org: </label>\\n                                    <select multiple=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"material_purchase_org\\\" [ngClass]=\\\"displayFieldCss('material_purchase_org')\\\">\\n                                        <option *ngFor=\\\"let purchaseOrganization of purchaseOrganizationList\\\" value={{purchaseOrganization.id}}>{{purchaseOrganization.name}} </option>\\n                                    </select>\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_purchase_org'].hasError('required')\\\">\\n                                        Please select purchase org\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group col-md-6\\\">\\n                                    <label>Purchase Group: </label>\\n                                    <select multiple=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"material_purchase_grp\\\" [ngClass]=\\\"displayFieldCss('material_purchase_grp')\\\">\\n                                        <option *ngFor=\\\"let purchaseGroup of purchaseGroupList;\\\" value={{purchaseGroup.id}}>{{purchaseGroup.name}} </option>\\n                                    </select>\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_purchase_grp'].hasError('required')\\\">\\n                                        Please select purchase group\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group col-md-12\\\">\\n                                    <label>Description</label>\\n                                    <textarea class=\\\"form-control\\\" rows=\\\"2\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [ngClass]=\\\"displayFieldCss('description')\\\"></textarea>\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['description'].hasError('required')\\\">\\n                                        Please enter description\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"addMaterial()\\\">Submit</button>\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\">Reset</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/material/material-add/material-add.component.html\n// module id = ./src/app/layout/material/material-add/material-add.component.html\n// module chunks = material.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/material/material-add/material-add.component.scss\n// module id = ./src/app/layout/material/material-add/material-add.component.scss\n// module chunks = material.module","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormArray, Validators, } from '@angular/forms';\n\nimport { CompanyService } from '../../company/company.service';\nimport { PurchaseOrganizationService} from '../../purchase-organization/purchase-organization.service';\nimport { PurchaseGroupService} from '../../purchase-group/purchase-group.service';\nimport { MaterialService } from '../material.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-material-add',\n  templateUrl: './material-add.component.html',\n  styleUrls: ['./material-add.component.scss']\n})\nexport class MaterialAddComponent implements OnInit {\n  material;\n  materialTypeList=[];\n  UOMList=[];\n  purchaseGroupList=[];\n  purchaseOrganizationList=[];\n  form: FormGroup;\n  is_taxable_value=false;\n  \n\n  constructor(\n      private materialService: MaterialService,\n      private purchaseOrganizationService: PurchaseOrganizationService, \n      private purchaseGroupService: PurchaseGroupService, \n      private companyService: CompanyService, \n      private router: Router,\n      private toastr: ToastrService,\n      private formBuilder: FormBuilder,\n    ) { }\n\n  ngOnInit() {\n   \n    this.form = this.formBuilder.group({\n      material_type: [null, Validators.required],\n      material_code:  [null, Validators.required],\n      material_fullname: [null, Validators.required],\n      material_purchase_org:[null, Validators.required],\n      material_purchase_grp:[null, Validators.required],\n      description:[null, Validators.required],\n      material_uom:this.formBuilder.array([ this.createmMaterialUom(1) ]),\n      is_sales: [false],\n      is_taxable: [false],\n      material_tax:this.formBuilder.array([ this.createmMaterialTax(1) ])\n    });\n    \n    this.getUOMList();\n    this.getMaterialTypeList();\n    this.getPurchaseGroupActiveList();\n    this.getPurchaseOrganizationActiveList();                                                      \n  }\n\n  \n\n  createmMaterialUom(for_id) {\n    return this.formBuilder.group({\n      material_for: for_id,\n      base_uom: ['', Validators.required],\n      unit_per_uom: ['', Validators.required],\n      unit_uom: ['', Validators.required]\n    });\n  }\n\n  addMaterialUom(){\n\n    const control = <FormArray>this.form.controls['material_uom'];\n    control.push(this.createmMaterialUom(2));\n\n    // this.material_uom_arr = this.form.get('material_uom') as FormArray;\n    // this.material_uom_arr.push(this.createmMaterialUom(2));\n  }\n\n  deleteMaterialUom(index:number)\n  {\n    const control = <FormArray>this.form.controls['material_uom'];\n    control.removeAt(index);\n\n    // this.material_uom_arr.controls.splice(index);\n    // this.form.value.material_uom.splice(index);\n  }\n\n  showHideMaterialUOM()\n  {\n    if(this.form.value.is_sales!=true)\n    {\n      this.addMaterialUom();\n      if(this.form.value.is_taxable==true)\n      {\n        this.addMateriaTax();\n      }\n    }\n    else{\n      this.deleteMaterialUom(1);\n      if(this.form.value.is_taxable==true)\n      {\n        this.deleteMaterialTax(1);\n      }\n    }\n  }\n\n  createmMaterialTax(for_id) {\n    return this.formBuilder.group({\n      tax_for: for_id,\n      igst: [''],\n      cgst: [''],\n      sgst: [''],\n      hsn: ['']\n    });\n  }\n\n  addMateriaTax(){\n\n    const control = <FormArray>this.form.controls['material_tax'];\n    control.push(this.createmMaterialTax(2));\n\n    // this.material_tax_arr = this.form.get('material_tax') as FormArray;\n    // this.material_tax_arr.push(this.createmMaterialTax(2));\n  }\n\n  deleteMaterialTax(index:number)\n  {\n    const control = <FormArray>this.form.controls['material_tax'];\n    control.removeAt(index);\n\n    // this.material_tax_arr.controls.splice(index);\n    // this.form.value.material_tax.splice(index);\n  }\n\n  showHideMaterialTax()\n  {\n    \n    if(this.form.value.is_taxable!=true)\n    {\n      this.is_taxable_value = true;\n      if(this.form.value.is_sales==true)\n      {\n        this.addMateriaTax();\n      }\n     \n    }\n    else{\n      this.is_taxable_value = false;\n      if(this.form.value.is_sales==true)\n      {\n        this.deleteMaterialTax(1);\n      }\n      \n    }\n  }\n\n  getMaterialTypeList()\n  {\n    this.materialService.getMaterialTypeList().subscribe(\n      (data: any[]) =>{   \n        this.materialTypeList = data['results'];\n        \n      }\n     );\n  }\n  btnClickNav(toNav) {\n    this.router.navigateByUrl('/'+toNav);\n  };\n\n  getUOMList(){\n    this.companyService.getUOMList().subscribe(\n      (data: any[]) =>{   \n        this.UOMList = data['results'];\n       \n      }\n     );\n  };\n\n  getPurchaseGroupActiveList(){\n    this.purchaseGroupService.getPurchaseGroupActiveList().subscribe(\n      (data: any[]) =>{   \n        this.purchaseGroupList = data;\n       \n      }\n     );\n  }\n\n  getPurchaseOrganizationActiveList(){\n    this.purchaseOrganizationService.getPurchaseOrganizationActiveList().subscribe(\n      (data: any[]) =>{   \n        this.purchaseOrganizationList = data;\n        \n      }\n     );\n  }\n\n  \n\n  addMaterial = function () {\n\n    if (this.form.valid) {\n\n      let material_purchase_org_arr = [];\n      for (let i=0; i<this.form.value.material_purchase_org.length; i++)\n      {\n        material_purchase_org_arr.push({pur_org:this.form.value.material_purchase_org[i]});\n      }\n\n      let material_purchase_grp_arr = [];\n      for (let i=0; i<this.form.value.material_purchase_grp.length; i++)\n      {\n        material_purchase_grp_arr.push({pur_group:this.form.value.material_purchase_grp[i]});\n      }\n\n      this.form.value.material_purchase_org = material_purchase_org_arr;\n      this.form.value.material_purchase_grp = material_purchase_grp_arr;\n\n      if(this.is_taxable_value==false)\n      {\n        this.form.value.material_tax = [];\n      }\n\n      \n      this.materialService.addNewMaterial(this.form.value).subscribe(\n        response => {\n          this.toastr.success('Material added successfully', '', {\n            timeOut: 3000,\n          });\n          this.goToList('material');          \n        },\n        error => {\n          console.log('error', error)\n          // this.toastr.error('everything is broken', '', {\n          //   timeOut: 3000,\n          // });\n        }\n      );\n    } else {\n      Object.keys(this.form.controls).forEach(field => {\n        const control = this.form.get(field);\n        control.markAsTouched({ onlySelf: true });\n      });\n    }\n  }\n\n  goToList(toNav) {\n    this.router.navigateByUrl('/' + toNav);\n  };\n  \n  displayFieldCss(field: string) {\n    return {\n      'is-invalid': this.form.controls[field].invalid && (this.form.controls[field].dirty || this.form.controls[field].touched),\n      'is-valid': this.form.controls[field].valid && (this.form.controls[field].dirty || this.form.controls[field].touched)\n    };\n  }\n\n \n\n \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/material/material-add/material-add.component.ts","module.exports = \"<div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <h4 class=\\\"page-header\\\">Material Edit</h4>\\n            </div>\\n            <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\n                    <i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">\\n                    <i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('material')\\\">\\n                    <i class=\\\"fa fa-arrow-left\\\"></i> Back</button>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <hr/>\\n        <div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <form role=\\\"form\\\" [formGroup]=\\\"form\\\" novalidate>\\n                        <div class=\\\"card bg-light mb-3\\\">\\n                            <div class=\\\"card-header\\\" style=\\\"background-color:#868e96; color: #fff;\\\">Material Edit</div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label>Material Type</label>\\n                                        <select class=\\\"form-control\\\" formControlName=\\\"material_type\\\" [ngClass]=\\\"displayFieldCss('material_type')\\\" [(ngModel)]=\\\"material.material_type\\\" name=\\\"material_type\\\">\\n                                            <option value=\\\"\\\">Select Material Type</option>\\n                                            <option *ngFor=\\\"let materialType of materialTypeList;\\\" value=\\\"{{materialType.id}}\\\">{{materialType.material_type}}</option>\\n                                        </select>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_type'].hasError('required')\\\">\\n                                            Please select material Type\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label>Material Name</label>\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"material_fullname\\\" [ngClass]=\\\"displayFieldCss('material_fullname')\\\" placeholder=\\\"Material Name\\\" [(ngModel)]=\\\"material.material_fullname\\\" name=\\\"material_fullname\\\">\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_fullname'].hasError('required')\\\">\\n                                            Please enter material name\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-4\\\">\\n                                        <label>Material Code</label>\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"material_code\\\" [ngClass]=\\\"displayFieldCss('material_code')\\\" placeholder=\\\"Material Code\\\" [(ngModel)]=\\\"material.material_code\\\" name=\\\"material_code\\\">\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_code'].hasError('required')\\\">\\n                                            Please enter material cose\\n                                        </div>\\n                                    </div>\\n    \\n                                    <div class=\\\"form-group col-md-12\\\" formArrayName=\\\"material_uom\\\">\\n                                        <div *ngFor=\\\"let material_uoms of form.controls['material_uom'].controls; let i = index;\\\">\\n                                            <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n                                                <div class=\\\"form-group col-md-4\\\">\\n                                                    <label>Unit of Measurement</label>\\n                                                    <select class=\\\"form-control\\\" formControlName=\\\"base_uom\\\" [ngClass]=\\\"{\\n                                                        'is-invalid': form.controls['material_uom'].controls[i].controls['base_uom'].invalid && (form.controls['material_uom'].controls[i].controls['base_uom'].dirty || form.controls['material_uom'].controls[i].controls['base_uom'].touched),\\n                                                        'is-valid': form.controls['material_uom'].controls[i].controls['base_uom'].valid && (form.controls['material_uom'].controls[i].controls['base_uom'].dirty || form.controls['material_uom'].controls[i].controls['base_uom'].touched)\\n                                                      }\\\"  [(ngModel)]=\\\"material.material_uom[i].base_uom\\\" name=\\\"base_uom\\\">\\n                                                        <option value=\\\"0\\\">Select UOM</option>\\n                                                        <option *ngFor=\\\"let uom of UOMList;\\\" value=\\\"{{uom.id}}\\\">{{uom.name}}</option>\\n                                                    </select>\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_uom'].controls[i].controls['base_uom'].hasError('required')\\\">\\n                                                        Please enter unit of Measurement\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-4\\\">\\n                                                    <label>Unit Per UOM</label>\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"unit_per_uom\\\" placeholder=\\\"Material Name\\\" [ngClass]=\\\"{\\n                                                        'is-invalid': form.controls['material_uom'].controls[i].controls['unit_per_uom'].invalid && (form.controls['material_uom'].controls[i].controls['unit_per_uom'].dirty || form.controls['material_uom'].controls[i].controls['unit_per_uom'].touched),\\n                                                        'is-valid': form.controls['material_uom'].controls[i].controls['unit_per_uom'].valid && (form.controls['material_uom'].controls[i].controls['unit_per_uom'].dirty || form.controls['material_uom'].controls[i].controls['unit_per_uom'].touched)\\n                                                      }\\\"  [(ngModel)]=\\\"material.material_uom[i].unit_per_uom\\\" name=\\\"unit_per_uom\\\">\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_uom'].controls[i].controls['unit_per_uom'].hasError('required')\\\">\\n                                                        Please enter unit per UOM\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-4\\\">\\n                                                    <label>UOM</label>\\n                                                    <select class=\\\"form-control\\\" formControlName=\\\"unit_uom\\\" [ngClass]=\\\"{\\n                                                        'is-invalid': form.controls['material_uom'].controls[i].controls['unit_uom'].invalid && (form.controls['material_uom'].controls[i].controls['unit_uom'].dirty || form.controls['material_uom'].controls[i].controls['unit_uom'].touched),\\n                                                        'is-valid': form.controls['material_uom'].controls[i].controls['unit_uom'].valid && (form.controls['material_uom'].controls[i].controls['unit_uom'].dirty || form.controls['material_uom'].controls[i].controls['unit_uom'].touched)\\n                                                      }\\\" [(ngModel)]=\\\"material.material_uom[i].unit_uom\\\" name=\\\"unit_uom\\\">\\n                                                        <option value=\\\"0\\\">Select UOM</option>\\n                                                        <option *ngFor=\\\"let uom of UOMList;\\\" value=\\\"{{uom.id}}\\\">{{uom.name}}</option>\\n                                                    </select>\\n                                                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_uom'].controls[i].controls['unit_uom'].hasError('required')\\\">\\n                                                        Please enter select UOM\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-12\\\">\\n                                        <div class=\\\"checkbox\\\">\\n                                            <label>\\n                                                <input type=\\\"checkbox\\\" formControlName=\\\"is_sales\\\" (click)=\\\"showHideMaterialUOM()\\\" [(ngModel)]=\\\"material.is_sales\\\" name=\\\"is_sales\\\"> For Sale Material\\n                                            </label>\\n                                        </div>\\n                                    </div>\\n    \\n                                    <div class=\\\"form-group col-md-12\\\">\\n    \\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" formControlName=\\\"is_taxable\\\" (click)=\\\"showHideMaterialTax()\\\" [(ngModel)]=\\\"material.is_taxable\\\" name=\\\"is_taxable\\\"> Is Taxable?\\n                                        </label>\\n    \\n                                    </div>\\n                                    <div class=\\\"form-group col-md-12\\\" *ngIf=\\\"is_taxable_value==true\\\">\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"form-group col-md-12\\\" formArrayName=\\\"material_tax\\\" *ngFor=\\\"let material_taxs of form.controls['material_tax'].controls; let i = index;\\\">\\n                                                <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n                                                    <div class=\\\"form-group col-md-3\\\">\\n                                                        <label>IGST</label>\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"igst\\\" placeholder=\\\"IGST\\\" [ngClass]=\\\"{\\n                                                    'is-invalid': form.controls['material_tax'].controls[i].controls['igst'].invalid && (form.controls['material_tax'].controls[i].controls['igst'].dirty || form.controls['material_tax'].controls[i].controls['igst'].touched),\\n                                                    'is-valid': form.controls['material_tax'].controls[i].controls['igst'].valid && (form.controls['material_tax'].controls[i].controls['igst'].dirty || form.controls['material_tax'].controls[i].controls['igst'].touched)\\n                                                  }\\\" [(ngModel)]=\\\"material.material_tax[i].igst\\\" name=\\\"igst\\\">\\n                                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_tax'].controls[i].controls['igst'].hasError('required')\\\">\\n                                                            Please enter IGST\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"form-group col-md-3\\\">\\n                                                        <label>CGST</label>\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"cgst\\\" placeholder=\\\"CGST\\\" [ngClass]=\\\"{\\n                                                    'is-invalid': form.controls['material_tax'].controls[i].controls['cgst'].invalid && (form.controls['material_tax'].controls[i].controls['cgst'].dirty || form.controls['material_tax'].controls[i].controls['cgst'].touched),\\n                                                    'is-valid': form.controls['material_tax'].controls[i].controls['cgst'].valid && (form.controls['material_tax'].controls[i].controls['cgst'].dirty || form.controls['material_tax'].controls[i].controls['cgst'].touched)\\n                                                  }\\\" [(ngModel)]=\\\"material.material_tax[i].cgst\\\" name=\\\"cgst\\\">\\n                                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_tax'].controls[i].controls['cgst'].hasError('required')\\\">\\n                                                            Please enter CGST\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"form-group col-md-3\\\">\\n                                                        <label>SGST</label>\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"sgst\\\" placeholder=\\\"SGST\\\" [ngClass]=\\\"{\\n                                                    'is-invalid': form.controls['material_tax'].controls[i].controls['sgst'].invalid && (form.controls['material_tax'].controls[i].controls['sgst'].dirty || form.controls['material_tax'].controls[i].controls['sgst'].touched),\\n                                                    'is-valid': form.controls['material_tax'].controls[i].controls['sgst'].valid && (form.controls['material_tax'].controls[i].controls['sgst'].dirty || form.controls['material_tax'].controls[i].controls['sgst'].touched)\\n                                                  }\\\" [(ngModel)]=\\\"material.material_tax[i].sgst\\\" name=\\\"sgst\\\">\\n                                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_tax'].controls[i].controls['sgst'].hasError('required')\\\">\\n                                                            Please enter SGST\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"form-group col-md-3\\\">\\n                                                        <label>HSN</label>\\n                                                        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"hsn\\\" placeholder=\\\"HSN\\\" [ngClass]=\\\"{\\n                                                    'is-invalid': form.controls['material_tax'].controls[i].controls['hsn'].invalid && (form.controls['material_tax'].controls[i].controls['hsn'].dirty || form.controls['material_tax'].controls[i].controls['hsn'].touched),\\n                                                    'is-valid': form.controls['material_tax'].controls[i].controls['hsn'].valid && (form.controls['material_tax'].controls[i].controls['hsn'].dirty || form.controls['material_tax'].controls[i].controls['hsn'].touched)\\n                                                  }\\\" [(ngModel)]=\\\"material.material_tax[i].hsn\\\" name=\\\"hsn\\\">\\n                                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_tax'].controls[i].controls['hsn'].hasError('required')\\\">\\n                                                            Please enter HSN\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n    \\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>Purchase Org: </label>\\n                                        <select multiple=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"material_purchase_org\\\" [ngClass]=\\\"displayFieldCss('material_purchase_org')\\\" [(ngModel)]=\\\"material.material_purchase_org\\\" name=\\\"material_purchase_org\\\">\\n                                            <option *ngFor=\\\"let purchaseOrganization of purchaseOrganizationList\\\" value={{purchaseOrganization.id}}>{{purchaseOrganization.name}} </option>\\n                                        </select>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_purchase_org'].hasError('required')\\\">\\n                                            Please select purchase org\\n                                        </div>\\n                                    </div>\\n    \\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>Purchase Group: </label>\\n                                        \\n                                        <select multiple=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"material_purchase_grp\\\" [ngClass]=\\\"displayFieldCss('material_purchase_grp')\\\" [(ngModel)]=\\\"material.material_purchase_grp\\\" name=\\\"material_purchase_grp\\\">\\n                                            <option *ngFor=\\\"let purchaseGroup of purchaseGroupList;\\\" value={{purchaseGroup.id}}>{{purchaseGroup.name}} </option>\\n                                        </select>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['material_purchase_grp'].hasError('required')\\\">\\n                                            Please select purchase group\\n                                        </div>\\n                                    </div>\\n    \\n                                    <div class=\\\"form-group col-md-12\\\">\\n                                        <label>Description</label>\\n                                        <textarea class=\\\"form-control\\\" rows=\\\"2\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [ngClass]=\\\"displayFieldCss('description')\\\" [(ngModel)]=\\\"material.description\\\" name=\\\"description\\\">{{material.description}}></textarea>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.controls['description'].hasError('required')\\\">\\n                                            Please enter description\\n                                        </div>\\n                                    </div>\\n                                    \\n                                    <div class=\\\"form-group col-md-12\\\" style=\\\"text-align: right\\\">\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateMaterial()\\\">Submit</button>\\n                                        <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\">Reset</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/material/material-edit/material-edit.component.html\n// module id = ./src/app/layout/material/material-edit/material-edit.component.html\n// module chunks = material.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/material/material-edit/material-edit.component.scss\n// module id = ./src/app/layout/material/material-edit/material-edit.component.scss\n// module chunks = material.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { FormBuilder, FormGroup, FormArray, Validators, } from '@angular/forms';\n\nimport { CompanyService } from '../../company/company.service';\nimport { PurchaseOrganizationService} from '../../purchase-organization/purchase-organization.service';\nimport { PurchaseGroupService} from '../../purchase-group/purchase-group.service';\nimport { MaterialService } from '../material.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-material-edit',\n  templateUrl: './material-edit.component.html',\n  styleUrls: ['./material-edit.component.scss']\n})\nexport class MaterialEditComponent implements OnInit {\n  material;\n  materialTypeList=[];\n  UOMList=[];\n  purchaseGroupList=[];\n  purchaseOrganizationList=[];\n  form: FormGroup;\n  is_taxable_value=false;\n\n  constructor(\n    private materialService: MaterialService,\n    private purchaseOrganizationService: PurchaseOrganizationService, \n    private purchaseGroupService: PurchaseGroupService, \n    private companyService: CompanyService, \n    private router: Router,\n    private route: ActivatedRoute,\n    private toastr: ToastrService,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n\n    this.material = {\n      id: '',\n      material_type: '',\n      material_fullname:'',\n      material_code:'',\n      description:'',\n      is_sales:false,\n      is_taxable:false,\n      material_uom: [\n          {   \n            \"material_for\": '',\n            \"base_uom\": '',\n            \"unit_per_uom\":'',\n            \"unit_uom\":''\n          },\n          {   \n            \"material_for\": '',\n            \"base_uom\": '',\n            \"unit_per_uom\":'',\n            \"unit_uom\":''\n          }\n        ],\n     material_tax: [\n            {\n              \"tax_for\":'',\n              \"igst\":'',\n              \"cgst\":'',\n              \"sgst\":'',\n              \"hsn\":''\n            },\n            {\n              \"tax_for\":'',\n              \"igst\":'',\n              \"cgst\":'',\n              \"sgst\":'',\n              \"hsn\":''\n            }\n        ],\n      \n    };\n\n    this.form = this.formBuilder.group({\n      material_type: [null, Validators.required],\n      material_code:  [null, Validators.required],\n      material_fullname: [null, Validators.required],\n      material_purchase_org:[null, Validators.required],\n      material_purchase_grp:[null, Validators.required],\n      description:[null, Validators.required],\n      material_uom:this.formBuilder.array([ this.createmMaterialUom(1) ]),\n      is_sales: [false],\n      is_taxable: [false],\n      material_tax:this.formBuilder.array([ this.createmMaterialTax(1) ])\n    });\n    \n    this.getMaterialDetails(this.route.snapshot.params['id']);\n    this.getUOMList();\n    this.getMaterialTypeList();\n    this.getPurchaseGroupActiveList();\n    this.getPurchaseOrganizationActiveList();       \n  }\n\n  getMaterialDetails = function (id) {\n    this.materialService.getMaterialDetails(id).subscribe(\n      (data: any[]) => {\n        this.material = data;\n        \n        console.log(this.material);\n        if(this.material.is_sales==true)\n        {\n          this.addMaterialUom();\n        }\n        if(this.material.is_taxable==true)\n        {\n          this.is_taxable_value=true;\n\n          this.addMateriaTax();\n        }\n\n        let material_purchase_org_arr = [];\n        for (let i=0; i<this.material.material_purchase_org.length; i++)\n        {\n          material_purchase_org_arr.push(this.material.material_purchase_org[i].id);\n        }\n        this.material.material_purchase_org = material_purchase_org_arr;\n\n        let material_purchase_grp_arr = [];\n        for (let i=0; i<this.material.material_purchase_grp.length; i++)\n        {\n          material_purchase_grp_arr.push(this.material.material_purchase_grp[i].id);\n        }\n        this.material.material_purchase_grp = material_purchase_grp_arr;\n\n        console.log(this.material);\n      }\n    );\n  }\n\n  createmMaterialUom(for_id) {\n    return this.formBuilder.group({\n      material_for: for_id,\n      base_uom: ['', Validators.required],\n      unit_per_uom: ['', Validators.required],\n      unit_uom: ['', Validators.required]\n    });\n  }\n\n  addMaterialUom(){\n\n    const control = <FormArray>this.form.controls['material_uom'];\n    control.push(this.createmMaterialUom(2));\n\n    // this.material_uom_arr = this.form.get('material_uom') as FormArray;\n    // this.material_uom_arr.push(this.createmMaterialUom(2));\n  }\n\n  deleteMaterialUom(index:number)\n  {\n    const control = <FormArray>this.form.controls['material_uom'];\n    control.removeAt(index);\n\n    // this.material_uom_arr.controls.splice(index);\n    // this.form.value.material_uom.splice(index);\n  }\n\n  showHideMaterialUOM()\n  {\n    if(this.form.value.is_sales!=true)\n    {\n      this.addMaterialUom();\n      if(this.form.value.is_taxable==true)\n      {\n        this.addMateriaTax();\n      }\n    }\n    else{\n      this.deleteMaterialUom(1);\n      if(this.form.value.is_taxable==true)\n      {\n        this.deleteMaterialTax(1);\n      }\n    }\n  }\n\n  createmMaterialTax(for_id) {\n    return this.formBuilder.group({\n      tax_for: for_id,\n      igst: [''],\n      cgst: [''],\n      sgst: [''],\n      hsn: ['']\n    });\n  }\n\n  addMateriaTax(){\n\n    const control = <FormArray>this.form.controls['material_tax'];\n    control.push(this.createmMaterialTax(2));\n\n    // this.material_tax_arr = this.form.get('material_tax') as FormArray;\n    // this.material_tax_arr.push(this.createmMaterialTax(2));\n  }\n\n  deleteMaterialTax(index:number)\n  {\n    const control = <FormArray>this.form.controls['material_tax'];\n    control.removeAt(index);\n\n    // this.material_tax_arr.controls.splice(index);\n    // this.form.value.material_tax.splice(index);\n  }\n\n  showHideMaterialTax()\n  {\n    \n    if(this.form.value.is_taxable!=true)\n    {\n      this.is_taxable_value = true;\n      if(this.form.value.is_sales==true)\n      {\n        this.addMateriaTax();\n      }\n     \n    }\n    else{\n      this.is_taxable_value = false;\n      if(this.form.value.is_sales==true)\n      {\n        this.deleteMaterialTax(1);\n      }\n      \n    }\n  }\n\n  getMaterialTypeList()\n  {\n    this.materialService.getMaterialTypeList().subscribe(\n      (data: any[]) =>{   \n        this.materialTypeList = data['results'];\n        \n      }\n     );\n  }\n  btnClickNav(toNav) {\n    this.router.navigateByUrl('/'+toNav);\n  };\n\n  getUOMList(){\n    this.companyService.getUOMList().subscribe(\n      (data: any[]) =>{   \n        this.UOMList = data['results'];\n       \n      }\n     );\n  };\n\n  getPurchaseGroupActiveList(){\n    this.purchaseGroupService.getPurchaseGroupActiveList().subscribe(\n      (data: any[]) =>{   \n        this.purchaseGroupList = data;\n       \n      }\n     );\n  }\n\n  getPurchaseOrganizationActiveList(){\n    this.purchaseOrganizationService.getPurchaseOrganizationActiveList().subscribe(\n      (data: any[]) =>{   \n        this.purchaseOrganizationList = data;\n        \n      }\n     );\n  }\n\n  \n\n  updateMaterial = function () {\n\n    if (this.form.valid) {\n\n      let material_purchase_org_arr = [];\n      for (let i=0; i<this.form.value.material_purchase_org.length; i++)\n      {\n        material_purchase_org_arr.push({pur_org:this.form.value.material_purchase_org[i]});\n      }\n\n      let material_purchase_grp_arr = [];\n      for (let i=0; i<this.form.value.material_purchase_grp.length; i++)\n      {\n        material_purchase_grp_arr.push({pur_group:this.form.value.material_purchase_grp[i]});\n      }\n\n      this.form.value.material_purchase_org = material_purchase_org_arr;\n      this.form.value.material_purchase_grp = material_purchase_grp_arr;\n\n      if(this.is_taxable_value==false)\n      {\n        this.form.value.material_tax = [];\n      }\n\n      \n      this.materialService.updateMaterial(this.form.value,this.material).subscribe(\n        response => {\n          this.toastr.success('Material updated successfully', '', {\n            timeOut: 3000,\n          });\n          this.goToList('material');          \n        },\n        error => {\n          console.log('error', error)\n          // this.toastr.error('everything is broken', '', {\n          //   timeOut: 3000,\n          // });\n        }\n      );\n    } else {\n      Object.keys(this.form.controls).forEach(field => {\n        const control = this.form.get(field);\n        control.markAsTouched({ onlySelf: true });\n      });\n    }\n  }\n\n  goToList(toNav) {\n    this.router.navigateByUrl('/' + toNav);\n  };\n  \n  displayFieldCss(field: string) {\n    return {\n      'is-invalid': this.form.controls[field].invalid && (this.form.controls[field].dirty || this.form.controls[field].touched),\n      'is-valid': this.form.controls[field].valid && (this.form.controls[field].dirty || this.form.controls[field].touched)\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/material/material-edit/material-edit.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MaterialAddComponent } from './material-add/material-add.component';\nimport { MaterialEditComponent } from './material-edit/material-edit.component';\nimport { MaterialComponent } from './material.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MaterialComponent\n  },\n  {\n    path: 'add',\n    component: MaterialAddComponent\n  },\n  {\n    path: 'edit/:id',\n    component: MaterialEditComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MaterialRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/material/material-routing.module.ts","module.exports = \"<div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <h4 class=\\\"page-header\\\">Material List</h4>\\n    </div>\\n    <div class=\\\"col-md-6 pull-right\\\" style=\\\"text-align: right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-question\\\" aria-hidden=\\\"true\\\"></i> Help</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-refresh\\\"></i> Reload</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClickNav('material/add')\\\"><i class=\\\"fa fa-plus\\\"></i> New Material</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n  </div>\\n    \\n  <hr/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-9\\\">\\n              <h5>Material</h5>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <form role=\\\"form\\\" (ngSubmit)=\\\"dataSearch()\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"search_key\\\">\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\">\\n                      <i class=\\\"fa fa-search\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n\\n      </div>\\n      <table class=\\\"card-body table table-hover table-sm table-bordered\\\">\\n          <thead>\\n              <tr>\\n                  <th>Sl.No.</th>\\n                  <th>Type</th>\\n                  <th>Name</th>\\n                  <th>UOM<small> (Purchase)</small> </th>\\n                  <th>UOM<small> (Sale)</small></th>\\n                  <th>Tax<small> (Purchase % IGST,CGST,SGST,HSN)</small></th>\\n                  <th>Tax<small> (Sale % IGST,CGST,SGST,HSN)</small></th>\\n                  <th>Action</th>\\n              </tr> \\n              </thead>\\n              <tbody>\\n              <tr *ngFor=\\\"let  material of materialList ; let i = index\\\">\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\n                  <td>{{material.material_type.material_type}}</td>\\n                  <td>{{material.material_fullname}}</td>\\n                  <td>{{material.material_uom[0].base_uom.name}} - {{material.material_uom[0]['unit_per_uom']}} {{material.material_uom[0].unit_uom.name}}</td>\\n                  <td><span *ngIf=\\\"material.is_sales==true\\\">{{material.material_uom[1].base_uom.name}} - {{material.material_uom[1]['unit_per_uom']}} {{material.material_uom[1].unit_uom.name}}</span></td>\\n                  <td><span *ngIf=\\\"material.is_taxable==true\\\">{{material.material_tax[0]['igst']}} - {{material.material_tax[0]['cgst']}} - {{material.material_tax[0]['sgst']}} - {{material.material_tax[0]['hsn']}}</span></td>\\n                  <td><span *ngIf=\\\"material.is_sales==true && material.is_taxable==true\\\">{{material.material_tax[1]['igst']}} - {{material.material_tax[1]['cgst']}} - {{material.material_tax[1]['sgst']}} - {{material.material_tax[1]['hsn']}}</span></td>\\n                  <td>\\n                    <a href=\\\"javascript:void(0);\\\" title=\\\"Edit\\\" name=\\\"Edit\\\" [routerLink]=\\\"['/material/edit', material.id]\\\"><i class=\\\"fa fa-eye\\\"></i></a>&nbsp;&nbsp;&nbsp;\\n                    <a href=\\\"javascript:void(0);\\\" title=\\\"Map\\\" name=\\\"Map\\\" (click)=\\\"deleteMaterial(material.id)\\\">\\n                        <i class=\\\"fa fa-trash-o\\\"></i>\\n                      </a>\\n                  </td>\\n              </tr>\\n          </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"totalMaterialList > 10\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card-body pull-right\\\">\\n        <ngb-pagination [collectionSize]=\\\"totalMaterialList\\\" [(page)]=\\\"defaultPagination\\\" (pageChange)=\\\"pagination()\\\" size=\\\"sm\\\"></ngb-pagination>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/material/material.component.html\n// module id = ./src/app/layout/material/material.component.html\n// module chunks = material.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/material/material.component.scss\n// module id = ./src/app/layout/material/material.component.scss\n// module chunks = material.module","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MaterialService } from './material.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-material',\n  templateUrl: './material.component.html',\n  styleUrls: ['./material.component.scss']\n})\nexport class MaterialComponent implements OnInit {\n\n  materialList = [];\n  defaultPagination: number;\n  totalMaterialList: number;\n  search_key = '';\n\n  constructor(\n    private materialService: MaterialService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.defaultPagination = 1;\n    this.defaultPagination = 1;\n    this.getMaterialList();\n  }\n\n  dataSearch() {\n    this.defaultPagination = 1;\n    this.getMaterialList();\n  }\n\n  getMaterialList() {\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('page', this.defaultPagination.toString());\n    params.set('search', this.search_key.toString());\n    this.materialService.getMaterialList(params).subscribe(\n      (data: any[]) => {\n        this.totalMaterialList = data['count'];\n        \n        this.materialList = data['results']\n        console.log(this.materialList);\n      }\n    );\n  };\n\n  deleteMaterial = function (id) {\n    let material;\n\n    material = {\n      id: id\n    };\n\n    this.materialService.deleteMaterial(material).subscribe(\n      response => {\n        this.toastr.success('Material deleted successfully', '', {\n          timeOut: 3000,\n        });\n        this.getMaterialList();\n      },\n      error => {\n        console.log('error', error)\n        // this.toastr.error('everything is broken', '', {\n        //   timeOut: 3000,\n        // });\n      }\n    );\n  };\n \n  btnClickNav(toNav) {\n    this.router.navigateByUrl('/' + toNav);\n  };\n\n  pagination() {\n    this.getMaterialList();\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/material/material.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MaterialRoutingModule } from './material-routing.module';\n\nimport { MaterialAddComponent } from './material-add/material-add.component';\nimport { MaterialEditComponent } from './material-edit/material-edit.component';\nimport { MaterialComponent } from './material.component';\nimport { PageHeaderModule } from '../../shared';\n\nimport { MaterialService } from './material.service';\nimport { CompanyService} from '../company/company.service';\nimport { PurchaseOrganizationService} from '../purchase-organization/purchase-organization.service';\nimport { PurchaseGroupService} from '../purchase-group/purchase-group.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    HttpClientModule,\n    MaterialRoutingModule,\n    PageHeaderModule\n  ],\n  declarations: [MaterialAddComponent, MaterialEditComponent, MaterialComponent],\n  providers: [MaterialService,CompanyService,PurchaseOrganizationService,PurchaseGroupService]\n})\nexport class MaterialModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/material/material.module.ts"],"sourceRoot":"webpack:///"}